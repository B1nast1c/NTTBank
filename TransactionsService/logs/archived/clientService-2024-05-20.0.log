2024-05-19 17:24:44 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 31452 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService)
2024-05-19 17:24:44 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-19 17:24:44 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-19 17:24:44 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-19 17:24:44 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-19 17:24:45 [restartedMain] INFO  : Finished Spring Data repository scanning in 118 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-19 17:24:45 [restartedMain] INFO  : BeanFactory id=cbb1117a-ffcf-3b28-b022-0decc6f6587c
2024-05-19 17:24:45 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:24:45 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:24:45 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:24:45 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@5d2a5d4a, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@52bc1c38]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-19 17:24:45 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:24:45 [cluster-ClusterId{value='664a7c2dc7e2dc7fac927bfb', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:14}] to localhost:27017
2024-05-19 17:24:45 [cluster-rtt-ClusterId{value='664a7c2dc7e2dc7fac927bfb', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:15}] to localhost:27017
2024-05-19 17:24:45 [cluster-ClusterId{value='664a7c2dc7e2dc7fac927bfb', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=48169600}
2024-05-19 17:24:46 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-19 17:24:46 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:24:46 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-19 17:24:46 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-19 17:24:46 [restartedMain] INFO  : Netty started on port 58267
2024-05-19 17:24:46 [restartedMain] INFO  : Updating port to 58267
2024-05-19 17:24:46 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-19 17:24:46 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-19 17:24:46 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-19 17:24:47 [restartedMain] INFO  : Disable delta property : false
2024-05-19 17:24:47 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-19 17:24:47 [restartedMain] INFO  : Force full registry fetch : false
2024-05-19 17:24:47 [restartedMain] INFO  : Application is null : false
2024-05-19 17:24:47 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-19 17:24:47 [restartedMain] INFO  : Application version is -1: true
2024-05-19 17:24:47 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-19 17:24:47 [restartedMain] INFO  : The response status is 200
2024-05-19 17:24:47 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-19 17:24:47 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-19 17:24:47 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716157487425 with initial instances count: 0
2024-05-19 17:24:47 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-19 17:24:47 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716157487431, current=UP, previous=STARTING]
2024-05-19 17:24:47 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-19 17:24:47 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-19 17:24:47 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.961 seconds (JVM running for 4.762)
2024-05-19 17:25:17 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Disable delta property : false
2024-05-19 17:25:17 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Single vip registry refresh property : null
2024-05-19 17:25:17 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Force full registry fetch : false
2024-05-19 17:25:17 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application is null : false
2024-05-19 17:25:17 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Registered Applications size is zero : true
2024-05-19 17:25:17 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application version is -1: false
2024-05-19 17:25:17 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Getting all instance registry info from the eureka server
2024-05-19 17:25:17 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : The response status is 200
2024-05-19 17:29:08 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:16}] to localhost:27017
2024-05-19 17:29:47 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-19 17:31:55 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-05-19 17:31:55 [Thread-5] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-19 17:31:55 [Thread-5] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716157915250, current=DOWN, previous=UP]
2024-05-19 17:31:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-19 17:31:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-19 17:31:57 [Thread-5] INFO  : Shutting down DiscoveryClient ...
2024-05-19 17:32:00 [Thread-5] INFO  : Unregistering ...
2024-05-19 17:32:00 [Thread-5] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - deregister  status: 200
2024-05-19 17:32:00 [Thread-5] INFO  : Completed shut down of DiscoveryClient
2024-05-19 17:32:00 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 31452 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService)
2024-05-19 17:32:00 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-19 17:32:00 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-19 17:32:00 [restartedMain] INFO  : Finished Spring Data repository scanning in 13 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-19 17:32:00 [restartedMain] INFO  : BeanFactory id=cbb1117a-ffcf-3b28-b022-0decc6f6587c
2024-05-19 17:32:00 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:32:00 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:32:00 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:32:00 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@7926bb93, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@52bc1c38]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-19 17:32:00 [cluster-ClusterId{value='664a7de0c7e2dc7fac927bfc', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:17}] to localhost:27017
2024-05-19 17:32:00 [cluster-rtt-ClusterId{value='664a7de0c7e2dc7fac927bfc', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:5, serverValue:18}] to localhost:27017
2024-05-19 17:32:00 [cluster-ClusterId{value='664a7de0c7e2dc7fac927bfc', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1594700}
2024-05-19 17:32:00 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:32:00 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-19 17:32:00 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:32:01 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-19 17:32:01 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-19 17:32:01 [restartedMain] INFO  : Netty started on port 58645
2024-05-19 17:32:01 [restartedMain] INFO  : Updating port to 58645
2024-05-19 17:32:01 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-19 17:32:01 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-19 17:32:01 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-19 17:32:01 [restartedMain] INFO  : Disable delta property : false
2024-05-19 17:32:01 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-19 17:32:01 [restartedMain] INFO  : Force full registry fetch : false
2024-05-19 17:32:01 [restartedMain] INFO  : Application is null : false
2024-05-19 17:32:01 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-19 17:32:01 [restartedMain] INFO  : Application version is -1: true
2024-05-19 17:32:01 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-19 17:32:01 [restartedMain] INFO  : The response status is 200
2024-05-19 17:32:01 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-19 17:32:01 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-19 17:32:01 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716157921243 with initial instances count: 1
2024-05-19 17:32:01 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-19 17:32:01 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716157921243, current=UP, previous=STARTING]
2024-05-19 17:32:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-19 17:32:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-19 17:32:01 [restartedMain] INFO  : Started TransactionsServiceApplication in 0.949 seconds (JVM running for 438.562)
2024-05-19 17:32:01 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-19 17:32:11 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-05-19 17:32:11 [Thread-14] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-19 17:32:11 [Thread-14] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716157931661, current=DOWN, previous=UP]
2024-05-19 17:32:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-19 17:32:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-19 17:32:13 [Thread-14] INFO  : Shutting down DiscoveryClient ...
2024-05-19 17:32:16 [Thread-14] INFO  : Unregistering ...
2024-05-19 17:32:16 [Thread-14] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - deregister  status: 200
2024-05-19 17:32:16 [Thread-14] INFO  : Completed shut down of DiscoveryClient
2024-05-19 17:32:16 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 31452 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService)
2024-05-19 17:32:16 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-19 17:32:17 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-19 17:32:17 [restartedMain] INFO  : Finished Spring Data repository scanning in 12 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-19 17:32:17 [restartedMain] INFO  : BeanFactory id=cbb1117a-ffcf-3b28-b022-0decc6f6587c
2024-05-19 17:32:17 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:32:17 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:32:17 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:32:17 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@355db45b, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@52bc1c38]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-19 17:32:17 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:32:17 [cluster-ClusterId{value='664a7df1c7e2dc7fac927bfd', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:19}] to localhost:27017
2024-05-19 17:32:17 [cluster-rtt-ClusterId{value='664a7df1c7e2dc7fac927bfd', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:20}] to localhost:27017
2024-05-19 17:32:17 [cluster-ClusterId{value='664a7df1c7e2dc7fac927bfd', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3309000}
2024-05-19 17:32:17 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-19 17:32:17 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:32:17 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-19 17:32:17 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-19 17:32:17 [restartedMain] INFO  : Netty started on port 58658
2024-05-19 17:32:17 [restartedMain] INFO  : Updating port to 58658
2024-05-19 17:32:17 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-19 17:32:17 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-19 17:32:17 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-19 17:32:17 [restartedMain] INFO  : Disable delta property : false
2024-05-19 17:32:17 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-19 17:32:17 [restartedMain] INFO  : Force full registry fetch : false
2024-05-19 17:32:17 [restartedMain] INFO  : Application is null : false
2024-05-19 17:32:17 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-19 17:32:17 [restartedMain] INFO  : Application version is -1: true
2024-05-19 17:32:17 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-19 17:32:17 [restartedMain] INFO  : The response status is 200
2024-05-19 17:32:17 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-19 17:32:17 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-19 17:32:17 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716157937533 with initial instances count: 1
2024-05-19 17:32:17 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-19 17:32:17 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716157937534, current=UP, previous=STARTING]
2024-05-19 17:32:17 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-19 17:32:17 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-19 17:32:17 [restartedMain] INFO  : Started TransactionsServiceApplication in 0.87 seconds (JVM running for 454.855)
2024-05-19 17:32:17 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-19 17:32:49 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-05-19 17:32:49 [Thread-24] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-19 17:32:49 [Thread-24] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716157969614, current=DOWN, previous=UP]
2024-05-19 17:32:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-19 17:32:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-19 17:32:51 [Thread-24] INFO  : Shutting down DiscoveryClient ...
2024-05-19 17:32:54 [Thread-24] INFO  : Unregistering ...
2024-05-19 17:32:54 [Thread-24] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - deregister  status: 200
2024-05-19 17:32:54 [Thread-24] INFO  : Completed shut down of DiscoveryClient
2024-05-19 17:32:54 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 31452 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService)
2024-05-19 17:32:54 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-19 17:32:55 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-19 17:32:55 [restartedMain] INFO  : Finished Spring Data repository scanning in 17 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-19 17:32:55 [restartedMain] INFO  : BeanFactory id=cbb1117a-ffcf-3b28-b022-0decc6f6587c
2024-05-19 17:32:55 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:32:55 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:32:55 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:32:55 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@16d52b90, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@52bc1c38]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-19 17:32:55 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:32:55 [cluster-rtt-ClusterId{value='664a7e17c7e2dc7fac927bfe', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:9, serverValue:21}] to localhost:27017
2024-05-19 17:32:55 [cluster-ClusterId{value='664a7e17c7e2dc7fac927bfe', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:8, serverValue:22}] to localhost:27017
2024-05-19 17:32:55 [cluster-ClusterId{value='664a7e17c7e2dc7fac927bfe', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2855300}
2024-05-19 17:32:55 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-19 17:32:55 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:32:55 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-19 17:32:55 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-19 17:32:55 [restartedMain] INFO  : Netty started on port 58663
2024-05-19 17:32:55 [restartedMain] INFO  : Updating port to 58663
2024-05-19 17:32:55 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-19 17:32:55 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-19 17:32:55 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-19 17:32:55 [restartedMain] INFO  : Disable delta property : false
2024-05-19 17:32:55 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-19 17:32:55 [restartedMain] INFO  : Force full registry fetch : false
2024-05-19 17:32:55 [restartedMain] INFO  : Application is null : false
2024-05-19 17:32:55 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-19 17:32:55 [restartedMain] INFO  : Application version is -1: true
2024-05-19 17:32:55 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-19 17:32:55 [restartedMain] INFO  : The response status is 200
2024-05-19 17:32:55 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-19 17:32:55 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-19 17:32:55 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716157975554 with initial instances count: 1
2024-05-19 17:32:55 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-19 17:32:55 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716157975554, current=UP, previous=STARTING]
2024-05-19 17:32:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-19 17:32:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-19 17:32:55 [restartedMain] INFO  : Started TransactionsServiceApplication in 0.931 seconds (JVM running for 492.873)
2024-05-19 17:32:55 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-19 17:33:02 [File Watcher] INFO  : Restarting due to 2 class path changes (0 additions, 2 deletions, 0 modifications)
2024-05-19 17:33:02 [Thread-38] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-19 17:33:02 [Thread-38] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716157982889, current=DOWN, previous=UP]
2024-05-19 17:33:02 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-19 17:33:02 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-19 17:33:04 [Thread-38] INFO  : Shutting down DiscoveryClient ...
2024-05-19 17:33:07 [Thread-38] INFO  : Unregistering ...
2024-05-19 17:33:07 [Thread-38] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - deregister  status: 200
2024-05-19 17:33:07 [Thread-38] INFO  : Completed shut down of DiscoveryClient
2024-05-19 17:33:08 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 31452 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService)
2024-05-19 17:33:08 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-19 17:33:08 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-19 17:33:08 [restartedMain] INFO  : Finished Spring Data repository scanning in 13 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-19 17:33:08 [restartedMain] INFO  : BeanFactory id=cbb1117a-ffcf-3b28-b022-0decc6f6587c
2024-05-19 17:33:08 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:33:08 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:33:08 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:33:08 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@7c53c9d8, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@52bc1c38]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-19 17:33:08 [cluster-ClusterId{value='664a7e24c7e2dc7fac927bff', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:11, serverValue:23}] to localhost:27017
2024-05-19 17:33:08 [cluster-ClusterId{value='664a7e24c7e2dc7fac927bff', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3332200}
2024-05-19 17:33:08 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:33:08 [cluster-rtt-ClusterId{value='664a7e24c7e2dc7fac927bff', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:10, serverValue:24}] to localhost:27017
2024-05-19 17:33:08 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-19 17:33:08 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:33:09 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-19 17:33:09 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-19 17:33:09 [restartedMain] INFO  : Netty started on port 58684
2024-05-19 17:33:09 [restartedMain] INFO  : Updating port to 58684
2024-05-19 17:33:09 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-19 17:33:09 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-19 17:33:09 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-19 17:33:09 [restartedMain] INFO  : Disable delta property : false
2024-05-19 17:33:09 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-19 17:33:09 [restartedMain] INFO  : Force full registry fetch : false
2024-05-19 17:33:09 [restartedMain] INFO  : Application is null : false
2024-05-19 17:33:09 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-19 17:33:09 [restartedMain] INFO  : Application version is -1: true
2024-05-19 17:33:09 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-19 17:33:09 [restartedMain] INFO  : The response status is 200
2024-05-19 17:33:09 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-19 17:33:09 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-19 17:33:09 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716157989386 with initial instances count: 1
2024-05-19 17:33:09 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-19 17:33:09 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716157989387, current=UP, previous=STARTING]
2024-05-19 17:33:09 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-19 17:33:09 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-19 17:33:09 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.56 seconds (JVM running for 506.818)
2024-05-19 17:33:09 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-19 17:33:10 [File Watcher] INFO  : Restarting due to 2 class path changes (2 additions, 0 deletions, 0 modifications)
2024-05-19 17:33:10 [Thread-52] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-19 17:33:10 [Thread-52] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716157990373, current=DOWN, previous=UP]
2024-05-19 17:33:10 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-19 17:33:10 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-19 17:33:12 [Thread-52] INFO  : Shutting down DiscoveryClient ...
2024-05-19 17:33:15 [Thread-52] INFO  : Unregistering ...
2024-05-19 17:33:15 [Thread-52] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - deregister  status: 200
2024-05-19 17:33:15 [Thread-52] INFO  : Completed shut down of DiscoveryClient
2024-05-19 17:33:15 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 31452 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService)
2024-05-19 17:33:15 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-19 17:33:15 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-19 17:33:15 [restartedMain] INFO  : Finished Spring Data repository scanning in 31 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-19 17:33:16 [restartedMain] INFO  : BeanFactory id=cbb1117a-ffcf-3b28-b022-0decc6f6587c
2024-05-19 17:33:16 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:33:16 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:33:16 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:33:16 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@c451d11, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@52bc1c38]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-19 17:33:16 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:33:16 [cluster-rtt-ClusterId{value='664a7e2cc7e2dc7fac927c00', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:13, serverValue:25}] to localhost:27017
2024-05-19 17:33:16 [cluster-ClusterId{value='664a7e2cc7e2dc7fac927c00', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:12, serverValue:26}] to localhost:27017
2024-05-19 17:33:16 [cluster-ClusterId{value='664a7e2cc7e2dc7fac927c00', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3233100}
2024-05-19 17:33:16 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-19 17:33:16 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:33:16 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-19 17:33:16 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-19 17:33:16 [restartedMain] INFO  : Netty started on port 58702
2024-05-19 17:33:16 [restartedMain] INFO  : Updating port to 58702
2024-05-19 17:33:16 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-19 17:33:16 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-19 17:33:16 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-19 17:33:16 [restartedMain] INFO  : Disable delta property : false
2024-05-19 17:33:16 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-19 17:33:16 [restartedMain] INFO  : Force full registry fetch : false
2024-05-19 17:33:16 [restartedMain] INFO  : Application is null : false
2024-05-19 17:33:16 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-19 17:33:16 [restartedMain] INFO  : Application version is -1: true
2024-05-19 17:33:16 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-19 17:33:16 [restartedMain] INFO  : The response status is 200
2024-05-19 17:33:16 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-19 17:33:16 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-19 17:33:16 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716157996715 with initial instances count: 1
2024-05-19 17:33:16 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-19 17:33:16 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716157996716, current=UP, previous=STARTING]
2024-05-19 17:33:16 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-19 17:33:16 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-19 17:33:16 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.374 seconds (JVM running for 514.098)
2024-05-19 17:33:16 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-19 17:33:55 [nioEventLoopGroup-13-3] INFO  : Opened connection [connectionId{localValue:14, serverValue:27}] to localhost:27017
2024-05-19 17:34:49 [File Watcher] INFO  : Restarting due to 5 class path changes (0 additions, 0 deletions, 5 modifications)
2024-05-19 17:34:49 [Thread-66] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-19 17:34:49 [Thread-66] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716158089304, current=DOWN, previous=UP]
2024-05-19 17:34:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-19 17:34:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-19 17:34:51 [Thread-66] INFO  : Shutting down DiscoveryClient ...
2024-05-19 17:34:54 [Thread-66] INFO  : Unregistering ...
2024-05-19 17:34:54 [Thread-66] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - deregister  status: 200
2024-05-19 17:34:54 [Thread-66] INFO  : Completed shut down of DiscoveryClient
2024-05-19 17:34:54 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 31452 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService)
2024-05-19 17:34:54 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-19 17:34:54 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-19 17:34:54 [restartedMain] INFO  : Finished Spring Data repository scanning in 12 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-19 17:34:54 [restartedMain] INFO  : BeanFactory id=cbb1117a-ffcf-3b28-b022-0decc6f6587c
2024-05-19 17:34:54 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:34:54 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:34:54 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:34:54 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@d12e6a0, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@52bc1c38]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-19 17:34:54 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:34:54 [cluster-ClusterId{value='664a7e8ec7e2dc7fac927c01', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:15, serverValue:29}] to localhost:27017
2024-05-19 17:34:54 [cluster-rtt-ClusterId{value='664a7e8ec7e2dc7fac927c01', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:16, serverValue:28}] to localhost:27017
2024-05-19 17:34:54 [cluster-ClusterId{value='664a7e8ec7e2dc7fac927c01', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1625600}
2024-05-19 17:34:54 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-19 17:34:54 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:34:55 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-19 17:34:55 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-19 17:34:55 [restartedMain] INFO  : Netty started on port 58762
2024-05-19 17:34:55 [restartedMain] INFO  : Updating port to 58762
2024-05-19 17:34:55 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-19 17:34:55 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-19 17:34:55 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-19 17:34:55 [restartedMain] INFO  : Disable delta property : false
2024-05-19 17:34:55 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-19 17:34:55 [restartedMain] INFO  : Force full registry fetch : false
2024-05-19 17:34:55 [restartedMain] INFO  : Application is null : false
2024-05-19 17:34:55 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-19 17:34:55 [restartedMain] INFO  : Application version is -1: true
2024-05-19 17:34:55 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-19 17:34:55 [restartedMain] INFO  : The response status is 200
2024-05-19 17:34:55 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-19 17:34:55 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-19 17:34:55 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716158095211 with initial instances count: 1
2024-05-19 17:34:55 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-19 17:34:55 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716158095212, current=UP, previous=STARTING]
2024-05-19 17:34:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-19 17:34:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-19 17:34:55 [restartedMain] INFO  : Started TransactionsServiceApplication in 0.947 seconds (JVM running for 612.57)
2024-05-19 17:34:55 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-19 17:35:02 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-05-19 17:35:02 [Thread-82] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-19 17:35:02 [Thread-82] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716158102561, current=DOWN, previous=UP]
2024-05-19 17:35:02 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-19 17:35:02 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-19 17:35:04 [Thread-82] INFO  : Shutting down DiscoveryClient ...
2024-05-19 17:35:07 [Thread-82] INFO  : Unregistering ...
2024-05-19 17:35:07 [Thread-82] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - deregister  status: 200
2024-05-19 17:35:07 [Thread-82] INFO  : Completed shut down of DiscoveryClient
2024-05-19 17:35:07 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 31452 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService)
2024-05-19 17:35:07 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-19 17:35:07 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-19 17:35:07 [restartedMain] INFO  : Finished Spring Data repository scanning in 10 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-19 17:35:08 [restartedMain] INFO  : BeanFactory id=cbb1117a-ffcf-3b28-b022-0decc6f6587c
2024-05-19 17:35:08 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:35:08 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:35:08 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:35:08 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@6cee3a6b, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@52bc1c38]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-19 17:35:08 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:35:08 [cluster-rtt-ClusterId{value='664a7e9cc7e2dc7fac927c02', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:18, serverValue:30}] to localhost:27017
2024-05-19 17:35:08 [cluster-ClusterId{value='664a7e9cc7e2dc7fac927c02', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:17, serverValue:31}] to localhost:27017
2024-05-19 17:35:08 [cluster-ClusterId{value='664a7e9cc7e2dc7fac927c02', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1302400}
2024-05-19 17:35:08 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-19 17:35:08 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:35:08 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-19 17:35:08 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-19 17:35:08 [restartedMain] INFO  : Netty started on port 58767
2024-05-19 17:35:08 [restartedMain] INFO  : Updating port to 58767
2024-05-19 17:35:08 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-19 17:35:08 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-19 17:35:08 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-19 17:35:08 [restartedMain] INFO  : Disable delta property : false
2024-05-19 17:35:08 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-19 17:35:08 [restartedMain] INFO  : Force full registry fetch : false
2024-05-19 17:35:08 [restartedMain] INFO  : Application is null : false
2024-05-19 17:35:08 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-19 17:35:08 [restartedMain] INFO  : Application version is -1: true
2024-05-19 17:35:08 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-19 17:35:08 [restartedMain] INFO  : The response status is 200
2024-05-19 17:35:08 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-19 17:35:08 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-19 17:35:08 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716158108452 with initial instances count: 1
2024-05-19 17:35:08 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-19 17:35:08 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716158108454, current=UP, previous=STARTING]
2024-05-19 17:35:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-19 17:35:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-19 17:35:08 [restartedMain] INFO  : Started TransactionsServiceApplication in 0.882 seconds (JVM running for 625.779)
2024-05-19 17:35:08 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-19 17:40:02 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-05-19 17:40:02 [Thread-94] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-19 17:40:02 [Thread-94] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716158402705, current=DOWN, previous=UP]
2024-05-19 17:40:02 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-19 17:40:02 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-19 17:40:04 [Thread-94] INFO  : Shutting down DiscoveryClient ...
2024-05-19 17:40:07 [Thread-94] INFO  : Unregistering ...
2024-05-19 17:40:07 [Thread-94] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - deregister  status: 200
2024-05-19 17:40:07 [Thread-94] INFO  : Completed shut down of DiscoveryClient
2024-05-19 17:40:07 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 31452 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService)
2024-05-19 17:40:07 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-19 17:40:08 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-19 17:40:08 [restartedMain] INFO  : Finished Spring Data repository scanning in 13 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-19 17:40:08 [restartedMain] INFO  : BeanFactory id=cbb1117a-ffcf-3b28-b022-0decc6f6587c
2024-05-19 17:40:08 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:40:08 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:40:08 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:40:08 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@29116f37, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@52bc1c38]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-19 17:40:08 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:40:08 [cluster-ClusterId{value='664a7fc8c7e2dc7fac927c03', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:19, serverValue:33}] to localhost:27017
2024-05-19 17:40:08 [cluster-rtt-ClusterId{value='664a7fc8c7e2dc7fac927c03', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:20, serverValue:32}] to localhost:27017
2024-05-19 17:40:08 [cluster-ClusterId{value='664a7fc8c7e2dc7fac927c03', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1097600}
2024-05-19 17:40:08 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-19 17:40:08 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:40:08 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'transactionsController': Requested bean is currently in creation: Is there an unresolvable circular reference?
2024-05-19 17:40:10 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-19 17:40:10 [restartedMain] ERROR : 

***************************
APPLICATION FAILED TO START
***************************

Description:

The dependencies of some of the beans in the application context form a cycle:

┌─────┐
|  transactionsController defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]
↑     ↓
|  transactionsDomainService defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]
└─────┘


Action:

Relying upon circular references is discouraged and they are prohibited by default. Update your application to remove the dependency cycle between beans. As a last resort, it may be possible to break the cycle automatically by setting spring.main.allow-circular-references to true.

2024-05-19 17:40:15 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 31452 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService)
2024-05-19 17:40:15 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-19 17:40:15 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-19 17:40:15 [restartedMain] INFO  : Finished Spring Data repository scanning in 9 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-19 17:40:15 [restartedMain] INFO  : BeanFactory id=cbb1117a-ffcf-3b28-b022-0decc6f6587c
2024-05-19 17:40:15 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:40:15 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:40:15 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:40:15 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@4e7063a8, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@52bc1c38]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-19 17:40:15 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:40:15 [cluster-ClusterId{value='664a7fcfc7e2dc7fac927c04', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:21, serverValue:35}] to localhost:27017
2024-05-19 17:40:15 [cluster-rtt-ClusterId{value='664a7fcfc7e2dc7fac927c04', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:22, serverValue:34}] to localhost:27017
2024-05-19 17:40:15 [cluster-ClusterId{value='664a7fcfc7e2dc7fac927c04', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1599800}
2024-05-19 17:40:15 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-19 17:40:15 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:40:15 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'transactionsController': Requested bean is currently in creation: Is there an unresolvable circular reference?
2024-05-19 17:40:17 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-19 17:40:17 [restartedMain] ERROR : 

***************************
APPLICATION FAILED TO START
***************************

Description:

The dependencies of some of the beans in the application context form a cycle:

┌─────┐
|  transactionsController defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]
↑     ↓
|  transactionsDomainService defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]
└─────┘


Action:

Relying upon circular references is discouraged and they are prohibited by default. Update your application to remove the dependency cycle between beans. As a last resort, it may be possible to break the cycle automatically by setting spring.main.allow-circular-references to true.

2024-05-19 17:40:20 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 31452 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService)
2024-05-19 17:40:20 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-19 17:40:21 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-19 17:40:21 [restartedMain] INFO  : Finished Spring Data repository scanning in 13 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-19 17:40:21 [restartedMain] INFO  : BeanFactory id=cbb1117a-ffcf-3b28-b022-0decc6f6587c
2024-05-19 17:40:21 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:40:21 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:40:21 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:40:21 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@7ad0e2e0, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@52bc1c38]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-19 17:40:21 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:40:21 [cluster-ClusterId{value='664a7fd5c7e2dc7fac927c05', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:23, serverValue:37}] to localhost:27017
2024-05-19 17:40:21 [cluster-ClusterId{value='664a7fd5c7e2dc7fac927c05', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1348600}
2024-05-19 17:40:21 [cluster-rtt-ClusterId{value='664a7fd5c7e2dc7fac927c05', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:24, serverValue:36}] to localhost:27017
2024-05-19 17:40:21 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-19 17:40:21 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:40:21 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'transactionsController': Requested bean is currently in creation: Is there an unresolvable circular reference?
2024-05-19 17:40:23 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-19 17:40:23 [restartedMain] ERROR : 

***************************
APPLICATION FAILED TO START
***************************

Description:

The dependencies of some of the beans in the application context form a cycle:

┌─────┐
|  transactionsController defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]
↑     ↓
|  transactionsDomainService defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]
└─────┘


Action:

Relying upon circular references is discouraged and they are prohibited by default. Update your application to remove the dependency cycle between beans. As a last resort, it may be possible to break the cycle automatically by setting spring.main.allow-circular-references to true.

2024-05-19 17:40:26 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 31452 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService)
2024-05-19 17:40:26 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-19 17:40:26 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-19 17:40:26 [restartedMain] INFO  : Finished Spring Data repository scanning in 14 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-19 17:40:26 [restartedMain] INFO  : BeanFactory id=cbb1117a-ffcf-3b28-b022-0decc6f6587c
2024-05-19 17:40:26 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:40:26 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:40:26 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:40:26 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@21e9fb92, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@52bc1c38]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-19 17:40:26 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:40:26 [cluster-rtt-ClusterId{value='664a7fdac7e2dc7fac927c06', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:26, serverValue:38}] to localhost:27017
2024-05-19 17:40:26 [cluster-ClusterId{value='664a7fdac7e2dc7fac927c06', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:25, serverValue:39}] to localhost:27017
2024-05-19 17:40:26 [cluster-ClusterId{value='664a7fdac7e2dc7fac927c06', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1425900}
2024-05-19 17:40:26 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-19 17:40:26 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:40:26 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'transactionsController': Requested bean is currently in creation: Is there an unresolvable circular reference?
2024-05-19 17:40:28 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-19 17:40:28 [restartedMain] ERROR : 

***************************
APPLICATION FAILED TO START
***************************

Description:

The dependencies of some of the beans in the application context form a cycle:

┌─────┐
|  transactionsController defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]
↑     ↓
|  transactionsDomainService defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]
└─────┘


Action:

Relying upon circular references is discouraged and they are prohibited by default. Update your application to remove the dependency cycle between beans. As a last resort, it may be possible to break the cycle automatically by setting spring.main.allow-circular-references to true.

2024-05-19 17:41:19 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 27900 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService)
2024-05-19 17:41:19 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-19 17:41:19 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-19 17:41:19 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-19 17:41:20 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-19 17:41:20 [restartedMain] INFO  : Finished Spring Data repository scanning in 112 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-19 17:41:20 [restartedMain] INFO  : BeanFactory id=cbb1117a-ffcf-3b28-b022-0decc6f6587c
2024-05-19 17:41:20 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:41:20 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:41:20 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:41:21 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@4ebe1dfb, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@41ca66e6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-19 17:41:21 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:41:21 [cluster-rtt-ClusterId{value='664a801162fe603892a91ca5', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:41}] to localhost:27017
2024-05-19 17:41:21 [cluster-ClusterId{value='664a801162fe603892a91ca5', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:40}] to localhost:27017
2024-05-19 17:41:21 [cluster-ClusterId{value='664a801162fe603892a91ca5', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=49044100}
2024-05-19 17:41:21 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-19 17:41:21 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:41:21 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'transactionsController': Requested bean is currently in creation: Is there an unresolvable circular reference?
2024-05-19 17:41:23 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-19 17:41:23 [restartedMain] ERROR : 

***************************
APPLICATION FAILED TO START
***************************

Description:

The dependencies of some of the beans in the application context form a cycle:

┌─────┐
|  transactionsController defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]
↑     ↓
|  transactionsDomainService defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]
└─────┘


Action:

Relying upon circular references is discouraged and they are prohibited by default. Update your application to remove the dependency cycle between beans. As a last resort, it may be possible to break the cycle automatically by setting spring.main.allow-circular-references to true.

2024-05-19 17:43:06 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 29512 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService)
2024-05-19 17:43:06 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-19 17:43:06 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-19 17:43:06 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-19 17:43:07 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-19 17:43:07 [restartedMain] INFO  : Finished Spring Data repository scanning in 131 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-19 17:43:07 [restartedMain] INFO  : BeanFactory id=cbb1117a-ffcf-3b28-b022-0decc6f6587c
2024-05-19 17:43:07 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:43:07 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:43:07 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:43:08 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@5c5be555, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5d2a5d4a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-19 17:43:08 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:43:08 [cluster-rtt-ClusterId{value='664a807b1fcdda387ec767b5', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:42}] to localhost:27017
2024-05-19 17:43:08 [cluster-ClusterId{value='664a807b1fcdda387ec767b5', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:43}] to localhost:27017
2024-05-19 17:43:08 [cluster-ClusterId{value='664a807b1fcdda387ec767b5', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=54463700}
2024-05-19 17:43:08 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-19 17:43:08 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:43:08 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-19 17:43:09 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-19 17:43:09 [restartedMain] INFO  : Netty started on port 58856
2024-05-19 17:43:09 [restartedMain] INFO  : Updating port to 58856
2024-05-19 17:43:09 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-19 17:43:09 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-19 17:43:09 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-19 17:43:09 [restartedMain] INFO  : Disable delta property : false
2024-05-19 17:43:09 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-19 17:43:09 [restartedMain] INFO  : Force full registry fetch : false
2024-05-19 17:43:09 [restartedMain] INFO  : Application is null : false
2024-05-19 17:43:09 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-19 17:43:09 [restartedMain] INFO  : Application version is -1: true
2024-05-19 17:43:09 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-19 17:43:09 [restartedMain] INFO  : The response status is 200
2024-05-19 17:43:09 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-19 17:43:09 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-19 17:43:09 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716158589581 with initial instances count: 0
2024-05-19 17:43:09 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-19 17:43:09 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716158589583, current=UP, previous=STARTING]
2024-05-19 17:43:09 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-19 17:43:09 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-19 17:43:09 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.786 seconds (JVM running for 4.447)
2024-05-19 17:43:39 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Disable delta property : false
2024-05-19 17:43:39 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Single vip registry refresh property : null
2024-05-19 17:43:39 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Force full registry fetch : false
2024-05-19 17:43:39 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application is null : false
2024-05-19 17:43:39 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Registered Applications size is zero : true
2024-05-19 17:43:39 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application version is -1: false
2024-05-19 17:43:39 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Getting all instance registry info from the eureka server
2024-05-19 17:43:39 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : The response status is 200
2024-05-19 17:48:09 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-19 17:49:30 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-05-19 17:49:30 [Thread-5] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-19 17:49:30 [Thread-5] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716158970315, current=DOWN, previous=UP]
2024-05-19 17:49:30 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-19 17:49:30 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-19 17:49:32 [Thread-5] INFO  : Shutting down DiscoveryClient ...
2024-05-19 17:49:35 [Thread-5] INFO  : Unregistering ...
2024-05-19 17:49:35 [Thread-5] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - deregister  status: 200
2024-05-19 17:49:35 [Thread-5] INFO  : Completed shut down of DiscoveryClient
2024-05-19 17:49:35 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 29512 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService)
2024-05-19 17:49:35 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-19 17:49:35 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-19 17:49:35 [restartedMain] INFO  : Finished Spring Data repository scanning in 15 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-19 17:49:36 [restartedMain] INFO  : BeanFactory id=cbb1117a-ffcf-3b28-b022-0decc6f6587c
2024-05-19 17:49:36 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:49:36 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:49:36 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:49:36 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3956059, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5d2a5d4a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-19 17:49:36 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:49:36 [cluster-rtt-ClusterId{value='664a82001fcdda387ec767b6', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:45}] to localhost:27017
2024-05-19 17:49:36 [cluster-ClusterId{value='664a82001fcdda387ec767b6', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:3, serverValue:44}] to localhost:27017
2024-05-19 17:49:36 [cluster-ClusterId{value='664a82001fcdda387ec767b6', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=8989900}
2024-05-19 17:49:36 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-19 17:49:36 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:49:36 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-19 17:49:37 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-19 17:49:37 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-19 17:49:37 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-19 17:49:37 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-19 17:49:37 [restartedMain] INFO  : Disable delta property : false
2024-05-19 17:49:37 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-19 17:49:37 [restartedMain] INFO  : Force full registry fetch : false
2024-05-19 17:49:37 [restartedMain] INFO  : Application is null : false
2024-05-19 17:49:37 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-19 17:49:37 [restartedMain] INFO  : Application version is -1: true
2024-05-19 17:49:37 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-19 17:49:37 [restartedMain] INFO  : The response status is 200
2024-05-19 17:49:37 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-19 17:49:37 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-19 17:49:37 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716158977150 with initial instances count: 1
2024-05-19 17:49:37 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-19 17:49:37 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716158977151, current=UP, previous=STARTING]
2024-05-19 17:49:37 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-19 17:49:37 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-19 17:49:37 [restartedMain] INFO  : Netty started on port 8081
2024-05-19 17:49:37 [restartedMain] INFO  : Updating port to 8081
2024-05-19 17:49:37 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.918 seconds (JVM running for 392.118)
2024-05-19 17:49:37 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-19 17:49:38 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-05-19 17:49:38 [Thread-10] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-19 17:49:38 [Thread-10] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716158978013, current=DOWN, previous=UP]
2024-05-19 17:49:38 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-19 17:49:38 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-19 17:49:40 [Thread-10] INFO  : Shutting down DiscoveryClient ...
2024-05-19 17:49:43 [Thread-10] INFO  : Unregistering ...
2024-05-19 17:49:43 [Thread-10] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-19 17:49:43 [Thread-10] INFO  : Completed shut down of DiscoveryClient
2024-05-19 17:49:43 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 29512 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService)
2024-05-19 17:49:43 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-19 17:49:43 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-19 17:49:43 [restartedMain] INFO  : Finished Spring Data repository scanning in 25 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-19 17:49:43 [restartedMain] INFO  : BeanFactory id=cbb1117a-ffcf-3b28-b022-0decc6f6587c
2024-05-19 17:49:43 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:49:43 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:49:43 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:49:43 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1e10d473, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5d2a5d4a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-19 17:49:43 [cluster-rtt-ClusterId{value='664a82071fcdda387ec767b7', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:47}] to localhost:27017
2024-05-19 17:49:43 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:49:43 [cluster-ClusterId{value='664a82071fcdda387ec767b7', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:5, serverValue:46}] to localhost:27017
2024-05-19 17:49:43 [cluster-ClusterId{value='664a82071fcdda387ec767b7', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=5085700}
2024-05-19 17:49:43 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-19 17:49:43 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:49:44 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-19 17:49:44 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-19 17:49:44 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-19 17:49:44 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-19 17:49:44 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-19 17:49:44 [restartedMain] INFO  : Disable delta property : false
2024-05-19 17:49:44 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-19 17:49:44 [restartedMain] INFO  : Force full registry fetch : false
2024-05-19 17:49:44 [restartedMain] INFO  : Application is null : false
2024-05-19 17:49:44 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-19 17:49:44 [restartedMain] INFO  : Application version is -1: true
2024-05-19 17:49:44 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-19 17:49:44 [restartedMain] INFO  : The response status is 200
2024-05-19 17:49:44 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-19 17:49:44 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-19 17:49:44 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716158984452 with initial instances count: 1
2024-05-19 17:49:44 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-19 17:49:44 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716158984453, current=UP, previous=STARTING]
2024-05-19 17:49:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-19 17:49:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-19 17:49:44 [restartedMain] INFO  : Netty started on port 8081
2024-05-19 17:49:44 [restartedMain] INFO  : Updating port to 8081
2024-05-19 17:49:44 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.513 seconds (JVM running for 399.408)
2024-05-19 17:49:44 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-19 17:54:44 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-19 17:57:11 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-05-19 17:57:11 [Thread-24] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-19 17:57:11 [Thread-24] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716159431809, current=DOWN, previous=UP]
2024-05-19 17:57:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-19 17:57:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-19 17:57:13 [Thread-24] INFO  : Shutting down DiscoveryClient ...
2024-05-19 17:57:16 [DiscoveryClient-0] WARN  : task supervisor shutting down, can't accept the task
2024-05-19 17:57:16 [Thread-24] INFO  : Unregistering ...
2024-05-19 17:57:16 [Thread-24] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-19 17:57:16 [Thread-24] INFO  : Completed shut down of DiscoveryClient
2024-05-19 17:57:17 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 29512 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService)
2024-05-19 17:57:17 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-19 17:57:17 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-19 17:57:17 [restartedMain] INFO  : Finished Spring Data repository scanning in 14 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-19 17:57:17 [restartedMain] INFO  : BeanFactory id=cbb1117a-ffcf-3b28-b022-0decc6f6587c
2024-05-19 17:57:17 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:57:17 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:57:17 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:57:17 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@34cc0b0c, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5d2a5d4a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-19 17:57:17 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:57:17 [cluster-rtt-ClusterId{value='664a83cd1fcdda387ec767b8', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:8, serverValue:48}] to localhost:27017
2024-05-19 17:57:17 [cluster-ClusterId{value='664a83cd1fcdda387ec767b8', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:49}] to localhost:27017
2024-05-19 17:57:17 [cluster-ClusterId{value='664a83cd1fcdda387ec767b8', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2194200}
2024-05-19 17:57:17 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-19 17:57:17 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:57:17 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-19 17:57:17 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-19 17:57:17 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-19 17:57:17 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-19 17:57:17 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-19 17:57:17 [restartedMain] INFO  : Disable delta property : false
2024-05-19 17:57:17 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-19 17:57:17 [restartedMain] INFO  : Force full registry fetch : false
2024-05-19 17:57:17 [restartedMain] INFO  : Application is null : false
2024-05-19 17:57:17 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-19 17:57:17 [restartedMain] INFO  : Application version is -1: true
2024-05-19 17:57:17 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-19 17:57:17 [restartedMain] INFO  : The response status is 200
2024-05-19 17:57:17 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-19 17:57:17 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-19 17:57:17 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716159437858 with initial instances count: 1
2024-05-19 17:57:17 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-19 17:57:17 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716159437860, current=UP, previous=STARTING]
2024-05-19 17:57:17 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-19 17:57:17 [restartedMain] INFO  : Netty started on port 8081
2024-05-19 17:57:17 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-19 17:57:17 [restartedMain] INFO  : Updating port to 8081
2024-05-19 17:57:18 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.088 seconds (JVM running for 852.743)
2024-05-19 17:57:18 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-19 17:57:21 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-19 17:57:21 [Thread-38] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-19 17:57:21 [Thread-38] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716159441060, current=DOWN, previous=UP]
2024-05-19 17:57:21 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-19 17:57:21 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-19 17:57:23 [Thread-38] INFO  : Shutting down DiscoveryClient ...
2024-05-19 17:57:26 [Thread-38] INFO  : Unregistering ...
2024-05-19 17:57:26 [Thread-38] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-19 17:57:26 [Thread-38] INFO  : Completed shut down of DiscoveryClient
2024-05-19 17:57:26 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 29512 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService)
2024-05-19 17:57:26 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-19 17:57:26 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-19 17:57:26 [restartedMain] INFO  : Finished Spring Data repository scanning in 13 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-19 17:57:26 [restartedMain] INFO  : BeanFactory id=cbb1117a-ffcf-3b28-b022-0decc6f6587c
2024-05-19 17:57:26 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:57:26 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:57:26 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:57:26 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@73e5f049, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5d2a5d4a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-19 17:57:26 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:57:26 [cluster-ClusterId{value='664a83d61fcdda387ec767b9', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:10, serverValue:51}] to localhost:27017
2024-05-19 17:57:26 [cluster-ClusterId{value='664a83d61fcdda387ec767b9', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3276700}
2024-05-19 17:57:26 [cluster-rtt-ClusterId{value='664a83d61fcdda387ec767b9', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:9, serverValue:50}] to localhost:27017
2024-05-19 17:57:26 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-19 17:57:26 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:57:27 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-19 17:57:27 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-19 17:57:27 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-19 17:57:27 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-19 17:57:27 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-19 17:57:27 [restartedMain] INFO  : Disable delta property : false
2024-05-19 17:57:27 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-19 17:57:27 [restartedMain] INFO  : Force full registry fetch : false
2024-05-19 17:57:27 [restartedMain] INFO  : Application is null : false
2024-05-19 17:57:27 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-19 17:57:27 [restartedMain] INFO  : Application version is -1: true
2024-05-19 17:57:27 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-19 17:57:27 [restartedMain] INFO  : The response status is 200
2024-05-19 17:57:27 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-19 17:57:27 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-19 17:57:27 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716159447636 with initial instances count: 1
2024-05-19 17:57:27 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-19 17:57:27 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716159447637, current=UP, previous=STARTING]
2024-05-19 17:57:27 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-19 17:57:27 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-19 17:57:27 [restartedMain] INFO  : Netty started on port 8081
2024-05-19 17:57:27 [restartedMain] INFO  : Updating port to 8081
2024-05-19 17:57:27 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.652 seconds (JVM running for 862.634)
2024-05-19 17:57:27 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-19 17:57:28 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-19 17:57:28 [Thread-52] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-19 17:57:28 [Thread-52] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716159448542, current=DOWN, previous=UP]
2024-05-19 17:57:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-19 17:57:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-19 17:57:30 [Thread-52] INFO  : Shutting down DiscoveryClient ...
2024-05-19 17:57:33 [Thread-52] INFO  : Unregistering ...
2024-05-19 17:57:33 [Thread-52] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-19 17:57:33 [Thread-52] INFO  : Completed shut down of DiscoveryClient
2024-05-19 17:57:33 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 29512 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService)
2024-05-19 17:57:33 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-19 17:57:34 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-19 17:57:34 [restartedMain] INFO  : Finished Spring Data repository scanning in 19 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-19 17:57:34 [restartedMain] INFO  : BeanFactory id=cbb1117a-ffcf-3b28-b022-0decc6f6587c
2024-05-19 17:57:34 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:57:34 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:57:34 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 17:57:34 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@5d3a9904, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5d2a5d4a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-19 17:57:34 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:57:34 [cluster-rtt-ClusterId{value='664a83de1fcdda387ec767ba', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:12, serverValue:53}] to localhost:27017
2024-05-19 17:57:34 [cluster-ClusterId{value='664a83de1fcdda387ec767ba', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:11, serverValue:52}] to localhost:27017
2024-05-19 17:57:34 [cluster-ClusterId{value='664a83de1fcdda387ec767ba', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2978100}
2024-05-19 17:57:34 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-19 17:57:34 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 17:57:34 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-19 17:57:34 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-19 17:57:34 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-19 17:57:34 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-19 17:57:34 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-19 17:57:34 [restartedMain] INFO  : Disable delta property : false
2024-05-19 17:57:34 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-19 17:57:34 [restartedMain] INFO  : Force full registry fetch : false
2024-05-19 17:57:34 [restartedMain] INFO  : Application is null : false
2024-05-19 17:57:34 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-19 17:57:34 [restartedMain] INFO  : Application version is -1: true
2024-05-19 17:57:34 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-19 17:57:34 [restartedMain] INFO  : The response status is 200
2024-05-19 17:57:34 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-19 17:57:34 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-19 17:57:34 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716159454799 with initial instances count: 1
2024-05-19 17:57:34 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-19 17:57:34 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716159454800, current=UP, previous=STARTING]
2024-05-19 17:57:34 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-19 17:57:34 [restartedMain] INFO  : Netty started on port 8081
2024-05-19 17:57:34 [restartedMain] INFO  : Updating port to 8081
2024-05-19 17:57:34 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-19 17:57:35 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.394 seconds (JVM running for 869.832)
2024-05-19 17:57:35 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-19 18:00:13 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-05-19 18:00:13 [Thread-66] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-19 18:00:13 [Thread-66] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716159613428, current=DOWN, previous=UP]
2024-05-19 18:00:13 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-19 18:00:13 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-19 18:00:15 [Thread-66] INFO  : Shutting down DiscoveryClient ...
2024-05-19 18:00:18 [Thread-66] INFO  : Unregistering ...
2024-05-19 18:00:18 [Thread-66] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-19 18:00:18 [Thread-66] INFO  : Completed shut down of DiscoveryClient
2024-05-19 18:00:18 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 29512 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService)
2024-05-19 18:00:18 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-19 18:00:18 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-19 18:00:18 [restartedMain] INFO  : Finished Spring Data repository scanning in 11 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-19 18:00:19 [restartedMain] INFO  : BeanFactory id=cbb1117a-ffcf-3b28-b022-0decc6f6587c
2024-05-19 18:00:19 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 18:00:19 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 18:00:19 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 18:00:19 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@ca59e93, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5d2a5d4a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-19 18:00:19 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 18:00:19 [cluster-ClusterId{value='664a84831fcdda387ec767bb', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:13, serverValue:54}] to localhost:27017
2024-05-19 18:00:19 [cluster-rtt-ClusterId{value='664a84831fcdda387ec767bb', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:14, serverValue:55}] to localhost:27017
2024-05-19 18:00:19 [cluster-ClusterId{value='664a84831fcdda387ec767bb', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2345300}
2024-05-19 18:00:19 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-19 18:00:19 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 18:00:19 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\infrastructure\adapters\TransactionsAdapter.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'project.transactionsservice.domain.validations.TransactionDomainValidations' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2024-05-19 18:00:21 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-19 18:00:21 [restartedMain] ERROR : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 1 of constructor in project.transactionsservice.infrastructure.adapters.TransactionsAdapter required a bean of type 'project.transactionsservice.domain.validations.TransactionDomainValidations' that could not be found.


Action:

Consider defining a bean of type 'project.transactionsservice.domain.validations.TransactionDomainValidations' in your configuration.

2024-05-19 18:52:53 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 29512 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService)
2024-05-19 18:52:53 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-19 18:52:53 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-19 18:52:54 [restartedMain] INFO  : Finished Spring Data repository scanning in 12 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-19 18:52:54 [restartedMain] INFO  : BeanFactory id=cbb1117a-ffcf-3b28-b022-0decc6f6587c
2024-05-19 18:52:54 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 18:52:54 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 18:52:54 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 18:52:54 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@5d85bc25, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5d2a5d4a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-19 18:52:54 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 18:52:54 [cluster-ClusterId{value='664a90d61fcdda387ec767bc', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:16, serverValue:57}] to localhost:27017
2024-05-19 18:52:54 [cluster-ClusterId{value='664a90d61fcdda387ec767bc', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1625400}
2024-05-19 18:52:54 [cluster-rtt-ClusterId{value='664a90d61fcdda387ec767bc', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:15, serverValue:56}] to localhost:27017
2024-05-19 18:52:54 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-19 18:52:54 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 18:52:54 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\infrastructure\adapters\TransactionsAdapter.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'project.transactionsservice.domain.validations.TransactionDomainValidations' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2024-05-19 18:52:56 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-19 18:52:56 [restartedMain] ERROR : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 1 of constructor in project.transactionsservice.infrastructure.adapters.TransactionsAdapter required a bean of type 'project.transactionsservice.domain.validations.TransactionDomainValidations' that could not be found.


Action:

Consider defining a bean of type 'project.transactionsservice.domain.validations.TransactionDomainValidations' in your configuration.

2024-05-19 18:54:59 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 29512 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService)
2024-05-19 18:54:59 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-19 18:54:59 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-19 18:54:59 [restartedMain] INFO  : Finished Spring Data repository scanning in 14 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-19 18:54:59 [restartedMain] INFO  : BeanFactory id=cbb1117a-ffcf-3b28-b022-0decc6f6587c
2024-05-19 18:54:59 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 18:54:59 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 18:54:59 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-19 18:54:59 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@56127086, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5d2a5d4a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-19 18:54:59 [cluster-rtt-ClusterId{value='664a91531fcdda387ec767bd', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:18, serverValue:58}] to localhost:27017
2024-05-19 18:54:59 [cluster-ClusterId{value='664a91531fcdda387ec767bd', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:17, serverValue:59}] to localhost:27017
2024-05-19 18:54:59 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 18:54:59 [cluster-ClusterId{value='664a91531fcdda387ec767bd', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1623200}
2024-05-19 18:54:59 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-19 18:54:59 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-19 18:54:59 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionsAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\infrastructure\adapters\TransactionsAdapter.class]: Bean instantiation via constructor failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [project.transactionsservice.infrastructure.adapters.TransactionsAdapter]: Constructor threw exception; nested exception is java.lang.Error: Unresolved compilation problems: 
	Syntax error on token "pr", invalid Modifiers
	The method flatMap(Function<? super TransactionDTO,? extends Mono<? extends R>>) in the type Mono<TransactionDTO> is not applicable for the arguments ((<no type> first) -> {})
	client cannot be resolved to a variable
	clientRepository cannot be resolved

2024-05-19 18:55:01 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-19 18:55:01 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionsAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\infrastructure\adapters\TransactionsAdapter.class]: Bean instantiation via constructor failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [project.transactionsservice.infrastructure.adapters.TransactionsAdapter]: Constructor threw exception; nested exception is java.lang.Error: Unresolved compilation problems: 
	Syntax error on token "pr", invalid Modifiers
	The method flatMap(Function<? super TransactionDTO,? extends Mono<? extends R>>) in the type Mono<TransactionDTO> is not applicable for the arguments ((<no type> first) -> {})
	client cannot be resolved to a variable
	clientRepository cannot be resolved

	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.transactionsservice.TransactionsServiceApplication.main(TransactionsServiceApplication.java:16)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionsAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\infrastructure\adapters\TransactionsAdapter.class]: Bean instantiation via constructor failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [project.transactionsservice.infrastructure.adapters.TransactionsAdapter]: Constructor threw exception; nested exception is java.lang.Error: Unresolved compilation problems: 
	Syntax error on token "pr", invalid Modifiers
	The method flatMap(Function<? super TransactionDTO,? extends Mono<? extends R>>) in the type Mono<TransactionDTO> is not applicable for the arguments ((<no type> first) -> {})
	client cannot be resolved to a variable
	clientRepository cannot be resolved

	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 22 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionsAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\infrastructure\adapters\TransactionsAdapter.class]: Bean instantiation via constructor failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [project.transactionsservice.infrastructure.adapters.TransactionsAdapter]: Constructor threw exception; nested exception is java.lang.Error: Unresolved compilation problems: 
	Syntax error on token "pr", invalid Modifiers
	The method flatMap(Function<? super TransactionDTO,? extends Mono<? extends R>>) in the type Mono<TransactionDTO> is not applicable for the arguments ((<no type> first) -> {})
	client cannot be resolved to a variable
	clientRepository cannot be resolved

	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:310)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:291)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 36 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [project.transactionsservice.infrastructure.adapters.TransactionsAdapter]: Constructor threw exception; nested exception is java.lang.Error: Unresolved compilation problems: 
	Syntax error on token "pr", invalid Modifiers
	The method flatMap(Function<? super TransactionDTO,? extends Mono<? extends R>>) in the type Mono<TransactionDTO> is not applicable for the arguments ((<no type> first) -> {})
	client cannot be resolved to a variable
	clientRepository cannot be resolved

	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:226)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:117)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:306)
	... 50 common frames omitted
Caused by: java.lang.Error: Unresolved compilation problems: 
	Syntax error on token "pr", invalid Modifiers
	The method flatMap(Function<? super TransactionDTO,? extends Mono<? extends R>>) in the type Mono<TransactionDTO> is not applicable for the arguments ((<no type> first) -> {})
	client cannot be resolved to a variable
	clientRepository cannot be resolved

	at project.transactionsservice.infrastructure.adapters.TransactionsAdapter.<init>(TransactionsAdapter.java:20)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:213)
	... 52 common frames omitted
