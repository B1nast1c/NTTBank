2024-05-20 00:07:15 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 27788 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 00:07:15 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 00:07:15 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 00:07:15 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 00:07:15 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [project.FinalProjectApplication]; nested exception is org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name 'bankAccountController' for bean class [project.infrastructure.controller.BankAccountController] conflicts with existing, non-compatible bean definition of same name and class [project.application.controller.BankAccountController]
2024-05-20 00:07:15 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [project.FinalProjectApplication]; nested exception is org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name 'bankAccountController' for bean class [project.infrastructure.controller.BankAccountController] conflicts with existing, non-compatible bean definition of same name and class [project.application.controller.BankAccountController]
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:188)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:331)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:756)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:572)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name 'bankAccountController' for bean class [project.infrastructure.controller.BankAccountController] conflicts with existing, non-compatible bean definition of same name and class [project.application.controller.BankAccountController]
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.checkCandidate(ClassPathBeanDefinitionScanner.java:349)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:287)
	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:128)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:295)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:249)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:206)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:174)
	... 18 common frames omitted
2024-05-20 00:10:23 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 6676 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 00:10:23 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 00:10:23 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 00:10:23 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 00:10:24 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 00:10:24 [restartedMain] INFO  : Finished Spring Data repository scanning in 64 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 00:10:24 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 00:10:24 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:10:24 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:10:24 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:10:24 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@7a6380d0, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@1931c21a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 00:10:25 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:10:25 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 00:10:25 [cluster-rtt-ClusterId{value='664adb40938fcd231d72605a', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:85}] to localhost:27017
2024-05-20 00:10:25 [cluster-ClusterId{value='664adb40938fcd231d72605a', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:84}] to localhost:27017
2024-05-20 00:10:25 [cluster-ClusterId{value='664adb40938fcd231d72605a', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=43367800}
2024-05-20 00:10:25 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:10:25 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 00:10:26 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 00:10:26 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 00:10:26 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 00:10:26 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 00:10:26 [restartedMain] INFO  : Disable delta property : false
2024-05-20 00:10:26 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 00:10:26 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 00:10:26 [restartedMain] INFO  : Application is null : false
2024-05-20 00:10:26 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 00:10:26 [restartedMain] INFO  : Application version is -1: true
2024-05-20 00:10:26 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 00:10:26 [restartedMain] INFO  : The response status is 200
2024-05-20 00:10:26 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 00:10:26 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 00:10:26 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716181826706 with initial instances count: 1
2024-05-20 00:10:26 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 00:10:26 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716181826707, current=UP, previous=STARTING]
2024-05-20 00:10:26 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:10:26 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 00:10:26 [restartedMain] INFO  : Updating port to 8081
2024-05-20 00:10:26 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:10:27 [restartedMain] INFO  : Started FinalProjectApplication in 4.102 seconds (JVM running for 4.967)
2024-05-20 00:11:39 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:86}] to localhost:27017
2024-05-20 00:15:26 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 00:15:40 [File Watcher] INFO  : Restarting due to 49 class path changes (0 additions, 48 deletions, 1 modification)
2024-05-20 00:15:40 [Thread-1] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 00:15:40 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716182140871, current=DOWN, previous=UP]
2024-05-20 00:15:40 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:15:40 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:15:42 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 00:15:45 [Thread-1] INFO  : Unregistering ...
2024-05-20 00:15:46 [Thread-1] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 00:15:46 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 00:15:46 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 6676 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 00:15:46 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 00:15:46 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 00:15:46 [restartedMain] INFO  : Finished Spring Data repository scanning in 7 ms. Found 0 Reactive MongoDB repository interfaces.
2024-05-20 00:15:46 [restartedMain] INFO  : BeanFactory id=5b0504c7-da3e-3a33-8df8-bf101169b513
2024-05-20 00:15:46 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:15:46 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:15:46 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:15:46 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'domainBAccountService': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [project.application.service.domainService.DomainBAccountService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4123135c]
2024-05-20 00:15:46 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-20 00:15:46 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'domainBAccountService': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [project.application.service.domainService.DomainBAccountService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4123135c]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'domainBAccountService': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [project.application.service.domainService.DomainBAccountService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4123135c]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:298)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 24 common frames omitted
Caused by: java.lang.IllegalStateException: Failed to introspect Class [project.application.service.domainService.DomainBAccountService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4123135c]
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:485)
	at org.springframework.util.ReflectionUtils.doWithLocalMethods(ReflectionUtils.java:321)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:276)
	... 37 common frames omitted
Caused by: java.lang.NoClassDefFoundError: project/domain/ports/BAccountPort
	at java.base/java.lang.Class.getDeclaredMethods0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3166)
	at java.base/java.lang.Class.getDeclaredMethods(Class.java:2309)
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:467)
	... 39 common frames omitted
Caused by: java.lang.ClassNotFoundException: project.domain.ports.BAccountPort
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:398)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 43 common frames omitted
2024-05-20 00:15:48 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 6676 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 00:15:48 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 00:15:48 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 00:15:48 [restartedMain] INFO  : Finished Spring Data repository scanning in 5 ms. Found 0 Reactive MongoDB repository interfaces.
2024-05-20 00:15:48 [restartedMain] INFO  : BeanFactory id=5b0504c7-da3e-3a33-8df8-bf101169b513
2024-05-20 00:15:48 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:15:48 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:15:48 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:15:48 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'domainBAccountService': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [project.application.service.domainService.DomainBAccountService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4a50f2c0]
2024-05-20 00:15:48 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-20 00:15:48 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'domainBAccountService': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [project.application.service.domainService.DomainBAccountService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4a50f2c0]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'domainBAccountService': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [project.application.service.domainService.DomainBAccountService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4a50f2c0]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:298)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 24 common frames omitted
Caused by: java.lang.IllegalStateException: Failed to introspect Class [project.application.service.domainService.DomainBAccountService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4a50f2c0]
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:485)
	at org.springframework.util.ReflectionUtils.doWithLocalMethods(ReflectionUtils.java:321)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:276)
	... 37 common frames omitted
Caused by: java.lang.NoClassDefFoundError: project/domain/ports/BAccountPort
	at java.base/java.lang.Class.getDeclaredMethods0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3166)
	at java.base/java.lang.Class.getDeclaredMethods(Class.java:2309)
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:467)
	... 39 common frames omitted
Caused by: java.lang.ClassNotFoundException: project.domain.ports.BAccountPort
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:398)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 43 common frames omitted
2024-05-20 00:17:43 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 6676 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 00:17:43 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 00:17:43 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 00:17:43 [restartedMain] INFO  : Finished Spring Data repository scanning in 1 ms. Found 0 Reactive MongoDB repository interfaces.
2024-05-20 00:17:44 [restartedMain] INFO  : BeanFactory id=0f6a6ebf-01d6-3ead-a871-cce46ea96fff
2024-05-20 00:17:44 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:17:44 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:17:44 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:17:44 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3bb20522, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@1931c21a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 00:17:44 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:17:44 [cluster-ClusterId{value='664adcf8938fcd231d72605b', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:87}] to localhost:27017
2024-05-20 00:17:44 [cluster-ClusterId{value='664adcf8938fcd231d72605b', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2064800}
2024-05-20 00:17:44 [cluster-rtt-ClusterId{value='664adcf8938fcd231d72605b', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:5, serverValue:88}] to localhost:27017
2024-05-20 00:17:44 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:17:44 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 00:17:44 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 00:17:45 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 00:17:45 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 00:17:45 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 00:17:45 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 00:17:45 [restartedMain] INFO  : Disable delta property : false
2024-05-20 00:17:45 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 00:17:45 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 00:17:45 [restartedMain] INFO  : Application is null : false
2024-05-20 00:17:45 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 00:17:45 [restartedMain] INFO  : Application version is -1: true
2024-05-20 00:17:45 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 00:17:45 [restartedMain] INFO  : The response status is 200
2024-05-20 00:17:45 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 00:17:45 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 00:17:45 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716182265276 with initial instances count: 1
2024-05-20 00:17:45 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 00:17:45 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716182265277, current=UP, previous=STARTING]
2024-05-20 00:17:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:17:45 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 00:17:45 [restartedMain] INFO  : Updating port to 8081
2024-05-20 00:17:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:17:46 [restartedMain] INFO  : Started FinalProjectApplication in 2.655 seconds (JVM running for 443.854)
2024-05-20 00:17:46 [restartedMain] INFO  : Condition evaluation delta:


==========================
CONDITION EVALUATION DELTA
==========================


Positive matches:
-----------------

   WebClientAutoConfiguration#webClientBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.reactive.function.client.WebClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

    None


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    None



2024-05-20 00:17:46 [File Watcher] INFO  : Restarting due to 10 class path changes (10 additions, 0 deletions, 0 modifications)
2024-05-20 00:17:46 [Thread-10] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 00:17:46 [Thread-10] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716182266738, current=DOWN, previous=UP]
2024-05-20 00:17:46 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:17:46 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:17:48 [Thread-10] INFO  : Shutting down DiscoveryClient ...
2024-05-20 00:17:51 [Thread-10] INFO  : Unregistering ...
2024-05-20 00:17:51 [Thread-10] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 00:17:51 [Thread-10] INFO  : Completed shut down of DiscoveryClient
2024-05-20 00:17:52 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 6676 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 00:17:52 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 00:17:52 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 00:17:52 [restartedMain] INFO  : Finished Spring Data repository scanning in 4 ms. Found 0 Reactive MongoDB repository interfaces.
2024-05-20 00:17:52 [restartedMain] INFO  : BeanFactory id=5b0504c7-da3e-3a33-8df8-bf101169b513
2024-05-20 00:17:52 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:17:52 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:17:52 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:17:52 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'domainBAccountService': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [project.application.service.domainService.DomainBAccountService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@39bfd3a1]
2024-05-20 00:17:52 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-20 00:17:52 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'domainBAccountService': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [project.application.service.domainService.DomainBAccountService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@39bfd3a1]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'domainBAccountService': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [project.application.service.domainService.DomainBAccountService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@39bfd3a1]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:298)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 24 common frames omitted
Caused by: java.lang.IllegalStateException: Failed to introspect Class [project.application.service.domainService.DomainBAccountService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@39bfd3a1]
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:485)
	at org.springframework.util.ReflectionUtils.doWithLocalMethods(ReflectionUtils.java:321)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:276)
	... 37 common frames omitted
Caused by: java.lang.NoClassDefFoundError: project/domain/ports/BAccountPort
	at java.base/java.lang.Class.getDeclaredMethods0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3166)
	at java.base/java.lang.Class.getDeclaredMethods(Class.java:2309)
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:467)
	... 39 common frames omitted
Caused by: java.lang.ClassNotFoundException: project.domain.ports.BAccountPort
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:398)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 43 common frames omitted
2024-05-20 00:21:38 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 14468 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 00:21:38 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 00:21:38 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 00:21:38 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 00:21:38 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 00:21:38 [restartedMain] INFO  : Finished Spring Data repository scanning in 58 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 00:21:39 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 00:21:39 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:21:39 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:21:39 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:21:39 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@494807e3, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@13b4d2e2]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 00:21:39 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:21:39 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 00:21:39 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:21:39 [cluster-rtt-ClusterId{value='664adde3dc867d7dbb77b385', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:89}] to localhost:27017
2024-05-20 00:21:39 [cluster-ClusterId{value='664adde3dc867d7dbb77b385', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:90}] to localhost:27017
2024-05-20 00:21:39 [cluster-ClusterId{value='664adde3dc867d7dbb77b385', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=43275200}
2024-05-20 00:21:40 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 00:21:40 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 00:21:40 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 00:21:40 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 00:21:40 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 00:21:40 [restartedMain] INFO  : Disable delta property : false
2024-05-20 00:21:40 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 00:21:40 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 00:21:40 [restartedMain] INFO  : Application is null : false
2024-05-20 00:21:40 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 00:21:40 [restartedMain] INFO  : Application version is -1: true
2024-05-20 00:21:40 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 00:21:41 [restartedMain] INFO  : The response status is 200
2024-05-20 00:21:41 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 00:21:41 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 00:21:41 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716182501189 with initial instances count: 1
2024-05-20 00:21:41 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 00:21:41 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716182501191, current=UP, previous=STARTING]
2024-05-20 00:21:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:21:41 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 00:21:41 [restartedMain] INFO  : Updating port to 8081
2024-05-20 00:21:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:21:41 [restartedMain] INFO  : Started FinalProjectApplication in 3.939 seconds (JVM running for 4.897)
2024-05-20 00:21:47 [File Watcher] INFO  : Restarting due to 49 class path changes (0 additions, 48 deletions, 1 modification)
2024-05-20 00:21:47 [Thread-1] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 00:21:47 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716182507134, current=DOWN, previous=UP]
2024-05-20 00:21:47 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:21:47 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:21:49 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 00:21:52 [Thread-1] INFO  : Unregistering ...
2024-05-20 00:21:52 [Thread-1] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 00:21:52 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 00:21:52 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 14468 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 00:21:52 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 00:21:53 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 00:21:53 [restartedMain] INFO  : Finished Spring Data repository scanning in 43 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 00:21:53 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 00:21:53 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:21:53 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:21:53 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:21:53 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@10803c9f, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@13b4d2e2]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 00:21:53 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:21:53 [cluster-rtt-ClusterId{value='664addf1dc867d7dbb77b386', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:91}] to localhost:27017
2024-05-20 00:21:53 [cluster-ClusterId{value='664addf1dc867d7dbb77b386', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:3, serverValue:92}] to localhost:27017
2024-05-20 00:21:53 [cluster-ClusterId{value='664addf1dc867d7dbb77b386', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4240000}
2024-05-20 00:21:53 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 00:21:53 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:21:54 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 00:21:55 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 00:21:55 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 00:21:55 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 00:21:55 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 00:21:55 [restartedMain] INFO  : Disable delta property : false
2024-05-20 00:21:55 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 00:21:55 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 00:21:55 [restartedMain] INFO  : Application is null : false
2024-05-20 00:21:55 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 00:21:55 [restartedMain] INFO  : Application version is -1: true
2024-05-20 00:21:55 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 00:21:55 [restartedMain] INFO  : The response status is 200
2024-05-20 00:21:55 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 00:21:55 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 00:21:55 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716182515251 with initial instances count: 1
2024-05-20 00:21:55 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 00:21:55 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716182515253, current=UP, previous=STARTING]
2024-05-20 00:21:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:21:55 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 00:21:55 [restartedMain] INFO  : Updating port to 8081
2024-05-20 00:21:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:21:55 [File Watcher] INFO  : Restarting due to 48 class path changes (48 additions, 0 deletions, 0 modifications)
2024-05-20 00:21:56 [restartedMain] INFO  : Started FinalProjectApplication in 3.775 seconds (JVM running for 19.384)
2024-05-20 00:21:56 [Thread-8] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 00:21:56 [Thread-8] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716182516101, current=DOWN, previous=UP]
2024-05-20 00:21:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:21:56 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 00:21:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:21:58 [Thread-8] INFO  : Shutting down DiscoveryClient ...
2024-05-20 00:22:01 [Thread-8] INFO  : Unregistering ...
2024-05-20 00:22:01 [Thread-8] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 00:22:01 [Thread-8] INFO  : Completed shut down of DiscoveryClient
2024-05-20 00:22:01 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 14468 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 00:22:01 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 00:22:01 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 00:22:01 [restartedMain] INFO  : Finished Spring Data repository scanning in 38 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 00:22:01 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 00:22:01 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:22:01 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:22:01 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:22:02 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@427153c8, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@13b4d2e2]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 00:22:02 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:22:02 [cluster-rtt-ClusterId{value='664addfadc867d7dbb77b387', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:93}] to localhost:27017
2024-05-20 00:22:02 [cluster-ClusterId{value='664addfadc867d7dbb77b387', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:5, serverValue:94}] to localhost:27017
2024-05-20 00:22:02 [cluster-ClusterId{value='664addfadc867d7dbb77b387', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4324900}
2024-05-20 00:22:02 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 00:22:02 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:22:02 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 00:22:03 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 00:22:03 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 00:22:03 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 00:22:03 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 00:22:03 [restartedMain] INFO  : Disable delta property : false
2024-05-20 00:22:03 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 00:22:03 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 00:22:03 [restartedMain] INFO  : Application is null : false
2024-05-20 00:22:03 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 00:22:03 [restartedMain] INFO  : Application version is -1: true
2024-05-20 00:22:03 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 00:22:03 [restartedMain] INFO  : The response status is 200
2024-05-20 00:22:03 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 00:22:03 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 00:22:03 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716182523083 with initial instances count: 1
2024-05-20 00:22:03 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 00:22:03 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716182523085, current=UP, previous=STARTING]
2024-05-20 00:22:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:22:03 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 00:22:03 [restartedMain] INFO  : Updating port to 8081
2024-05-20 00:22:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:22:03 [restartedMain] INFO  : Started FinalProjectApplication in 2.332 seconds (JVM running for 26.902)
2024-05-20 00:22:03 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 00:22:14 [nioEventLoopGroup-7-3] INFO  : Opened connection [connectionId{localValue:7, serverValue:95}] to localhost:27017
2024-05-20 00:25:38 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 00:25:38 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716182738416, current=DOWN, previous=UP]
2024-05-20 00:25:38 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:25:38 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:25:40 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 00:25:43 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 00:25:43 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 00:25:43 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 00:25:47 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 5400 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 00:25:47 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 00:25:47 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 00:25:47 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 00:25:48 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 00:25:48 [restartedMain] INFO  : Finished Spring Data repository scanning in 66 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 00:25:48 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 00:25:48 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:25:48 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:25:48 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:25:48 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@27003b0a, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@479c9bbe]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 00:25:48 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:25:49 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 00:25:49 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:25:49 [cluster-ClusterId{value='664adedcade71f51c3410ded', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:97}] to localhost:27017
2024-05-20 00:25:49 [cluster-rtt-ClusterId{value='664adedcade71f51c3410ded', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:96}] to localhost:27017
2024-05-20 00:25:49 [cluster-ClusterId{value='664adedcade71f51c3410ded', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=45049400}
2024-05-20 00:25:49 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 00:25:50 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 00:25:50 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 00:25:50 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 00:25:50 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 00:25:50 [restartedMain] INFO  : Disable delta property : false
2024-05-20 00:25:50 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 00:25:50 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 00:25:50 [restartedMain] INFO  : Application is null : false
2024-05-20 00:25:50 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 00:25:50 [restartedMain] INFO  : Application version is -1: true
2024-05-20 00:25:50 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 00:25:50 [restartedMain] INFO  : The response status is 200
2024-05-20 00:25:50 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 00:25:50 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 00:25:50 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716182750710 with initial instances count: 2
2024-05-20 00:25:50 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 00:25:50 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716182750712, current=UP, previous=STARTING]
2024-05-20 00:25:50 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:25:50 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 00:25:50 [restartedMain] INFO  : Updating port to 8081
2024-05-20 00:25:50 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:25:51 [restartedMain] INFO  : Started FinalProjectApplication in 4.02 seconds (JVM running for 4.875)
2024-05-20 00:26:17 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:98}] to localhost:27017
2024-05-20 00:26:53 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 00:26:53 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716182813493, current=DOWN, previous=UP]
2024-05-20 00:26:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:26:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:26:55 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 00:26:58 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 00:26:58 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 00:26:58 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 00:27:02 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 7876 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 00:27:02 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 00:27:03 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 00:27:03 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 00:27:03 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 00:27:03 [restartedMain] INFO  : Finished Spring Data repository scanning in 60 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 00:27:03 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 00:27:03 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:27:03 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:27:03 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:27:04 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1931c21a, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@13d44bb9]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 00:27:04 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:27:04 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 00:27:04 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:27:04 [cluster-ClusterId{value='664adf2847b1d0155e586a37', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:99}] to localhost:27017
2024-05-20 00:27:04 [cluster-rtt-ClusterId{value='664adf2847b1d0155e586a37', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:100}] to localhost:27017
2024-05-20 00:27:04 [cluster-ClusterId{value='664adf2847b1d0155e586a37', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=42775700}
2024-05-20 00:27:04 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 00:27:05 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 00:27:05 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 00:27:05 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 00:27:05 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 00:27:05 [restartedMain] INFO  : Disable delta property : false
2024-05-20 00:27:05 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 00:27:05 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 00:27:05 [restartedMain] INFO  : Application is null : false
2024-05-20 00:27:05 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 00:27:05 [restartedMain] INFO  : Application version is -1: true
2024-05-20 00:27:05 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 00:27:05 [restartedMain] INFO  : The response status is 200
2024-05-20 00:27:05 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 00:27:05 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 00:27:05 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716182825747 with initial instances count: 1
2024-05-20 00:27:05 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 00:27:05 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716182825749, current=UP, previous=STARTING]
2024-05-20 00:27:05 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:27:05 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 00:27:05 [restartedMain] INFO  : Updating port to 8081
2024-05-20 00:27:05 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:27:06 [restartedMain] INFO  : Started FinalProjectApplication in 3.897 seconds (JVM running for 4.716)
2024-05-20 00:28:41 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 00:28:41 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716182921146, current=DOWN, previous=UP]
2024-05-20 00:28:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:28:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:28:43 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 00:28:46 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 00:28:46 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 00:28:46 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 00:28:50 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 27764 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 00:28:50 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 00:28:50 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 00:28:50 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 00:28:51 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 00:28:51 [restartedMain] INFO  : Finished Spring Data repository scanning in 64 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 00:28:51 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 00:28:51 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:28:51 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:28:51 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:28:51 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@4f6c41b1, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@58da6b54]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 00:28:51 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:28:52 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 00:28:52 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:28:52 [cluster-ClusterId{value='664adf93850ade6551efd8db', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:102}] to localhost:27017
2024-05-20 00:28:52 [cluster-rtt-ClusterId{value='664adf93850ade6551efd8db', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:101}] to localhost:27017
2024-05-20 00:28:52 [cluster-ClusterId{value='664adf93850ade6551efd8db', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=44973200}
2024-05-20 00:28:52 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 00:28:53 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 00:28:53 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 00:28:53 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 00:28:53 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 00:28:53 [restartedMain] INFO  : Disable delta property : false
2024-05-20 00:28:53 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 00:28:53 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 00:28:53 [restartedMain] INFO  : Application is null : false
2024-05-20 00:28:53 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 00:28:53 [restartedMain] INFO  : Application version is -1: true
2024-05-20 00:28:53 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 00:28:53 [restartedMain] INFO  : The response status is 200
2024-05-20 00:28:53 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 00:28:53 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 00:28:53 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716182933566 with initial instances count: 2
2024-05-20 00:28:53 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 00:28:53 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716182933567, current=UP, previous=STARTING]
2024-05-20 00:28:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:28:53 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 00:28:53 [restartedMain] INFO  : Updating port to 8081
2024-05-20 00:28:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:28:53 [restartedMain] INFO  : Started FinalProjectApplication in 3.802 seconds (JVM running for 4.649)
2024-05-20 00:29:21 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 00:29:21 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716182961796, current=DOWN, previous=UP]
2024-05-20 00:29:21 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:29:21 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:29:23 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 00:29:26 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 00:29:26 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 00:29:26 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 00:29:31 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 30948 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 00:29:31 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 00:29:31 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 00:29:31 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 00:29:31 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 00:29:32 [restartedMain] INFO  : Finished Spring Data repository scanning in 61 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 00:29:32 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 00:29:32 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:29:32 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:29:32 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:29:32 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@2537c63d, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@11a8bcd2]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 00:29:32 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:29:32 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 00:29:32 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:29:32 [cluster-rtt-ClusterId{value='664adfbc97d7fa2fb42adc9d', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:103}] to localhost:27017
2024-05-20 00:29:32 [cluster-ClusterId{value='664adfbc97d7fa2fb42adc9d', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:104}] to localhost:27017
2024-05-20 00:29:32 [cluster-ClusterId{value='664adfbc97d7fa2fb42adc9d', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=45430700}
2024-05-20 00:29:33 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 00:29:33 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 00:29:33 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 00:29:33 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 00:29:33 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 00:29:33 [restartedMain] INFO  : Disable delta property : false
2024-05-20 00:29:33 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 00:29:33 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 00:29:33 [restartedMain] INFO  : Application is null : false
2024-05-20 00:29:33 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 00:29:33 [restartedMain] INFO  : Application version is -1: true
2024-05-20 00:29:33 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 00:29:34 [restartedMain] INFO  : The response status is 200
2024-05-20 00:29:34 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 00:29:34 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 00:29:34 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716182974251 with initial instances count: 1
2024-05-20 00:29:34 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 00:29:34 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716182974253, current=UP, previous=STARTING]
2024-05-20 00:29:34 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:29:34 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 00:29:34 [restartedMain] INFO  : Updating port to 8081
2024-05-20 00:29:34 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:29:34 [restartedMain] INFO  : Started FinalProjectApplication in 3.859 seconds (JVM running for 4.717)
2024-05-20 00:30:52 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 00:30:52 [Thread-1] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 00:30:52 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716183052941, current=DOWN, previous=UP]
2024-05-20 00:30:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:30:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:30:55 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 00:30:58 [Thread-1] INFO  : Unregistering ...
2024-05-20 00:30:58 [Thread-1] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 00:30:58 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 00:30:58 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 30948 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 00:30:58 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 00:30:58 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 00:30:59 [restartedMain] INFO  : Finished Spring Data repository scanning in 64 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 00:30:59 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 00:30:59 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:30:59 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:30:59 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:30:59 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@12ca301b, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@11a8bcd2]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 00:30:59 [cluster-ClusterId{value='664ae01397d7fa2fb42adc9e', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:3, serverValue:105}] to localhost:27017
2024-05-20 00:30:59 [cluster-rtt-ClusterId{value='664ae01397d7fa2fb42adc9e', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:106}] to localhost:27017
2024-05-20 00:30:59 [cluster-ClusterId{value='664ae01397d7fa2fb42adc9e', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3433800}
2024-05-20 00:30:59 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:30:59 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 00:30:59 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:30:59 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 00:31:00 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 00:31:00 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 00:31:00 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 00:31:00 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 00:31:00 [restartedMain] INFO  : Disable delta property : false
2024-05-20 00:31:00 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 00:31:00 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 00:31:00 [restartedMain] INFO  : Application is null : false
2024-05-20 00:31:00 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 00:31:00 [restartedMain] INFO  : Application version is -1: true
2024-05-20 00:31:00 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 00:31:00 [restartedMain] INFO  : The response status is 200
2024-05-20 00:31:00 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 00:31:00 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 00:31:00 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716183060732 with initial instances count: 2
2024-05-20 00:31:00 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 00:31:00 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716183060733, current=UP, previous=STARTING]
2024-05-20 00:31:00 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:31:00 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:31:00 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 00:31:00 [restartedMain] INFO  : Updating port to 8081
2024-05-20 00:31:01 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 00:31:01 [restartedMain] INFO  : Started FinalProjectApplication in 3.218 seconds (JVM running for 91.412)
2024-05-20 00:31:01 [Thread-16] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 00:31:01 [Thread-16] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716183061384, current=DOWN, previous=UP]
2024-05-20 00:31:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:31:01 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 00:31:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:31:03 [Thread-16] INFO  : Shutting down DiscoveryClient ...
2024-05-20 00:31:06 [Thread-16] INFO  : Unregistering ...
2024-05-20 00:31:06 [Thread-16] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 00:31:06 [Thread-16] INFO  : Completed shut down of DiscoveryClient
2024-05-20 00:31:06 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 30948 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 00:31:06 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 00:31:07 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 00:31:07 [restartedMain] INFO  : Finished Spring Data repository scanning in 55 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 00:31:07 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 00:31:07 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:31:07 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:31:07 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:31:07 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@188a5d6d, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@11a8bcd2]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 00:31:07 [cluster-rtt-ClusterId{value='664ae01b97d7fa2fb42adc9f', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:5, serverValue:107}] to localhost:27017
2024-05-20 00:31:07 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:31:07 [cluster-ClusterId{value='664ae01b97d7fa2fb42adc9f', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:108}] to localhost:27017
2024-05-20 00:31:07 [cluster-ClusterId{value='664ae01b97d7fa2fb42adc9f', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=8138200}
2024-05-20 00:31:07 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 00:31:07 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:31:07 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 00:31:08 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 00:31:08 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 00:31:08 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 00:31:08 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 00:31:08 [restartedMain] INFO  : Disable delta property : false
2024-05-20 00:31:08 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 00:31:08 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 00:31:08 [restartedMain] INFO  : Application is null : false
2024-05-20 00:31:08 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 00:31:08 [restartedMain] INFO  : Application version is -1: true
2024-05-20 00:31:08 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 00:31:08 [restartedMain] INFO  : The response status is 200
2024-05-20 00:31:08 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 00:31:08 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 00:31:08 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716183068660 with initial instances count: 2
2024-05-20 00:31:08 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 00:31:08 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716183068662, current=UP, previous=STARTING]
2024-05-20 00:31:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:31:08 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 00:31:08 [restartedMain] INFO  : Updating port to 8081
2024-05-20 00:31:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:31:09 [restartedMain] INFO  : Started FinalProjectApplication in 2.62 seconds (JVM running for 99.213)
2024-05-20 00:31:09 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 00:32:43 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 00:32:43 [Thread-23] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 00:32:43 [Thread-23] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716183163837, current=DOWN, previous=UP]
2024-05-20 00:32:43 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:32:43 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:32:45 [Thread-23] INFO  : Shutting down DiscoveryClient ...
2024-05-20 00:32:48 [Thread-23] INFO  : Unregistering ...
2024-05-20 00:32:48 [Thread-23] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 00:32:48 [Thread-23] INFO  : Completed shut down of DiscoveryClient
2024-05-20 00:32:49 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 30948 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 00:32:49 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 00:32:49 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 00:32:49 [restartedMain] INFO  : Finished Spring Data repository scanning in 31 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 00:32:49 [restartedMain] INFO  : BeanFactory id=9b8dbbbc-c94a-3f02-801f-6cb319eba009
2024-05-20 00:32:49 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:32:49 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:32:49 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:32:49 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'domainBAccountService': Resolution of declared constructors on bean Class [project.application.service.domainService.DomainBAccountService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@752ccf0] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/clientCalls/WebClientSrv
2024-05-20 00:32:49 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-20 00:32:49 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'domainBAccountService': Resolution of declared constructors on bean Class [project.application.service.domainService.DomainBAccountService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@752ccf0] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/clientCalls/WebClientSrv
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'domainBAccountService': Resolution of declared constructors on bean Class [project.application.service.domainService.DomainBAccountService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@752ccf0] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/clientCalls/WebClientSrv
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 24 common frames omitted
Caused by: java.lang.NoClassDefFoundError: project/infrastructure/clientCalls/WebClientSrv
	at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3137)
	at java.base/java.lang.Class.getDeclaredConstructors(Class.java:2357)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:313)
	... 37 common frames omitted
Caused by: java.lang.ClassNotFoundException: project.infrastructure.clientCalls.WebClientSrv
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:398)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 41 common frames omitted
2024-05-20 00:33:44 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 26172 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 00:33:44 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 00:33:44 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 00:33:44 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 00:33:45 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 00:33:45 [restartedMain] INFO  : Finished Spring Data repository scanning in 60 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 00:33:45 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 00:33:45 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:33:45 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:33:45 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:33:45 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3f98a0be, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3615f8e9]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 00:33:45 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:33:45 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 00:33:46 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:33:46 [cluster-ClusterId{value='664ae0b9d754d71c07f3af7e', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:109}] to localhost:27017
2024-05-20 00:33:46 [cluster-rtt-ClusterId{value='664ae0b9d754d71c07f3af7e', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:110}] to localhost:27017
2024-05-20 00:33:46 [cluster-ClusterId{value='664ae0b9d754d71c07f3af7e', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=42123000}
2024-05-20 00:33:46 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 00:33:47 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 00:33:47 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 00:33:47 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 00:33:47 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 00:33:47 [restartedMain] INFO  : Disable delta property : false
2024-05-20 00:33:47 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 00:33:47 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 00:33:47 [restartedMain] INFO  : Application is null : false
2024-05-20 00:33:47 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 00:33:47 [restartedMain] INFO  : Application version is -1: true
2024-05-20 00:33:47 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 00:33:47 [restartedMain] INFO  : The response status is 200
2024-05-20 00:33:47 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 00:33:47 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 00:33:47 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716183227567 with initial instances count: 1
2024-05-20 00:33:47 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 00:33:47 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716183227569, current=UP, previous=STARTING]
2024-05-20 00:33:47 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:33:47 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 00:33:47 [restartedMain] INFO  : Updating port to 8081
2024-05-20 00:33:47 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:33:48 [restartedMain] INFO  : Started FinalProjectApplication in 3.999 seconds (JVM running for 4.845)
2024-05-20 00:34:40 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 00:34:40 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716183280392, current=DOWN, previous=UP]
2024-05-20 00:34:40 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:34:40 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:34:42 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 00:34:45 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 00:34:45 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 00:34:45 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 00:34:50 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 18304 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 00:34:50 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 00:34:50 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 00:34:50 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 00:34:50 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 00:34:50 [restartedMain] INFO  : Finished Spring Data repository scanning in 64 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 00:34:50 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 00:34:50 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:34:50 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:34:50 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:34:51 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@43560319, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@1eada8ea]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 00:34:51 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:34:51 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 00:34:51 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:34:51 [cluster-ClusterId{value='664ae0fbcf50966b6f125f33', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:112}] to localhost:27017
2024-05-20 00:34:51 [cluster-rtt-ClusterId{value='664ae0fbcf50966b6f125f33', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:111}] to localhost:27017
2024-05-20 00:34:51 [cluster-ClusterId{value='664ae0fbcf50966b6f125f33', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=44128800}
2024-05-20 00:34:52 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 00:34:52 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 00:34:52 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 00:34:52 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 00:34:52 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 00:34:52 [restartedMain] INFO  : Disable delta property : false
2024-05-20 00:34:52 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 00:34:52 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 00:34:52 [restartedMain] INFO  : Application is null : false
2024-05-20 00:34:52 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 00:34:52 [restartedMain] INFO  : Application version is -1: true
2024-05-20 00:34:52 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 00:34:52 [restartedMain] INFO  : The response status is 200
2024-05-20 00:34:52 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 00:34:52 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 00:34:52 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716183292872 with initial instances count: 2
2024-05-20 00:34:52 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 00:34:52 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716183292874, current=UP, previous=STARTING]
2024-05-20 00:34:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:34:52 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 00:34:52 [restartedMain] INFO  : Updating port to 8081
2024-05-20 00:34:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:34:53 [restartedMain] INFO  : Started FinalProjectApplication in 3.977 seconds (JVM running for 4.809)
2024-05-20 00:35:43 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 00:35:43 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716183343256, current=DOWN, previous=UP]
2024-05-20 00:35:43 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:35:43 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:35:45 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 00:35:48 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 00:35:48 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 00:35:48 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 00:35:53 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 9716 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 00:35:53 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 00:35:53 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 00:35:53 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 00:35:53 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 00:35:53 [restartedMain] INFO  : Finished Spring Data repository scanning in 74 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 00:35:54 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 00:35:54 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:35:54 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:35:54 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:35:54 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@5454940b, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@494807e3]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 00:35:54 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:35:54 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 00:35:54 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:35:54 [cluster-rtt-ClusterId{value='664ae13ac5f3a008c3632d39', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:113}] to localhost:27017
2024-05-20 00:35:54 [cluster-ClusterId{value='664ae13ac5f3a008c3632d39', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:114}] to localhost:27017
2024-05-20 00:35:54 [cluster-ClusterId{value='664ae13ac5f3a008c3632d39', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=58965500}
2024-05-20 00:35:55 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 00:35:56 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 00:35:56 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 00:35:56 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 00:35:56 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 00:35:56 [restartedMain] INFO  : Disable delta property : false
2024-05-20 00:35:56 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 00:35:56 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 00:35:56 [restartedMain] INFO  : Application is null : false
2024-05-20 00:35:56 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 00:35:56 [restartedMain] INFO  : Application version is -1: true
2024-05-20 00:35:56 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 00:35:56 [restartedMain] INFO  : The response status is 200
2024-05-20 00:35:56 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 00:35:56 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 00:35:56 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716183356893 with initial instances count: 2
2024-05-20 00:35:56 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 00:35:56 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716183356895, current=UP, previous=STARTING]
2024-05-20 00:35:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:35:56 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 00:35:56 [restartedMain] INFO  : Updating port to 8081
2024-05-20 00:35:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:35:57 [restartedMain] INFO  : Started FinalProjectApplication in 5.111 seconds (JVM running for 5.967)
2024-05-20 00:36:40 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 00:36:40 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716183400902, current=DOWN, previous=UP]
2024-05-20 00:36:40 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:36:40 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:36:43 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 00:36:46 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 00:36:46 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 00:36:46 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 00:36:51 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 8868 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 00:36:51 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 00:36:51 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 00:36:51 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 00:36:51 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 00:36:52 [restartedMain] INFO  : Finished Spring Data repository scanning in 60 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 00:36:52 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 00:36:52 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:36:52 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:36:52 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:36:52 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@294dbc00, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@42258a2c]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 00:36:52 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:36:52 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 00:36:52 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:36:52 [cluster-rtt-ClusterId{value='664ae174e00fb64a4ff04ea6', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:116}] to localhost:27017
2024-05-20 00:36:52 [cluster-ClusterId{value='664ae174e00fb64a4ff04ea6', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:115}] to localhost:27017
2024-05-20 00:36:52 [cluster-ClusterId{value='664ae174e00fb64a4ff04ea6', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=44933300}
2024-05-20 00:36:53 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 00:36:53 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 00:36:53 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 00:36:53 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 00:36:53 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 00:36:53 [restartedMain] INFO  : Disable delta property : false
2024-05-20 00:36:53 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 00:36:53 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 00:36:53 [restartedMain] INFO  : Application is null : false
2024-05-20 00:36:53 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 00:36:53 [restartedMain] INFO  : Application version is -1: true
2024-05-20 00:36:53 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 00:36:54 [restartedMain] INFO  : The response status is 200
2024-05-20 00:36:54 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 00:36:54 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 00:36:54 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716183414186 with initial instances count: 2
2024-05-20 00:36:54 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 00:36:54 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716183414188, current=UP, previous=STARTING]
2024-05-20 00:36:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:36:54 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 00:36:54 [restartedMain] INFO  : Updating port to 8081
2024-05-20 00:36:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:36:54 [restartedMain] INFO  : Started FinalProjectApplication in 3.845 seconds (JVM running for 4.843)
2024-05-20 00:36:58 [reactor-http-nio-3] ERROR : [92ebfa74-1]  500 Server Error for HTTP POST "/accounts/create"
java.lang.NullPointerException: null
	at project.domain.validations.ProductDomainValidations.validateGenericAccount(ProductDomainValidations.java:51)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler project.application.controller.BankAccountController#addBankAccount(Object) [DispatcherHandler]
	*__checkpoint ⇢ HTTP POST "/accounts/create" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at project.domain.validations.ProductDomainValidations.validateGenericAccount(ProductDomainValidations.java:51)
		at project.infrastructure.adapters.SavingsAccAdapter.save(SavingsAccAdapter.java:37)
		at project.infrastructure.adapters.SavingsAccAdapter$$FastClassBySpringCGLIB$$6dfe3b33.invoke(<generated>)
		at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
		at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
		at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
		at project.infrastructure.adapters.SavingsAccAdapter$$EnhancerBySpringCGLIB$$b38484e0.save(<generated>)
		at project.application.service.domainService.DomainBAccountService.lambda$createBankAccount$1(DomainBAccountService.java:44)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:439)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:493)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:768)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:834)
2024-05-20 00:38:23 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 00:38:23 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716183503528, current=DOWN, previous=UP]
2024-05-20 00:38:23 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:38:23 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:38:25 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 00:38:28 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 00:38:28 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 00:38:28 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 00:38:33 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 20132 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 00:38:33 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 00:38:33 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 00:38:33 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 00:38:34 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 00:38:34 [restartedMain] INFO  : Finished Spring Data repository scanning in 62 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 00:38:34 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 00:38:34 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:38:34 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:38:34 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:38:34 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@f814bfa, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2580b3a6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 00:38:35 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:38:35 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 00:38:35 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:38:35 [cluster-rtt-ClusterId{value='664ae1dab38c8747f4c296e8', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:118}] to localhost:27017
2024-05-20 00:38:35 [cluster-ClusterId{value='664ae1dab38c8747f4c296e8', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:117}] to localhost:27017
2024-05-20 00:38:35 [cluster-ClusterId{value='664ae1dab38c8747f4c296e8', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=47414300}
2024-05-20 00:38:35 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 00:38:36 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 00:38:36 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 00:38:36 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 00:38:36 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 00:38:36 [restartedMain] INFO  : Disable delta property : false
2024-05-20 00:38:36 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 00:38:36 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 00:38:36 [restartedMain] INFO  : Application is null : false
2024-05-20 00:38:36 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 00:38:36 [restartedMain] INFO  : Application version is -1: true
2024-05-20 00:38:36 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 00:38:36 [restartedMain] INFO  : The response status is 200
2024-05-20 00:38:36 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 00:38:36 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 00:38:36 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716183516810 with initial instances count: 1
2024-05-20 00:38:36 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 00:38:36 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716183516813, current=UP, previous=STARTING]
2024-05-20 00:38:36 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:38:36 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 00:38:36 [restartedMain] INFO  : Updating port to 8081
2024-05-20 00:38:36 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:38:37 [restartedMain] INFO  : Started FinalProjectApplication in 4.126 seconds (JVM running for 4.96)
2024-05-20 00:38:41 [reactor-http-nio-3] ERROR : [04c5c45f-1]  500 Server Error for HTTP POST "/accounts/create"
java.lang.NullPointerException: null
	at project.domain.validations.ProductDomainValidations.validateGenericAccount(ProductDomainValidations.java:54)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler project.application.controller.BankAccountController#addBankAccount(Object) [DispatcherHandler]
	*__checkpoint ⇢ HTTP POST "/accounts/create" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at project.domain.validations.ProductDomainValidations.validateGenericAccount(ProductDomainValidations.java:54)
		at project.infrastructure.adapters.SavingsAccAdapter.save(SavingsAccAdapter.java:37)
		at project.infrastructure.adapters.SavingsAccAdapter$$FastClassBySpringCGLIB$$6dfe3b33.invoke(<generated>)
		at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
		at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
		at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
		at project.infrastructure.adapters.SavingsAccAdapter$$EnhancerBySpringCGLIB$$bcbf143f.save(<generated>)
		at project.application.service.domainService.DomainBAccountService.lambda$createBankAccount$1(DomainBAccountService.java:44)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:439)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:493)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:768)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:834)
2024-05-20 00:43:36 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 00:47:28 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 00:47:28 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716184048627, current=DOWN, previous=UP]
2024-05-20 00:47:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:47:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:47:30 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 00:47:33 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 00:47:33 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 00:47:33 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 00:47:38 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 27872 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 00:47:38 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 00:47:38 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 00:47:38 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 00:47:39 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 00:47:39 [restartedMain] INFO  : Finished Spring Data repository scanning in 65 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 00:47:39 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 00:47:39 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:47:39 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:47:39 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:47:39 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@6e109327, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@65bcc81e]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 00:47:39 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:47:39 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 00:47:40 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:47:40 [cluster-rtt-ClusterId{value='664ae3fb7a945754a5e0ec88', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:119}] to localhost:27017
2024-05-20 00:47:40 [cluster-ClusterId{value='664ae3fb7a945754a5e0ec88', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:120}] to localhost:27017
2024-05-20 00:47:40 [cluster-ClusterId{value='664ae3fb7a945754a5e0ec88', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=44916100}
2024-05-20 00:47:40 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 00:47:41 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 00:47:41 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 00:47:41 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 00:47:41 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 00:47:41 [restartedMain] INFO  : Disable delta property : false
2024-05-20 00:47:41 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 00:47:41 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 00:47:41 [restartedMain] INFO  : Application is null : false
2024-05-20 00:47:41 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 00:47:41 [restartedMain] INFO  : Application version is -1: true
2024-05-20 00:47:41 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 00:47:41 [restartedMain] INFO  : The response status is 200
2024-05-20 00:47:41 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 00:47:41 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 00:47:41 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716184061603 with initial instances count: 2
2024-05-20 00:47:41 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 00:47:41 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716184061605, current=UP, previous=STARTING]
2024-05-20 00:47:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:47:41 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 00:47:41 [restartedMain] INFO  : Updating port to 8081
2024-05-20 00:47:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:47:42 [restartedMain] INFO  : Started FinalProjectApplication in 4.085 seconds (JVM running for 4.904)
2024-05-20 00:47:48 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:121}] to localhost:27017
2024-05-20 00:47:48 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:122}] to localhost:27017
2024-05-20 00:47:48 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:123}] to localhost:27017
2024-05-20 00:52:41 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 00:52:49 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 00:52:49 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716184369856, current=DOWN, previous=UP]
2024-05-20 00:52:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:52:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:52:51 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 00:52:54 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 00:52:54 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 00:52:55 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 00:53:03 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 3748 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 00:53:03 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 00:53:03 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 00:53:03 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 00:53:03 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 00:53:03 [restartedMain] INFO  : Finished Spring Data repository scanning in 79 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 00:53:04 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 00:53:04 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:53:04 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:53:04 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:53:04 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@726d1d5a, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7e93b6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 00:53:04 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:53:04 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 00:53:04 [cluster-ClusterId{value='664ae540fe54b40ea748f6f2', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:124}] to localhost:27017
2024-05-20 00:53:04 [cluster-rtt-ClusterId{value='664ae540fe54b40ea748f6f2', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:125}] to localhost:27017
2024-05-20 00:53:04 [cluster-ClusterId{value='664ae540fe54b40ea748f6f2', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=64201600}
2024-05-20 00:53:04 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:53:05 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 00:53:05 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 00:53:06 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 00:53:06 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 00:53:06 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 00:53:06 [restartedMain] INFO  : Disable delta property : false
2024-05-20 00:53:06 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 00:53:06 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 00:53:06 [restartedMain] INFO  : Application is null : false
2024-05-20 00:53:06 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 00:53:06 [restartedMain] INFO  : Application version is -1: true
2024-05-20 00:53:06 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 00:53:06 [restartedMain] INFO  : The response status is 200
2024-05-20 00:53:06 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 00:53:06 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 00:53:06 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716184386460 with initial instances count: 1
2024-05-20 00:53:06 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 00:53:06 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716184386462, current=UP, previous=STARTING]
2024-05-20 00:53:06 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:53:06 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 00:53:06 [restartedMain] INFO  : Updating port to 8081
2024-05-20 00:53:06 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:53:06 [restartedMain] INFO  : Started FinalProjectApplication in 4.626 seconds (JVM running for 5.771)
2024-05-20 00:53:14 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:127}] to localhost:27017
2024-05-20 00:53:14 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:126}] to localhost:27017
2024-05-20 00:53:14 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:128}] to localhost:27017
2024-05-20 00:58:06 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 00:59:48 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 00:59:48 [Thread-1] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 00:59:48 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716184788647, current=DOWN, previous=UP]
2024-05-20 00:59:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:59:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:59:50 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 00:59:53 [Thread-1] INFO  : Unregistering ...
2024-05-20 00:59:53 [Thread-1] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 00:59:53 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 00:59:54 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 3748 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 00:59:54 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 00:59:54 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 00:59:54 [restartedMain] INFO  : Finished Spring Data repository scanning in 38 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 00:59:54 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 00:59:54 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:59:54 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:59:54 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 00:59:54 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3c82a3e2, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7e93b6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 00:59:54 [cluster-rtt-ClusterId{value='664ae6dafe54b40ea748f6f3', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:130}] to localhost:27017
2024-05-20 00:59:54 [cluster-ClusterId{value='664ae6dafe54b40ea748f6f3', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:129}] to localhost:27017
2024-05-20 00:59:54 [cluster-ClusterId{value='664ae6dafe54b40ea748f6f3', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2033100}
2024-05-20 00:59:54 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:59:54 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 00:59:54 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 00:59:55 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 00:59:55 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 00:59:55 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 00:59:55 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 00:59:55 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 00:59:55 [restartedMain] INFO  : Disable delta property : false
2024-05-20 00:59:55 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 00:59:55 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 00:59:55 [restartedMain] INFO  : Application is null : false
2024-05-20 00:59:55 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 00:59:55 [restartedMain] INFO  : Application version is -1: true
2024-05-20 00:59:55 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 00:59:55 [restartedMain] INFO  : The response status is 200
2024-05-20 00:59:55 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 00:59:55 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 00:59:55 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716184795879 with initial instances count: 2
2024-05-20 00:59:55 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 00:59:55 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716184795880, current=UP, previous=STARTING]
2024-05-20 00:59:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:59:55 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 00:59:55 [restartedMain] INFO  : Updating port to 8081
2024-05-20 00:59:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:59:56 [restartedMain] INFO  : Started FinalProjectApplication in 2.264 seconds (JVM running for 415.219)
2024-05-20 00:59:56 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 00:59:56 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 00:59:56 [Thread-16] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 00:59:56 [Thread-16] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716184796497, current=DOWN, previous=UP]
2024-05-20 00:59:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 00:59:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 00:59:58 [Thread-16] INFO  : Shutting down DiscoveryClient ...
2024-05-20 01:00:01 [Thread-16] INFO  : Unregistering ...
2024-05-20 01:00:01 [Thread-16] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 01:00:01 [Thread-16] INFO  : Completed shut down of DiscoveryClient
2024-05-20 01:00:01 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 3748 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 01:00:01 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 01:00:02 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 01:00:02 [restartedMain] INFO  : Finished Spring Data repository scanning in 32 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 01:00:02 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 01:00:02 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:00:02 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:00:02 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:00:02 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@53c5526, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7e93b6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 01:00:02 [cluster-rtt-ClusterId{value='664ae6e2fe54b40ea748f6f4', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:9, serverValue:132}] to localhost:27017
2024-05-20 01:00:02 [cluster-ClusterId{value='664ae6e2fe54b40ea748f6f4', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:8, serverValue:131}] to localhost:27017
2024-05-20 01:00:02 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:00:02 [cluster-ClusterId{value='664ae6e2fe54b40ea748f6f4', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2392100}
2024-05-20 01:00:02 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 01:00:02 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:00:02 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 01:00:03 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 01:00:03 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 01:00:03 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 01:00:03 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 01:00:03 [restartedMain] INFO  : Disable delta property : false
2024-05-20 01:00:03 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 01:00:03 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 01:00:03 [restartedMain] INFO  : Application is null : false
2024-05-20 01:00:03 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 01:00:03 [restartedMain] INFO  : Application version is -1: true
2024-05-20 01:00:03 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 01:00:03 [restartedMain] INFO  : The response status is 200
2024-05-20 01:00:03 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 01:00:03 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 01:00:03 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716184803330 with initial instances count: 1
2024-05-20 01:00:03 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 01:00:03 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716184803332, current=UP, previous=STARTING]
2024-05-20 01:00:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:00:03 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 01:00:03 [restartedMain] INFO  : Updating port to 8081
2024-05-20 01:00:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:00:03 [restartedMain] INFO  : Started FinalProjectApplication in 2.07 seconds (JVM running for 422.618)
2024-05-20 01:00:03 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 01:01:50 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 01:01:50 [Thread-23] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 01:01:50 [Thread-23] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716184910045, current=DOWN, previous=UP]
2024-05-20 01:01:50 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:01:50 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:01:52 [Thread-23] INFO  : Shutting down DiscoveryClient ...
2024-05-20 01:01:55 [Thread-23] INFO  : Unregistering ...
2024-05-20 01:01:55 [Thread-23] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 01:01:55 [Thread-23] INFO  : Completed shut down of DiscoveryClient
2024-05-20 01:01:55 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 3748 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 01:01:55 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 01:01:55 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 01:01:55 [restartedMain] INFO  : Finished Spring Data repository scanning in 38 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 01:01:55 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 01:01:55 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:01:55 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:01:55 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:01:55 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1f9289b7, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7e93b6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 01:01:55 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:01:55 [cluster-rtt-ClusterId{value='664ae753fe54b40ea748f6f5', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:11, serverValue:133}] to localhost:27017
2024-05-20 01:01:55 [cluster-ClusterId{value='664ae753fe54b40ea748f6f5', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:10, serverValue:134}] to localhost:27017
2024-05-20 01:01:55 [cluster-ClusterId{value='664ae753fe54b40ea748f6f5', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2648400}
2024-05-20 01:01:55 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 01:01:55 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:01:56 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 01:01:56 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 01:01:56 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 01:01:56 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 01:01:56 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 01:01:56 [restartedMain] INFO  : Disable delta property : false
2024-05-20 01:01:56 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 01:01:56 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 01:01:56 [restartedMain] INFO  : Application is null : false
2024-05-20 01:01:56 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 01:01:56 [restartedMain] INFO  : Application version is -1: true
2024-05-20 01:01:56 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 01:01:57 [restartedMain] INFO  : The response status is 200
2024-05-20 01:01:57 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 01:01:57 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 01:01:57 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716184917018 with initial instances count: 2
2024-05-20 01:01:57 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 01:01:57 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716184917021, current=UP, previous=STARTING]
2024-05-20 01:01:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:01:57 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 01:01:57 [restartedMain] INFO  : Updating port to 8081
2024-05-20 01:01:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:01:57 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 01:01:57 [restartedMain] INFO  : Started FinalProjectApplication in 2.334 seconds (JVM running for 536.423)
2024-05-20 01:01:57 [Thread-37] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 01:01:57 [Thread-37] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716184917557, current=DOWN, previous=UP]
2024-05-20 01:01:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:01:57 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 01:01:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:01:59 [Thread-37] INFO  : Shutting down DiscoveryClient ...
2024-05-20 01:02:02 [Thread-37] INFO  : Unregistering ...
2024-05-20 01:02:02 [Thread-37] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 01:02:02 [Thread-37] INFO  : Completed shut down of DiscoveryClient
2024-05-20 01:02:03 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 3748 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 01:02:03 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 01:02:03 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 01:02:03 [restartedMain] INFO  : Finished Spring Data repository scanning in 35 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 01:02:03 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 01:02:03 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:02:03 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:02:03 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:02:03 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@66e0a84b, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7e93b6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 01:02:03 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:02:03 [cluster-rtt-ClusterId{value='664ae75bfe54b40ea748f6f6', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:13, serverValue:136}] to localhost:27017
2024-05-20 01:02:03 [cluster-ClusterId{value='664ae75bfe54b40ea748f6f6', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:12, serverValue:135}] to localhost:27017
2024-05-20 01:02:03 [cluster-ClusterId{value='664ae75bfe54b40ea748f6f6', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3972300}
2024-05-20 01:02:03 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 01:02:03 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:02:03 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 01:02:04 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 01:02:04 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 01:02:04 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 01:02:04 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 01:02:04 [restartedMain] INFO  : Disable delta property : false
2024-05-20 01:02:04 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 01:02:04 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 01:02:04 [restartedMain] INFO  : Application is null : false
2024-05-20 01:02:04 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 01:02:04 [restartedMain] INFO  : Application version is -1: true
2024-05-20 01:02:04 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 01:02:04 [restartedMain] INFO  : The response status is 200
2024-05-20 01:02:04 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 01:02:04 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 01:02:04 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716184924416 with initial instances count: 2
2024-05-20 01:02:04 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 01:02:04 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716184924417, current=UP, previous=STARTING]
2024-05-20 01:02:04 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:02:04 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 01:02:04 [restartedMain] INFO  : Updating port to 8081
2024-05-20 01:02:04 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:02:04 [restartedMain] INFO  : Started FinalProjectApplication in 2.199 seconds (JVM running for 543.793)
2024-05-20 01:02:04 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 01:04:24 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 01:04:24 [Thread-51] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 01:04:24 [Thread-51] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716185064918, current=DOWN, previous=UP]
2024-05-20 01:04:24 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:04:24 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:04:27 [Thread-51] INFO  : Shutting down DiscoveryClient ...
2024-05-20 01:04:30 [Thread-51] INFO  : Unregistering ...
2024-05-20 01:04:30 [Thread-51] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 01:04:30 [Thread-51] INFO  : Completed shut down of DiscoveryClient
2024-05-20 01:04:30 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 3748 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 01:04:30 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 01:04:30 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 01:04:30 [restartedMain] INFO  : Finished Spring Data repository scanning in 47 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 01:04:30 [restartedMain] INFO  : BeanFactory id=c6d1acac-3368-3f90-aece-e6a4d4a2a4f9
2024-05-20 01:04:30 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:04:30 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:04:30 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:04:30 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'project.application.service.BankAccountService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2024-05-20 01:04:30 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-20 01:04:31 [restartedMain] ERROR : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in project.application.controller.BankAccountController required a bean of type 'project.application.service.BankAccountService' that could not be found.


Action:

Consider defining a bean of type 'project.application.service.BankAccountService' in your configuration.

2024-05-20 01:06:05 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 27016 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 01:06:05 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 01:06:05 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 01:06:05 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 01:06:05 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 01:06:06 [restartedMain] INFO  : Finished Spring Data repository scanning in 62 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 01:06:06 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 01:06:06 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:06:06 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:06:06 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:06:06 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3b9fdc74, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@73744d3]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 01:06:06 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:06:06 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 01:06:06 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:06:06 [cluster-ClusterId{value='664ae84e22844d6308800853', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:137}] to localhost:27017
2024-05-20 01:06:06 [cluster-rtt-ClusterId{value='664ae84e22844d6308800853', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:138}] to localhost:27017
2024-05-20 01:06:06 [cluster-ClusterId{value='664ae84e22844d6308800853', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=44326800}
2024-05-20 01:06:07 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 01:06:07 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 01:06:07 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 01:06:07 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 01:06:07 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 01:06:07 [restartedMain] INFO  : Disable delta property : false
2024-05-20 01:06:07 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 01:06:07 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 01:06:07 [restartedMain] INFO  : Application is null : false
2024-05-20 01:06:07 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 01:06:07 [restartedMain] INFO  : Application version is -1: true
2024-05-20 01:06:07 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 01:06:08 [restartedMain] INFO  : The response status is 200
2024-05-20 01:06:08 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 01:06:08 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 01:06:08 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716185168241 with initial instances count: 1
2024-05-20 01:06:08 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 01:06:08 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716185168244, current=UP, previous=STARTING]
2024-05-20 01:06:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:06:08 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 01:06:08 [restartedMain] INFO  : Updating port to 8081
2024-05-20 01:06:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:06:08 [restartedMain] INFO  : Started FinalProjectApplication in 3.868 seconds (JVM running for 4.695)
2024-05-20 01:06:21 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:139}] to localhost:27017
2024-05-20 01:06:21 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:140}] to localhost:27017
2024-05-20 01:06:21 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:141}] to localhost:27017
2024-05-20 01:07:08 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 01:07:08 [Thread-1] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 01:07:08 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716185228497, current=DOWN, previous=UP]
2024-05-20 01:07:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:07:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:07:10 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 01:07:13 [Thread-1] INFO  : Unregistering ...
2024-05-20 01:07:13 [Thread-1] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 01:07:13 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 01:07:14 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 27016 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 01:07:14 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 01:07:14 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 01:07:14 [restartedMain] INFO  : Finished Spring Data repository scanning in 39 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 01:07:14 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 01:07:14 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:07:14 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:07:14 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:07:14 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@44bb7995, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@73744d3]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 01:07:14 [cluster-rtt-ClusterId{value='664ae89222844d6308800854', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:143}] to localhost:27017
2024-05-20 01:07:14 [cluster-ClusterId{value='664ae89222844d6308800854', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:142}] to localhost:27017
2024-05-20 01:07:14 [cluster-ClusterId{value='664ae89222844d6308800854', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2365000}
2024-05-20 01:07:14 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:07:14 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 01:07:14 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:07:14 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 01:07:15 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 01:07:15 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 01:07:15 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 01:07:15 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 01:07:15 [restartedMain] INFO  : Disable delta property : false
2024-05-20 01:07:15 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 01:07:15 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 01:07:15 [restartedMain] INFO  : Application is null : false
2024-05-20 01:07:15 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 01:07:15 [restartedMain] INFO  : Application version is -1: true
2024-05-20 01:07:15 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 01:07:15 [restartedMain] INFO  : The response status is 200
2024-05-20 01:07:15 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 01:07:15 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 01:07:15 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716185235512 with initial instances count: 2
2024-05-20 01:07:15 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 01:07:15 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716185235512, current=UP, previous=STARTING]
2024-05-20 01:07:15 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:07:15 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 01:07:15 [restartedMain] INFO  : Updating port to 8081
2024-05-20 01:07:15 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:07:15 [restartedMain] INFO  : Started FinalProjectApplication in 2.271 seconds (JVM running for 71.998)
2024-05-20 01:07:15 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 01:07:16 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 01:07:16 [Thread-16] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 01:07:16 [Thread-16] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716185236132, current=DOWN, previous=UP]
2024-05-20 01:07:16 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:07:16 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:07:18 [Thread-16] INFO  : Shutting down DiscoveryClient ...
2024-05-20 01:07:21 [Thread-16] INFO  : Unregistering ...
2024-05-20 01:07:21 [Thread-16] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 01:07:21 [Thread-16] INFO  : Completed shut down of DiscoveryClient
2024-05-20 01:07:21 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 27016 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 01:07:21 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 01:07:21 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 01:07:21 [restartedMain] INFO  : Finished Spring Data repository scanning in 37 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 01:07:21 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 01:07:21 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:07:21 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:07:21 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:07:21 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@65fb9c9d, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@73744d3]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 01:07:21 [cluster-rtt-ClusterId{value='664ae89922844d6308800855', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:9, serverValue:145}] to localhost:27017
2024-05-20 01:07:21 [cluster-ClusterId{value='664ae89922844d6308800855', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:8, serverValue:144}] to localhost:27017
2024-05-20 01:07:21 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:07:21 [cluster-ClusterId{value='664ae89922844d6308800855', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3706800}
2024-05-20 01:07:22 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 01:07:22 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:07:22 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 01:07:22 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 01:07:22 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 01:07:22 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 01:07:22 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 01:07:22 [restartedMain] INFO  : Disable delta property : false
2024-05-20 01:07:22 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 01:07:22 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 01:07:22 [restartedMain] INFO  : Application is null : false
2024-05-20 01:07:22 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 01:07:22 [restartedMain] INFO  : Application version is -1: true
2024-05-20 01:07:22 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 01:07:22 [restartedMain] INFO  : The response status is 200
2024-05-20 01:07:22 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 01:07:22 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 01:07:22 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716185242896 with initial instances count: 2
2024-05-20 01:07:22 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 01:07:22 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716185242897, current=UP, previous=STARTING]
2024-05-20 01:07:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:07:22 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 01:07:22 [restartedMain] INFO  : Updating port to 8081
2024-05-20 01:07:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:07:23 [restartedMain] INFO  : Started FinalProjectApplication in 1.992 seconds (JVM running for 79.34)
2024-05-20 01:07:23 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 01:10:52 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 01:10:52 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716185452558, current=DOWN, previous=UP]
2024-05-20 01:10:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:10:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:10:54 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 01:10:57 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 01:10:57 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 01:10:57 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 01:11:02 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 27412 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 01:11:02 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 01:11:02 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 01:11:02 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 01:11:02 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 01:11:02 [restartedMain] INFO  : Finished Spring Data repository scanning in 62 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 01:11:02 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 01:11:03 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:11:03 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:11:03 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:11:03 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@335bd091, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@34a52e8d]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 01:11:03 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:11:03 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 01:11:03 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:11:03 [cluster-rtt-ClusterId{value='664ae97787267003171399a3', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:146}] to localhost:27017
2024-05-20 01:11:03 [cluster-ClusterId{value='664ae97787267003171399a3', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:147}] to localhost:27017
2024-05-20 01:11:03 [cluster-ClusterId{value='664ae97787267003171399a3', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=42215400}
2024-05-20 01:11:04 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 01:11:04 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 01:11:04 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 01:11:04 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 01:11:04 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 01:11:04 [restartedMain] INFO  : Disable delta property : false
2024-05-20 01:11:04 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 01:11:04 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 01:11:04 [restartedMain] INFO  : Application is null : false
2024-05-20 01:11:04 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 01:11:04 [restartedMain] INFO  : Application version is -1: true
2024-05-20 01:11:04 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 01:11:04 [restartedMain] INFO  : The response status is 200
2024-05-20 01:11:04 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 01:11:04 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 01:11:04 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716185464986 with initial instances count: 1
2024-05-20 01:11:04 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 01:11:04 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716185464988, current=UP, previous=STARTING]
2024-05-20 01:11:04 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:11:05 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 01:11:05 [restartedMain] INFO  : Updating port to 8081
2024-05-20 01:11:05 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:11:05 [restartedMain] INFO  : Started FinalProjectApplication in 3.898 seconds (JVM running for 4.792)
2024-05-20 01:11:18 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:149}] to localhost:27017
2024-05-20 01:11:18 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:148}] to localhost:27017
2024-05-20 01:11:18 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:150}] to localhost:27017
2024-05-20 01:11:45 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 01:11:45 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716185505856, current=DOWN, previous=UP]
2024-05-20 01:11:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:11:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:11:47 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 01:11:50 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 01:11:51 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 01:11:51 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 01:11:55 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 23964 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 01:11:55 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 01:11:55 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 01:11:55 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 01:11:55 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 01:11:55 [restartedMain] INFO  : Finished Spring Data repository scanning in 68 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 01:11:56 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 01:11:56 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:11:56 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:11:56 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:11:56 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@22a11716, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3f6d9489]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 01:11:56 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:11:56 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 01:11:56 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:11:56 [cluster-ClusterId{value='664ae9ac884d326f17641b82', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:151}] to localhost:27017
2024-05-20 01:11:56 [cluster-rtt-ClusterId{value='664ae9ac884d326f17641b82', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:152}] to localhost:27017
2024-05-20 01:11:56 [cluster-ClusterId{value='664ae9ac884d326f17641b82', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=40358700}
2024-05-20 01:11:57 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 01:11:57 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 01:11:57 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 01:11:57 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 01:11:57 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 01:11:57 [restartedMain] INFO  : Disable delta property : false
2024-05-20 01:11:57 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 01:11:57 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 01:11:57 [restartedMain] INFO  : Application is null : false
2024-05-20 01:11:57 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 01:11:57 [restartedMain] INFO  : Application version is -1: true
2024-05-20 01:11:57 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 01:11:58 [restartedMain] INFO  : The response status is 200
2024-05-20 01:11:58 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 01:11:58 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 01:11:58 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716185518209 with initial instances count: 2
2024-05-20 01:11:58 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 01:11:58 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716185518211, current=UP, previous=STARTING]
2024-05-20 01:11:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:11:58 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 01:11:58 [restartedMain] INFO  : Updating port to 8081
2024-05-20 01:11:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:11:58 [restartedMain] INFO  : Started FinalProjectApplication in 3.913 seconds (JVM running for 4.774)
2024-05-20 01:12:07 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 01:12:07 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716185527425, current=DOWN, previous=UP]
2024-05-20 01:12:07 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:12:07 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:12:09 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 01:12:12 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 01:12:12 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 01:12:12 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 01:12:15 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 29608 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 01:12:15 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 01:12:15 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 01:12:15 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 01:12:15 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 01:12:15 [restartedMain] INFO  : Finished Spring Data repository scanning in 60 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 01:12:15 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 01:12:15 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:12:15 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:12:15 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:12:16 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@62130338, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@1f231342]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 01:12:16 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:12:16 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 01:12:16 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:12:16 [cluster-rtt-ClusterId{value='664ae9c023260568dc06bb1a', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:153}] to localhost:27017
2024-05-20 01:12:16 [cluster-ClusterId{value='664ae9c023260568dc06bb1a', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:154}] to localhost:27017
2024-05-20 01:12:16 [cluster-ClusterId{value='664ae9c023260568dc06bb1a', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=42441400}
2024-05-20 01:12:17 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 01:12:17 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 01:12:17 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 01:12:17 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 01:12:17 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 01:12:17 [restartedMain] INFO  : Disable delta property : false
2024-05-20 01:12:17 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 01:12:17 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 01:12:17 [restartedMain] INFO  : Application is null : false
2024-05-20 01:12:17 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 01:12:17 [restartedMain] INFO  : Application version is -1: true
2024-05-20 01:12:17 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 01:12:17 [restartedMain] INFO  : The response status is 200
2024-05-20 01:12:17 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 01:12:17 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 01:12:17 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716185537845 with initial instances count: 2
2024-05-20 01:12:17 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 01:12:17 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716185537846, current=UP, previous=STARTING]
2024-05-20 01:12:17 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:12:17 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 01:12:17 [restartedMain] INFO  : Updating port to 8081
2024-05-20 01:12:17 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:12:18 [restartedMain] INFO  : Started FinalProjectApplication in 3.823 seconds (JVM running for 4.73)
2024-05-20 01:12:22 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:156}] to localhost:27017
2024-05-20 01:12:22 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:155}] to localhost:27017
2024-05-20 01:12:22 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:157}] to localhost:27017
2024-05-20 01:12:37 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 01:12:37 [Thread-1] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 01:12:37 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716185557929, current=DOWN, previous=UP]
2024-05-20 01:12:37 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:12:37 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:12:40 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 01:12:43 [Thread-1] INFO  : Unregistering ...
2024-05-20 01:12:43 [Thread-1] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 01:12:43 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 01:12:43 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 29608 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 01:12:43 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 01:12:43 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 01:12:43 [restartedMain] INFO  : Finished Spring Data repository scanning in 35 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 01:12:44 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 01:12:44 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:12:44 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:12:44 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:12:44 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@c7e6fd5, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@1f231342]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 01:12:44 [cluster-rtt-ClusterId{value='664ae9dc23260568dc06bb1b', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:158}] to localhost:27017
2024-05-20 01:12:44 [cluster-ClusterId{value='664ae9dc23260568dc06bb1b', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:159}] to localhost:27017
2024-05-20 01:12:44 [cluster-ClusterId{value='664ae9dc23260568dc06bb1b', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1879300}
2024-05-20 01:12:44 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:12:44 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 01:12:44 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:12:44 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 01:12:45 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 01:12:45 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 01:12:45 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 01:12:45 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 01:12:45 [restartedMain] INFO  : Disable delta property : false
2024-05-20 01:12:45 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 01:12:45 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 01:12:45 [restartedMain] INFO  : Application is null : false
2024-05-20 01:12:45 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 01:12:45 [restartedMain] INFO  : Application version is -1: true
2024-05-20 01:12:45 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 01:12:45 [restartedMain] INFO  : The response status is 200
2024-05-20 01:12:45 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 01:12:45 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 01:12:45 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716185565460 with initial instances count: 2
2024-05-20 01:12:45 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 01:12:45 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716185565461, current=UP, previous=STARTING]
2024-05-20 01:12:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:12:45 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 01:12:45 [restartedMain] INFO  : Updating port to 8081
2024-05-20 01:12:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:12:45 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 01:12:46 [restartedMain] INFO  : Started FinalProjectApplication in 3.091 seconds (JVM running for 32.701)
2024-05-20 01:12:46 [Thread-16] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 01:12:46 [Thread-16] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716185566242, current=DOWN, previous=UP]
2024-05-20 01:12:46 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:12:46 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 01:12:46 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:12:48 [Thread-16] INFO  : Shutting down DiscoveryClient ...
2024-05-20 01:12:51 [Thread-16] INFO  : Unregistering ...
2024-05-20 01:12:51 [Thread-16] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 01:12:51 [Thread-16] INFO  : Completed shut down of DiscoveryClient
2024-05-20 01:12:51 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 29608 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 01:12:51 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 01:12:52 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 01:12:52 [restartedMain] INFO  : Finished Spring Data repository scanning in 35 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 01:12:52 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 01:12:52 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:12:52 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:12:52 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:12:52 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@681f1f0f, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@1f231342]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 01:12:52 [cluster-rtt-ClusterId{value='664ae9e423260568dc06bb1c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:9, serverValue:161}] to localhost:27017
2024-05-20 01:12:52 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:12:52 [cluster-ClusterId{value='664ae9e423260568dc06bb1c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:8, serverValue:160}] to localhost:27017
2024-05-20 01:12:52 [cluster-ClusterId{value='664ae9e423260568dc06bb1c', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=7340900}
2024-05-20 01:12:52 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 01:12:52 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:12:52 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 01:12:53 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 01:12:53 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 01:12:53 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 01:12:53 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 01:12:53 [restartedMain] INFO  : Disable delta property : false
2024-05-20 01:12:53 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 01:12:53 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 01:12:53 [restartedMain] INFO  : Application is null : false
2024-05-20 01:12:53 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 01:12:53 [restartedMain] INFO  : Application version is -1: true
2024-05-20 01:12:53 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 01:12:53 [restartedMain] INFO  : The response status is 200
2024-05-20 01:12:53 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 01:12:53 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 01:12:53 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716185573344 with initial instances count: 2
2024-05-20 01:12:53 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 01:12:53 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716185573345, current=UP, previous=STARTING]
2024-05-20 01:12:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:12:53 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 01:12:53 [restartedMain] INFO  : Updating port to 8081
2024-05-20 01:12:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:12:53 [restartedMain] INFO  : Started FinalProjectApplication in 2.5 seconds (JVM running for 40.361)
2024-05-20 01:12:53 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 01:12:59 [nioEventLoopGroup-7-3] INFO  : Opened connection [connectionId{localValue:10, serverValue:162}] to localhost:27017
2024-05-20 01:12:59 [nioEventLoopGroup-7-4] INFO  : Opened connection [connectionId{localValue:11, serverValue:163}] to localhost:27017
2024-05-20 01:12:59 [nioEventLoopGroup-7-5] INFO  : Opened connection [connectionId{localValue:12, serverValue:164}] to localhost:27017
2024-05-20 01:15:20 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 01:15:20 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716185720446, current=DOWN, previous=UP]
2024-05-20 01:15:20 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:15:20 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:15:22 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 01:15:25 [DiscoveryClient-0] WARN  : task supervisor shutting down, can't accept the task
2024-05-20 01:15:25 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 01:15:25 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 01:15:25 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 01:15:30 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 22020 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 01:15:30 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 01:15:30 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 01:15:30 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 01:15:30 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 01:15:31 [restartedMain] INFO  : Finished Spring Data repository scanning in 64 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 01:15:31 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 01:15:31 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:15:31 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:15:31 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:15:31 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1ff8c7aa, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@62130338]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 01:15:31 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:15:31 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 01:15:31 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:15:31 [cluster-ClusterId{value='664aea83939dca692412fc74', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:166}] to localhost:27017
2024-05-20 01:15:31 [cluster-rtt-ClusterId{value='664aea83939dca692412fc74', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:165}] to localhost:27017
2024-05-20 01:15:31 [cluster-ClusterId{value='664aea83939dca692412fc74', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=40825600}
2024-05-20 01:15:32 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 01:15:32 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 01:15:32 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 01:15:32 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 01:15:32 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 01:15:32 [restartedMain] INFO  : Disable delta property : false
2024-05-20 01:15:32 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 01:15:32 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 01:15:32 [restartedMain] INFO  : Application is null : false
2024-05-20 01:15:32 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 01:15:32 [restartedMain] INFO  : Application version is -1: true
2024-05-20 01:15:32 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 01:15:33 [restartedMain] INFO  : The response status is 200
2024-05-20 01:15:33 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 01:15:33 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 01:15:33 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716185733228 with initial instances count: 1
2024-05-20 01:15:33 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 01:15:33 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716185733229, current=UP, previous=STARTING]
2024-05-20 01:15:33 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:15:33 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 01:15:33 [restartedMain] INFO  : Updating port to 8081
2024-05-20 01:15:33 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:15:33 [restartedMain] INFO  : Started FinalProjectApplication in 3.829 seconds (JVM running for 4.671)
2024-05-20 01:17:15 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:168}] to localhost:27017
2024-05-20 01:17:15 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:167}] to localhost:27017
2024-05-20 01:17:15 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:169}] to localhost:27017
2024-05-20 01:20:32 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 01:23:48 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 01:23:48 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716186228158, current=DOWN, previous=UP]
2024-05-20 01:23:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:23:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:23:50 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 01:23:53 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 01:23:53 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 01:23:53 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 01:23:58 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 29412 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 01:23:58 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 01:23:58 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 01:23:58 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 01:23:59 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 01:23:59 [restartedMain] INFO  : Finished Spring Data repository scanning in 62 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 01:23:59 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 01:23:59 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:23:59 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:23:59 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:23:59 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1d7dc217, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@660f9ab]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 01:23:59 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:23:59 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 01:24:00 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:24:00 [cluster-ClusterId{value='664aec7f60c1833a27a68c91', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:170}] to localhost:27017
2024-05-20 01:24:00 [cluster-rtt-ClusterId{value='664aec7f60c1833a27a68c91', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:171}] to localhost:27017
2024-05-20 01:24:00 [cluster-ClusterId{value='664aec7f60c1833a27a68c91', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=44092500}
2024-05-20 01:24:00 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 01:24:01 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 01:24:01 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 01:24:01 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 01:24:01 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 01:24:01 [restartedMain] INFO  : Disable delta property : false
2024-05-20 01:24:01 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 01:24:01 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 01:24:01 [restartedMain] INFO  : Application is null : false
2024-05-20 01:24:01 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 01:24:01 [restartedMain] INFO  : Application version is -1: true
2024-05-20 01:24:01 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 01:24:01 [restartedMain] INFO  : The response status is 200
2024-05-20 01:24:01 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 01:24:01 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 01:24:01 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716186241446 with initial instances count: 2
2024-05-20 01:24:01 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 01:24:01 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716186241448, current=UP, previous=STARTING]
2024-05-20 01:24:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:24:01 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 01:24:01 [restartedMain] INFO  : Updating port to 8081
2024-05-20 01:24:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:24:01 [restartedMain] INFO  : Started FinalProjectApplication in 3.85 seconds (JVM running for 4.715)
2024-05-20 01:24:24 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:172}] to localhost:27017
2024-05-20 01:24:24 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:173}] to localhost:27017
2024-05-20 01:24:24 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:174}] to localhost:27017
2024-05-20 01:28:28 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 01:28:28 [Thread-1] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 01:28:28 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716186508483, current=DOWN, previous=UP]
2024-05-20 01:28:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:28:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:28:30 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 01:28:33 [DiscoveryClient-0] WARN  : task supervisor shutting down, can't accept the task
2024-05-20 01:28:33 [Thread-1] INFO  : Unregistering ...
2024-05-20 01:28:33 [Thread-1] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 01:28:33 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 01:28:33 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 29412 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 01:28:33 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 01:28:34 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 01:28:34 [restartedMain] INFO  : Finished Spring Data repository scanning in 40 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 01:28:34 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 01:28:34 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:28:34 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:28:34 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:28:34 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1afb71f0, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@660f9ab]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 01:28:34 [cluster-ClusterId{value='664aed9260c1833a27a68c92', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:175}] to localhost:27017
2024-05-20 01:28:34 [cluster-rtt-ClusterId{value='664aed9260c1833a27a68c92', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:176}] to localhost:27017
2024-05-20 01:28:34 [cluster-ClusterId{value='664aed9260c1833a27a68c92', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2069500}
2024-05-20 01:28:34 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:28:34 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 01:28:34 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:28:35 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 01:28:35 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 01:28:35 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 01:28:35 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 01:28:35 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 01:28:35 [restartedMain] INFO  : Disable delta property : false
2024-05-20 01:28:35 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 01:28:35 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 01:28:35 [restartedMain] INFO  : Application is null : false
2024-05-20 01:28:35 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 01:28:35 [restartedMain] INFO  : Application version is -1: true
2024-05-20 01:28:35 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 01:28:35 [restartedMain] INFO  : The response status is 200
2024-05-20 01:28:35 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 01:28:35 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 01:28:35 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716186515587 with initial instances count: 2
2024-05-20 01:28:35 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 01:28:35 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716186515588, current=UP, previous=STARTING]
2024-05-20 01:28:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:28:35 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 01:28:35 [restartedMain] INFO  : Updating port to 8081
2024-05-20 01:28:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:28:36 [restartedMain] INFO  : Started FinalProjectApplication in 2.363 seconds (JVM running for 278.864)
2024-05-20 01:28:36 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 01:28:36 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 01:28:36 [Thread-16] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 01:28:36 [Thread-16] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716186516188, current=DOWN, previous=UP]
2024-05-20 01:28:36 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:28:36 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:28:38 [Thread-16] INFO  : Shutting down DiscoveryClient ...
2024-05-20 01:28:41 [Thread-16] INFO  : Unregistering ...
2024-05-20 01:28:41 [Thread-16] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 01:28:41 [Thread-16] INFO  : Completed shut down of DiscoveryClient
2024-05-20 01:28:41 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 29412 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 01:28:41 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 01:28:41 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 01:28:41 [restartedMain] INFO  : Finished Spring Data repository scanning in 28 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 01:28:41 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 01:28:41 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:28:41 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:28:41 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:28:41 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@7cee3d70, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@660f9ab]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 01:28:41 [cluster-rtt-ClusterId{value='664aed9960c1833a27a68c93', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:8, serverValue:177}] to localhost:27017
2024-05-20 01:28:41 [cluster-ClusterId{value='664aed9960c1833a27a68c93', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:9, serverValue:178}] to localhost:27017
2024-05-20 01:28:41 [cluster-ClusterId{value='664aed9960c1833a27a68c93', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1726600}
2024-05-20 01:28:41 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:28:41 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 01:28:41 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:28:42 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 01:28:42 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 01:28:42 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 01:28:42 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 01:28:42 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 01:28:42 [restartedMain] INFO  : Disable delta property : false
2024-05-20 01:28:42 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 01:28:42 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 01:28:42 [restartedMain] INFO  : Application is null : false
2024-05-20 01:28:42 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 01:28:42 [restartedMain] INFO  : Application version is -1: true
2024-05-20 01:28:42 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 01:28:42 [restartedMain] INFO  : The response status is 200
2024-05-20 01:28:42 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 01:28:42 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 01:28:42 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716186522671 with initial instances count: 2
2024-05-20 01:28:42 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 01:28:42 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716186522672, current=UP, previous=STARTING]
2024-05-20 01:28:42 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:28:42 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 01:28:42 [restartedMain] INFO  : Updating port to 8081
2024-05-20 01:28:42 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:28:43 [restartedMain] INFO  : Started FinalProjectApplication in 1.697 seconds (JVM running for 285.905)
2024-05-20 01:28:43 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 01:28:59 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 01:28:59 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716186539093, current=DOWN, previous=UP]
2024-05-20 01:28:59 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:28:59 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:29:01 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 01:29:04 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 01:29:04 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 01:29:04 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 01:29:08 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 9472 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 01:29:08 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 01:29:09 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 01:29:09 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 01:29:09 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 01:29:09 [restartedMain] INFO  : Finished Spring Data repository scanning in 74 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 01:29:09 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 01:29:10 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:29:10 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:29:10 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:29:10 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@68d3e20f, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7eaae7e5]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 01:29:10 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:29:10 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 01:29:10 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:29:10 [cluster-ClusterId{value='664aedb636679f0a825814d9', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:180}] to localhost:27017
2024-05-20 01:29:10 [cluster-rtt-ClusterId{value='664aedb636679f0a825814d9', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:179}] to localhost:27017
2024-05-20 01:29:10 [cluster-ClusterId{value='664aedb636679f0a825814d9', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=42537700}
2024-05-20 01:29:11 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 01:29:11 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 01:29:11 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 01:29:11 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 01:29:11 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 01:29:11 [restartedMain] INFO  : Disable delta property : false
2024-05-20 01:29:11 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 01:29:11 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 01:29:11 [restartedMain] INFO  : Application is null : false
2024-05-20 01:29:11 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 01:29:11 [restartedMain] INFO  : Application version is -1: true
2024-05-20 01:29:11 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 01:29:12 [restartedMain] INFO  : The response status is 200
2024-05-20 01:29:12 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 01:29:12 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 01:29:12 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716186552016 with initial instances count: 2
2024-05-20 01:29:12 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 01:29:12 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716186552018, current=UP, previous=STARTING]
2024-05-20 01:29:12 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:29:12 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 01:29:12 [restartedMain] INFO  : Updating port to 8081
2024-05-20 01:29:12 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:29:12 [restartedMain] INFO  : Started FinalProjectApplication in 4.131 seconds (JVM running for 5.045)
2024-05-20 01:29:32 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 01:29:32 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716186572079, current=DOWN, previous=UP]
2024-05-20 01:29:32 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:29:32 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:29:34 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 01:29:37 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 01:29:37 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 01:29:37 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 01:29:41 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 24364 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 01:29:41 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 01:29:41 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 01:29:41 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 01:29:42 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 01:29:42 [restartedMain] INFO  : Finished Spring Data repository scanning in 67 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 01:29:42 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 01:29:42 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:29:42 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:29:42 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:29:42 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@72523754, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7e9e0208]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 01:29:42 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:29:42 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 01:29:43 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:29:43 [cluster-rtt-ClusterId{value='664aedd604b3e458ff44234a', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:182}] to localhost:27017
2024-05-20 01:29:43 [cluster-ClusterId{value='664aedd604b3e458ff44234a', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:181}] to localhost:27017
2024-05-20 01:29:43 [cluster-ClusterId{value='664aedd604b3e458ff44234a', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=49082900}
2024-05-20 01:29:43 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 01:29:44 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 01:29:44 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 01:29:44 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 01:29:44 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 01:29:44 [restartedMain] INFO  : Disable delta property : false
2024-05-20 01:29:44 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 01:29:44 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 01:29:44 [restartedMain] INFO  : Application is null : false
2024-05-20 01:29:44 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 01:29:44 [restartedMain] INFO  : Application version is -1: true
2024-05-20 01:29:44 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 01:29:44 [restartedMain] INFO  : The response status is 200
2024-05-20 01:29:44 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 01:29:44 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 01:29:44 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716186584497 with initial instances count: 2
2024-05-20 01:29:44 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 01:29:44 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716186584499, current=UP, previous=STARTING]
2024-05-20 01:29:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:29:44 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 01:29:44 [restartedMain] INFO  : Updating port to 8081
2024-05-20 01:29:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:29:44 [restartedMain] INFO  : Started FinalProjectApplication in 4.019 seconds (JVM running for 4.86)
2024-05-20 01:29:47 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:183}] to localhost:27017
2024-05-20 01:29:47 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:184}] to localhost:27017
2024-05-20 01:29:47 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:185}] to localhost:27017
2024-05-20 01:31:27 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 01:31:27 [Thread-1] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 01:31:27 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716186687900, current=DOWN, previous=UP]
2024-05-20 01:31:27 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:31:27 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:31:30 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 01:31:33 [Thread-1] INFO  : Unregistering ...
2024-05-20 01:31:33 [Thread-1] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 01:31:33 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 01:31:33 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 24364 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 01:31:33 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 01:31:33 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 01:31:33 [restartedMain] INFO  : Finished Spring Data repository scanning in 40 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 01:31:33 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 01:31:33 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:31:33 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:31:33 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:31:33 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@59cc1777, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7e9e0208]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 01:31:33 [cluster-ClusterId{value='664aee4504b3e458ff44234b', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:186}] to localhost:27017
2024-05-20 01:31:33 [cluster-rtt-ClusterId{value='664aee4504b3e458ff44234b', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:187}] to localhost:27017
2024-05-20 01:31:33 [cluster-ClusterId{value='664aee4504b3e458ff44234b', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1822300}
2024-05-20 01:31:33 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:31:33 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 01:31:33 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:31:34 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 01:31:34 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 01:31:34 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 01:31:34 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 01:31:34 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 01:31:34 [restartedMain] INFO  : Disable delta property : false
2024-05-20 01:31:34 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 01:31:34 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 01:31:34 [restartedMain] INFO  : Application is null : false
2024-05-20 01:31:34 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 01:31:34 [restartedMain] INFO  : Application version is -1: true
2024-05-20 01:31:34 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 01:31:34 [restartedMain] INFO  : The response status is 200
2024-05-20 01:31:34 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 01:31:34 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 01:31:34 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716186694970 with initial instances count: 2
2024-05-20 01:31:34 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 01:31:34 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716186694972, current=UP, previous=STARTING]
2024-05-20 01:31:34 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:31:34 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 01:31:34 [restartedMain] INFO  : Updating port to 8081
2024-05-20 01:31:34 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:31:35 [restartedMain] INFO  : Started FinalProjectApplication in 2.394 seconds (JVM running for 115.434)
2024-05-20 01:31:35 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 01:31:35 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 01:31:35 [Thread-16] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 01:31:35 [Thread-16] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716186695618, current=DOWN, previous=UP]
2024-05-20 01:31:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:31:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:31:37 [Thread-16] INFO  : Shutting down DiscoveryClient ...
2024-05-20 01:31:40 [Thread-16] INFO  : Unregistering ...
2024-05-20 01:31:40 [Thread-16] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 01:31:40 [Thread-16] INFO  : Completed shut down of DiscoveryClient
2024-05-20 01:31:41 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 24364 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 01:31:41 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 01:31:41 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 01:31:41 [restartedMain] INFO  : Finished Spring Data repository scanning in 36 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 01:31:41 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 01:31:41 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:31:41 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:31:41 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:31:41 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@4d2a5be, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7e9e0208]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 01:31:41 [cluster-ClusterId{value='664aee4d04b3e458ff44234c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:8, serverValue:189}] to localhost:27017
2024-05-20 01:31:41 [cluster-rtt-ClusterId{value='664aee4d04b3e458ff44234c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:9, serverValue:188}] to localhost:27017
2024-05-20 01:31:41 [cluster-ClusterId{value='664aee4d04b3e458ff44234c', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2056800}
2024-05-20 01:31:41 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:31:41 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 01:31:41 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:31:41 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 01:31:42 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 01:31:42 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 01:31:42 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 01:31:42 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 01:31:42 [restartedMain] INFO  : Disable delta property : false
2024-05-20 01:31:42 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 01:31:42 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 01:31:42 [restartedMain] INFO  : Application is null : false
2024-05-20 01:31:42 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 01:31:42 [restartedMain] INFO  : Application version is -1: true
2024-05-20 01:31:42 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 01:31:42 [restartedMain] INFO  : The response status is 200
2024-05-20 01:31:42 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 01:31:42 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 01:31:42 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716186702483 with initial instances count: 2
2024-05-20 01:31:42 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 01:31:42 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716186702484, current=UP, previous=STARTING]
2024-05-20 01:31:42 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:31:42 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 01:31:42 [restartedMain] INFO  : Updating port to 8081
2024-05-20 01:31:42 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:31:42 [restartedMain] INFO  : Started FinalProjectApplication in 2.151 seconds (JVM running for 122.887)
2024-05-20 01:31:42 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 01:36:18 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 01:36:18 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716186978239, current=DOWN, previous=UP]
2024-05-20 01:36:18 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:36:18 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:36:20 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 01:36:23 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 01:36:23 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 01:36:23 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 01:36:26 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 25872 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 01:36:26 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 01:36:26 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 01:36:26 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 01:36:27 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 01:36:27 [restartedMain] INFO  : Finished Spring Data repository scanning in 63 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 01:36:27 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 01:36:27 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:36:27 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:36:27 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:36:28 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@639e6a43, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@39eaa28]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 01:36:28 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:36:28 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 01:36:28 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:36:28 [cluster-ClusterId{value='664aef6c95101c56fbf3388d', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:191}] to localhost:27017
2024-05-20 01:36:28 [cluster-rtt-ClusterId{value='664aef6c95101c56fbf3388d', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:190}] to localhost:27017
2024-05-20 01:36:28 [cluster-ClusterId{value='664aef6c95101c56fbf3388d', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=42633600}
2024-05-20 01:36:28 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 01:36:29 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 01:36:29 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 01:36:29 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 01:36:29 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 01:36:29 [restartedMain] INFO  : Disable delta property : false
2024-05-20 01:36:29 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 01:36:29 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 01:36:29 [restartedMain] INFO  : Application is null : false
2024-05-20 01:36:29 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 01:36:29 [restartedMain] INFO  : Application version is -1: true
2024-05-20 01:36:29 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 01:36:29 [restartedMain] INFO  : The response status is 200
2024-05-20 01:36:29 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 01:36:29 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 01:36:29 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716186989722 with initial instances count: 2
2024-05-20 01:36:29 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 01:36:29 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716186989723, current=UP, previous=STARTING]
2024-05-20 01:36:29 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:36:29 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 01:36:29 [restartedMain] INFO  : Updating port to 8081
2024-05-20 01:36:29 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:36:30 [restartedMain] INFO  : Started FinalProjectApplication in 4.08 seconds (JVM running for 5.293)
2024-05-20 01:36:42 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:192}] to localhost:27017
2024-05-20 01:36:42 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:193}] to localhost:27017
2024-05-20 01:36:42 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:194}] to localhost:27017
2024-05-20 01:37:24 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 01:37:24 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716187044331, current=DOWN, previous=UP]
2024-05-20 01:37:24 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:37:24 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:37:26 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 01:37:29 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 01:37:29 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 01:37:29 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 01:37:33 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 16736 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 01:37:33 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 01:37:33 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 01:37:33 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 01:37:34 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 01:37:34 [restartedMain] INFO  : Finished Spring Data repository scanning in 62 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 01:37:34 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 01:37:34 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:37:34 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:37:34 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:37:35 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@54784dc5, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@12d4aa58]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 01:37:35 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:37:35 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 01:37:35 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:37:35 [cluster-ClusterId{value='664aefae20f3030405a7d981', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:195}] to localhost:27017
2024-05-20 01:37:35 [cluster-rtt-ClusterId{value='664aefae20f3030405a7d981', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:196}] to localhost:27017
2024-05-20 01:37:35 [cluster-ClusterId{value='664aefae20f3030405a7d981', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=42272500}
2024-05-20 01:37:35 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 01:37:36 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 01:37:36 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 01:37:36 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 01:37:36 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 01:37:36 [restartedMain] INFO  : Disable delta property : false
2024-05-20 01:37:36 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 01:37:36 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 01:37:36 [restartedMain] INFO  : Application is null : false
2024-05-20 01:37:36 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 01:37:36 [restartedMain] INFO  : Application version is -1: true
2024-05-20 01:37:36 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 01:37:36 [restartedMain] INFO  : The response status is 200
2024-05-20 01:37:36 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 01:37:36 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 01:37:36 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716187056653 with initial instances count: 1
2024-05-20 01:37:36 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 01:37:36 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716187056655, current=UP, previous=STARTING]
2024-05-20 01:37:36 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:37:36 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 01:37:36 [restartedMain] INFO  : Updating port to 8081
2024-05-20 01:37:36 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:37:37 [restartedMain] INFO  : Started FinalProjectApplication in 3.845 seconds (JVM running for 4.682)
2024-05-20 01:37:54 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:198}] to localhost:27017
2024-05-20 01:37:54 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:197}] to localhost:27017
2024-05-20 01:37:54 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:199}] to localhost:27017
2024-05-20 01:38:07 [nioEventLoopGroup-3-5] ERROR : [f2f16074-2]  500 Server Error for HTTP POST "/accounts/create"
org.springframework.dao.DuplicateKeyException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.fixedTermAccounts index: _id_ dup key: { _id: "72163252" }', details={}}.; nested exception is com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.fixedTermAccounts index: _id_ dup key: { _id: "72163252" }', details={}}.
	at org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:106)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler project.application.controller.BankAccountController#addBankAccount(Object) [DispatcherHandler]
	*__checkpoint ⇢ HTTP POST "/accounts/create" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:106)
		at org.springframework.data.mongodb.core.ReactiveMongoTemplate.potentiallyConvertRuntimeException(ReactiveMongoTemplate.java:2963)
		at org.springframework.data.mongodb.core.ReactiveMongoTemplate.lambda$translateException$89(ReactiveMongoTemplate.java:2946)
		at reactor.core.publisher.Flux.lambda$onErrorMap$28(Flux.java:7070)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:255)
		at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:258)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:545)
		at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$9(OperationExecutorImpl.java:124)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.operation.CommandOperationHelper.lambda$exceptionTransformingCallback$23(CommandOperationHelper.java:632)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
		at com.mongodb.internal.async.function.RetryingAsyncCallbackSupplier$RetryingCallback.onResult(RetryingAsyncCallbackSupplier.java:109)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
		at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$11(MixedBulkWriteOperation.java:464)
		at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:84)
		at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:61)
		at com.mongodb.internal.async.function.LoopState.breakAndCompleteIf(LoopState.java:111)
		at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$10(MixedBulkWriteOperation.java:418)
		at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:82)
		at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:61)
		at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$9(MixedBulkWriteOperation.java:440)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor$2.onResult(DefaultServer.java:276)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.CommandProtocolImpl$1.onResult(CommandProtocolImpl.java:84)
		at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection$1.onResult(DefaultConnectionPool.java:684)
		at com.mongodb.internal.connection.UsageTrackingInternalConnection$2.onResult(UsageTrackingInternalConnection.java:159)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:521)
		at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:498)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:821)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:785)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:266)
		at com.mongodb.internal.connection.InternalStreamConnection.readAsync(InternalStreamConnection.java:642)
		at com.mongodb.internal.connection.InternalStreamConnection.access$600(InternalStreamConnection.java:86)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:775)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:760)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
		at com.mongodb.connection.netty.NettyStream.handleReadResponse(NettyStream.java:347)
		at com.mongodb.connection.netty.NettyStream.access$1100(NettyStream.java:105)
		at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:421)
		at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:418)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.fixedTermAccounts index: _id_ dup key: { _id: "72163252" }', details={}}.
	at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$createSingleWriteRequestMono$24(MongoOperationPublisher.java:490)
	at reactor.core.publisher.Mono.lambda$onErrorMap$30(Mono.java:3797)
	at reactor.core.publisher.Mono.lambda$onErrorResume$32(Mono.java:3887)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:258)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:545)
	at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$9(OperationExecutorImpl.java:124)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.operation.CommandOperationHelper.lambda$exceptionTransformingCallback$23(CommandOperationHelper.java:632)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.async.function.RetryingAsyncCallbackSupplier$RetryingCallback.onResult(RetryingAsyncCallbackSupplier.java:109)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$11(MixedBulkWriteOperation.java:464)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:84)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:61)
	at com.mongodb.internal.async.function.LoopState.breakAndCompleteIf(LoopState.java:111)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$10(MixedBulkWriteOperation.java:418)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:82)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:61)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$9(MixedBulkWriteOperation.java:440)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor$2.onResult(DefaultServer.java:276)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.CommandProtocolImpl$1.onResult(CommandProtocolImpl.java:84)
	at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection$1.onResult(DefaultConnectionPool.java:684)
	at com.mongodb.internal.connection.UsageTrackingInternalConnection$2.onResult(UsageTrackingInternalConnection.java:159)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:521)
	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:498)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:821)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:785)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:266)
	at com.mongodb.internal.connection.InternalStreamConnection.readAsync(InternalStreamConnection.java:642)
	at com.mongodb.internal.connection.InternalStreamConnection.access$600(InternalStreamConnection.java:86)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:775)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:760)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
	at com.mongodb.connection.netty.NettyStream.handleReadResponse(NettyStream.java:347)
	at com.mongodb.connection.netty.NettyStream.access$1100(NettyStream.java:105)
	at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:421)
	at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:418)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
2024-05-20 01:39:29 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 01:39:29 [Thread-1] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 01:39:29 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716187169427, current=DOWN, previous=UP]
2024-05-20 01:39:29 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:39:29 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:39:31 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 01:39:34 [Thread-1] INFO  : Unregistering ...
2024-05-20 01:39:34 [Thread-1] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 01:39:34 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 01:39:35 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 16736 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 01:39:35 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 01:39:35 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 01:39:35 [restartedMain] INFO  : Finished Spring Data repository scanning in 50 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 01:39:35 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 01:39:35 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:39:35 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:39:35 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:39:35 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@472ddff2, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@12d4aa58]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 01:39:35 [cluster-ClusterId{value='664af02720f3030405a7d982', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:200}] to localhost:27017
2024-05-20 01:39:35 [cluster-ClusterId{value='664af02720f3030405a7d982', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1791100}
2024-05-20 01:39:35 [cluster-rtt-ClusterId{value='664af02720f3030405a7d982', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:201}] to localhost:27017
2024-05-20 01:39:35 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:39:35 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 01:39:35 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:39:36 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 01:39:36 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 01:39:36 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 01:39:36 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 01:39:36 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 01:39:36 [restartedMain] INFO  : Disable delta property : false
2024-05-20 01:39:36 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 01:39:36 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 01:39:36 [restartedMain] INFO  : Application is null : false
2024-05-20 01:39:36 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 01:39:36 [restartedMain] INFO  : Application version is -1: true
2024-05-20 01:39:36 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 01:39:36 [restartedMain] INFO  : The response status is 200
2024-05-20 01:39:36 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 01:39:36 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 01:39:36 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716187176858 with initial instances count: 2
2024-05-20 01:39:36 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 01:39:36 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716187176859, current=UP, previous=STARTING]
2024-05-20 01:39:36 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:39:36 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 01:39:36 [restartedMain] INFO  : Updating port to 8081
2024-05-20 01:39:36 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:39:37 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 01:39:37 [restartedMain] INFO  : Started FinalProjectApplication in 2.795 seconds (JVM running for 125.036)
2024-05-20 01:39:37 [Thread-16] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 01:39:37 [Thread-16] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716187177429, current=DOWN, previous=UP]
2024-05-20 01:39:37 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:39:37 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 01:39:37 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:39:39 [Thread-16] INFO  : Shutting down DiscoveryClient ...
2024-05-20 01:39:42 [Thread-16] INFO  : Unregistering ...
2024-05-20 01:39:42 [Thread-16] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 01:39:42 [Thread-16] INFO  : Completed shut down of DiscoveryClient
2024-05-20 01:39:42 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 16736 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 01:39:42 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 01:39:43 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 01:39:43 [restartedMain] INFO  : Finished Spring Data repository scanning in 23 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 01:39:43 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 01:39:43 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:39:43 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:39:43 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:39:43 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@17627305, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@12d4aa58]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 01:39:43 [cluster-ClusterId{value='664af02f20f3030405a7d983', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:9, serverValue:203}] to localhost:27017
2024-05-20 01:39:43 [cluster-rtt-ClusterId{value='664af02f20f3030405a7d983', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:8, serverValue:202}] to localhost:27017
2024-05-20 01:39:43 [cluster-ClusterId{value='664af02f20f3030405a7d983', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1745700}
2024-05-20 01:39:43 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:39:43 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 01:39:43 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:39:43 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 01:39:44 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 01:39:44 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 01:39:44 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 01:39:44 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 01:39:44 [restartedMain] INFO  : Disable delta property : false
2024-05-20 01:39:44 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 01:39:44 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 01:39:44 [restartedMain] INFO  : Application is null : false
2024-05-20 01:39:44 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 01:39:44 [restartedMain] INFO  : Application version is -1: true
2024-05-20 01:39:44 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 01:39:44 [restartedMain] INFO  : The response status is 200
2024-05-20 01:39:44 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 01:39:44 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 01:39:44 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716187184114 with initial instances count: 2
2024-05-20 01:39:44 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 01:39:44 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716187184115, current=UP, previous=STARTING]
2024-05-20 01:39:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:39:44 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 01:39:44 [restartedMain] INFO  : Updating port to 8081
2024-05-20 01:39:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:39:44 [restartedMain] INFO  : Started FinalProjectApplication in 1.916 seconds (JVM running for 132.132)
2024-05-20 01:39:44 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 01:40:10 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 01:40:10 [Thread-23] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 01:40:10 [Thread-23] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716187210517, current=DOWN, previous=UP]
2024-05-20 01:40:10 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:40:10 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:40:12 [Thread-23] INFO  : Shutting down DiscoveryClient ...
2024-05-20 01:40:15 [DiscoveryClient-0] WARN  : task supervisor shutting down, can't accept the task
2024-05-20 01:40:15 [Thread-23] INFO  : Unregistering ...
2024-05-20 01:40:15 [Thread-23] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 01:40:15 [Thread-23] INFO  : Completed shut down of DiscoveryClient
2024-05-20 01:40:16 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 16736 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 01:40:16 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 01:40:16 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 01:40:16 [restartedMain] INFO  : Finished Spring Data repository scanning in 34 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 01:40:16 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 01:40:16 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:40:16 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:40:16 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:40:16 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@53005f69, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@12d4aa58]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 01:40:16 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:40:16 [cluster-rtt-ClusterId{value='664af05020f3030405a7d984', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:11, serverValue:204}] to localhost:27017
2024-05-20 01:40:16 [cluster-ClusterId{value='664af05020f3030405a7d984', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:10, serverValue:205}] to localhost:27017
2024-05-20 01:40:16 [cluster-ClusterId{value='664af05020f3030405a7d984', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4331900}
2024-05-20 01:40:16 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 01:40:16 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:40:16 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'BARepoFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\factory\BARepoFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'savingsAccAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\adapters\SavingsAccAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsRepo' defined in project.infrastructure.adapters.MongoRepo.SavingsRepo defined in @EnableReactiveMongoRepositories declared on FinalProjectApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.existsByClientId(java.lang.String); Reason: No property 'clientId' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'clientId' found for type 'SavingsAccount'
2024-05-20 01:40:18 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-20 01:40:18 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'BARepoFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\factory\BARepoFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'savingsAccAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\adapters\SavingsAccAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsRepo' defined in project.infrastructure.adapters.MongoRepo.SavingsRepo defined in @EnableReactiveMongoRepositories declared on FinalProjectApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.existsByClientId(java.lang.String); Reason: No property 'clientId' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'clientId' found for type 'SavingsAccount'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'BARepoFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\factory\BARepoFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'savingsAccAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\adapters\SavingsAccAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsRepo' defined in project.infrastructure.adapters.MongoRepo.SavingsRepo defined in @EnableReactiveMongoRepositories declared on FinalProjectApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.existsByClientId(java.lang.String); Reason: No property 'clientId' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'clientId' found for type 'SavingsAccount'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'BARepoFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\factory\BARepoFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'savingsAccAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\adapters\SavingsAccAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsRepo' defined in project.infrastructure.adapters.MongoRepo.SavingsRepo defined in @EnableReactiveMongoRepositories declared on FinalProjectApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.existsByClientId(java.lang.String); Reason: No property 'clientId' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'clientId' found for type 'SavingsAccount'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 38 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'savingsAccAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\adapters\SavingsAccAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsRepo' defined in project.infrastructure.adapters.MongoRepo.SavingsRepo defined in @EnableReactiveMongoRepositories declared on FinalProjectApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.existsByClientId(java.lang.String); Reason: No property 'clientId' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'clientId' found for type 'SavingsAccount'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 52 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsRepo' defined in project.infrastructure.adapters.MongoRepo.SavingsRepo defined in @EnableReactiveMongoRepositories declared on FinalProjectApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.existsByClientId(java.lang.String); Reason: No property 'clientId' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'clientId' found for type 'SavingsAccount'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 66 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.existsByClientId(java.lang.String); Reason: No property 'clientId' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'clientId' found for type 'SavingsAccount'
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:107)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:95)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1054)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:97)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:87)
	at java.base/java.util.Optional.map(Optional.java:265)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:87)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:365)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.mongodb.repository.support.ReactiveMongoRepositoryFactoryBean.afterPropertiesSet(ReactiveMongoRepositoryFactoryBean.java:133)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 77 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property 'clientId' found for type 'SavingsAccount'
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:91)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:438)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:414)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:367)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:349)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:332)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:250)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:251)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:384)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:385)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:96)
	at org.springframework.data.mongodb.repository.query.ReactivePartTreeMongoQuery.<init>(ReactivePartTreeMongoQuery.java:66)
	at org.springframework.data.mongodb.repository.support.ReactiveMongoRepositoryFactory$MongoQueryLookupStrategy.resolveQuery(ReactiveMongoRepositoryFactory.java:206)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:103)
	... 99 common frames omitted
2024-05-20 01:40:20 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 16736 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 01:40:20 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 01:40:20 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 01:40:20 [restartedMain] INFO  : Finished Spring Data repository scanning in 41 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 01:40:20 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 01:40:20 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:40:20 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:40:20 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:40:20 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3e56da60, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@12d4aa58]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 01:40:20 [cluster-ClusterId{value='664af05420f3030405a7d985', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:12, serverValue:206}] to localhost:27017
2024-05-20 01:40:20 [cluster-ClusterId{value='664af05420f3030405a7d985', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4521700}
2024-05-20 01:40:20 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:40:20 [cluster-rtt-ClusterId{value='664af05420f3030405a7d985', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:13, serverValue:207}] to localhost:27017
2024-05-20 01:40:20 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 01:40:21 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:40:21 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'BARepoFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\factory\BARepoFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'savingsAccAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\adapters\SavingsAccAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsRepo' defined in project.infrastructure.adapters.MongoRepo.SavingsRepo defined in @EnableReactiveMongoRepositories declared on FinalProjectApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.existsByClientId(java.lang.String); Reason: No property 'clientId' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'clientId' found for type 'SavingsAccount'
2024-05-20 01:40:23 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-20 01:40:23 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'BARepoFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\factory\BARepoFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'savingsAccAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\adapters\SavingsAccAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsRepo' defined in project.infrastructure.adapters.MongoRepo.SavingsRepo defined in @EnableReactiveMongoRepositories declared on FinalProjectApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.existsByClientId(java.lang.String); Reason: No property 'clientId' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'clientId' found for type 'SavingsAccount'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'BARepoFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\factory\BARepoFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'savingsAccAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\adapters\SavingsAccAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsRepo' defined in project.infrastructure.adapters.MongoRepo.SavingsRepo defined in @EnableReactiveMongoRepositories declared on FinalProjectApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.existsByClientId(java.lang.String); Reason: No property 'clientId' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'clientId' found for type 'SavingsAccount'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'BARepoFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\factory\BARepoFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'savingsAccAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\adapters\SavingsAccAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsRepo' defined in project.infrastructure.adapters.MongoRepo.SavingsRepo defined in @EnableReactiveMongoRepositories declared on FinalProjectApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.existsByClientId(java.lang.String); Reason: No property 'clientId' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'clientId' found for type 'SavingsAccount'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 38 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'savingsAccAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\adapters\SavingsAccAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsRepo' defined in project.infrastructure.adapters.MongoRepo.SavingsRepo defined in @EnableReactiveMongoRepositories declared on FinalProjectApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.existsByClientId(java.lang.String); Reason: No property 'clientId' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'clientId' found for type 'SavingsAccount'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 52 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsRepo' defined in project.infrastructure.adapters.MongoRepo.SavingsRepo defined in @EnableReactiveMongoRepositories declared on FinalProjectApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.existsByClientId(java.lang.String); Reason: No property 'clientId' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'clientId' found for type 'SavingsAccount'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 66 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.existsByClientId(java.lang.String); Reason: No property 'clientId' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'clientId' found for type 'SavingsAccount'
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:107)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:95)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1054)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:97)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:87)
	at java.base/java.util.Optional.map(Optional.java:265)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:87)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:365)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.mongodb.repository.support.ReactiveMongoRepositoryFactoryBean.afterPropertiesSet(ReactiveMongoRepositoryFactoryBean.java:133)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 77 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property 'clientId' found for type 'SavingsAccount'
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:91)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:438)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:414)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:367)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:349)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:332)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:250)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:251)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:384)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:385)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:96)
	at org.springframework.data.mongodb.repository.query.ReactivePartTreeMongoQuery.<init>(ReactivePartTreeMongoQuery.java:66)
	at org.springframework.data.mongodb.repository.support.ReactiveMongoRepositoryFactory$MongoQueryLookupStrategy.resolveQuery(ReactiveMongoRepositoryFactory.java:206)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:103)
	... 99 common frames omitted
2024-05-20 01:40:48 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 5376 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 01:40:48 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 01:40:48 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 01:40:48 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 01:40:48 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 01:40:48 [restartedMain] INFO  : Finished Spring Data repository scanning in 85 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 01:40:49 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 01:40:49 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:40:49 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:40:49 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:40:49 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@276dea84, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@494af66b]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 01:40:49 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:40:49 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 01:40:49 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:40:49 [cluster-rtt-ClusterId{value='664af0715bb1003a8033d6cc', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:208}] to localhost:27017
2024-05-20 01:40:49 [cluster-ClusterId{value='664af0715bb1003a8033d6cc', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:209}] to localhost:27017
2024-05-20 01:40:49 [cluster-ClusterId{value='664af0715bb1003a8033d6cc', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=44810500}
2024-05-20 01:40:49 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'BARepoFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\factory\BARepoFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'savingsAccAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\adapters\SavingsAccAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsRepo' defined in project.infrastructure.adapters.MongoRepo.SavingsRepo defined in @EnableReactiveMongoRepositories declared on FinalProjectApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.existsByClientId(java.lang.String); Reason: No property 'clientId' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'clientId' found for type 'SavingsAccount'
2024-05-20 01:40:51 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-20 01:40:51 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'BARepoFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\factory\BARepoFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'savingsAccAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\adapters\SavingsAccAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsRepo' defined in project.infrastructure.adapters.MongoRepo.SavingsRepo defined in @EnableReactiveMongoRepositories declared on FinalProjectApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.existsByClientId(java.lang.String); Reason: No property 'clientId' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'clientId' found for type 'SavingsAccount'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'BARepoFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\factory\BARepoFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'savingsAccAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\adapters\SavingsAccAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsRepo' defined in project.infrastructure.adapters.MongoRepo.SavingsRepo defined in @EnableReactiveMongoRepositories declared on FinalProjectApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.existsByClientId(java.lang.String); Reason: No property 'clientId' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'clientId' found for type 'SavingsAccount'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'BARepoFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\factory\BARepoFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'savingsAccAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\adapters\SavingsAccAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsRepo' defined in project.infrastructure.adapters.MongoRepo.SavingsRepo defined in @EnableReactiveMongoRepositories declared on FinalProjectApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.existsByClientId(java.lang.String); Reason: No property 'clientId' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'clientId' found for type 'SavingsAccount'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 38 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'savingsAccAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\adapters\SavingsAccAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsRepo' defined in project.infrastructure.adapters.MongoRepo.SavingsRepo defined in @EnableReactiveMongoRepositories declared on FinalProjectApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.existsByClientId(java.lang.String); Reason: No property 'clientId' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'clientId' found for type 'SavingsAccount'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 52 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsRepo' defined in project.infrastructure.adapters.MongoRepo.SavingsRepo defined in @EnableReactiveMongoRepositories declared on FinalProjectApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.existsByClientId(java.lang.String); Reason: No property 'clientId' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'clientId' found for type 'SavingsAccount'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 66 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.existsByClientId(java.lang.String); Reason: No property 'clientId' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'clientId' found for type 'SavingsAccount'
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:107)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:95)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1054)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:97)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:87)
	at java.base/java.util.Optional.map(Optional.java:265)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:87)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:365)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.mongodb.repository.support.ReactiveMongoRepositoryFactoryBean.afterPropertiesSet(ReactiveMongoRepositoryFactoryBean.java:133)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 77 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property 'clientId' found for type 'SavingsAccount'
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:91)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:438)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:414)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:367)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:349)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:332)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:250)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:251)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:384)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:385)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:96)
	at org.springframework.data.mongodb.repository.query.ReactivePartTreeMongoQuery.<init>(ReactivePartTreeMongoQuery.java:66)
	at org.springframework.data.mongodb.repository.support.ReactiveMongoRepositoryFactory$MongoQueryLookupStrategy.resolveQuery(ReactiveMongoRepositoryFactory.java:206)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:103)
	... 99 common frames omitted
2024-05-20 01:44:04 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 2408 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 01:44:04 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 01:44:04 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 01:44:04 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 01:44:04 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 01:44:04 [restartedMain] INFO  : Finished Spring Data repository scanning in 61 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 01:44:05 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 01:44:05 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:44:05 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:44:05 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:44:05 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@2efc9845, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@37f2b1fb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 01:44:05 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:44:05 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 01:44:05 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:44:05 [cluster-ClusterId{value='664af13564c9cd57da2670cb', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:211}] to localhost:27017
2024-05-20 01:44:05 [cluster-rtt-ClusterId{value='664af13564c9cd57da2670cb', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:210}] to localhost:27017
2024-05-20 01:44:05 [cluster-ClusterId{value='664af13564c9cd57da2670cb', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=46552000}
2024-05-20 01:44:06 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 01:44:06 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 01:44:06 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 01:44:06 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 01:44:06 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 01:44:06 [restartedMain] INFO  : Disable delta property : false
2024-05-20 01:44:06 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 01:44:06 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 01:44:06 [restartedMain] INFO  : Application is null : false
2024-05-20 01:44:06 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 01:44:06 [restartedMain] INFO  : Application version is -1: true
2024-05-20 01:44:06 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 01:44:07 [restartedMain] INFO  : The response status is 200
2024-05-20 01:44:07 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 01:44:07 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 01:44:07 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716187447101 with initial instances count: 1
2024-05-20 01:44:07 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 01:44:07 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716187447104, current=UP, previous=STARTING]
2024-05-20 01:44:07 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:44:07 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 01:44:07 [restartedMain] INFO  : Updating port to 8081
2024-05-20 01:44:07 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:44:07 [restartedMain] INFO  : Started FinalProjectApplication in 3.817 seconds (JVM running for 4.714)
2024-05-20 01:45:32 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 01:45:32 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716187532430, current=DOWN, previous=UP]
2024-05-20 01:45:32 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:45:32 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:45:34 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 01:45:37 [DiscoveryClient-0] WARN  : task supervisor shutting down, can't accept the task
2024-05-20 01:45:37 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 01:45:37 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 01:45:37 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 01:45:43 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 15556 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 01:45:43 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 01:45:43 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 01:45:43 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 01:45:43 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 01:45:43 [restartedMain] INFO  : Finished Spring Data repository scanning in 68 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 01:45:44 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 01:45:44 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:45:44 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:45:44 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:45:44 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3a810607, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@25bf90c2]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 01:45:44 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:45:44 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 01:45:44 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:45:44 [cluster-rtt-ClusterId{value='664af198697a0f2d8915c5b5', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:212}] to localhost:27017
2024-05-20 01:45:44 [cluster-ClusterId{value='664af198697a0f2d8915c5b5', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:213}] to localhost:27017
2024-05-20 01:45:44 [cluster-ClusterId{value='664af198697a0f2d8915c5b5', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=45705900}
2024-05-20 01:45:45 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 01:45:45 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 01:45:45 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 01:45:45 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 01:45:45 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 01:45:45 [restartedMain] INFO  : Disable delta property : false
2024-05-20 01:45:45 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 01:45:45 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 01:45:45 [restartedMain] INFO  : Application is null : false
2024-05-20 01:45:45 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 01:45:45 [restartedMain] INFO  : Application version is -1: true
2024-05-20 01:45:45 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 01:45:46 [restartedMain] INFO  : The response status is 200
2024-05-20 01:45:46 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 01:45:46 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 01:45:46 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716187546143 with initial instances count: 2
2024-05-20 01:45:46 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 01:45:46 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716187546146, current=UP, previous=STARTING]
2024-05-20 01:45:46 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:45:46 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 01:45:46 [restartedMain] INFO  : Updating port to 8081
2024-05-20 01:45:46 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:45:46 [restartedMain] INFO  : Started FinalProjectApplication in 3.981 seconds (JVM running for 4.815)
2024-05-20 01:45:50 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:214}] to localhost:27017
2024-05-20 01:45:50 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:215}] to localhost:27017
2024-05-20 01:45:50 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:216}] to localhost:27017
2024-05-20 01:50:45 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 01:51:23 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 01:51:23 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716187883269, current=DOWN, previous=UP]
2024-05-20 01:51:23 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:51:23 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:51:25 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 01:51:28 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 01:51:28 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 01:51:28 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 01:51:33 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 15696 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 01:51:33 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 01:51:33 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 01:51:33 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 01:51:33 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 01:51:33 [restartedMain] INFO  : Finished Spring Data repository scanning in 72 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 01:51:34 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 01:51:34 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:51:34 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:51:34 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:51:34 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@c134f87, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@54784dc5]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 01:51:34 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:51:35 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 01:51:35 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:51:35 [cluster-ClusterId{value='664af2f67bc4462f862c94b2', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:218}] to localhost:27017
2024-05-20 01:51:35 [cluster-rtt-ClusterId{value='664af2f67bc4462f862c94b2', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:217}] to localhost:27017
2024-05-20 01:51:35 [cluster-ClusterId{value='664af2f67bc4462f862c94b2', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=49093900}
2024-05-20 01:51:35 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 01:51:36 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 01:51:36 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 01:51:36 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 01:51:36 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 01:51:36 [restartedMain] INFO  : Disable delta property : false
2024-05-20 01:51:36 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 01:51:36 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 01:51:36 [restartedMain] INFO  : Application is null : false
2024-05-20 01:51:36 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 01:51:36 [restartedMain] INFO  : Application version is -1: true
2024-05-20 01:51:36 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 01:51:36 [restartedMain] INFO  : The response status is 200
2024-05-20 01:51:36 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 01:51:36 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 01:51:36 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716187896827 with initial instances count: 1
2024-05-20 01:51:36 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 01:51:36 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716187896830, current=UP, previous=STARTING]
2024-05-20 01:51:36 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:51:36 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 01:51:36 [restartedMain] INFO  : Updating port to 8081
2024-05-20 01:51:36 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:51:37 [restartedMain] INFO  : Started FinalProjectApplication in 4.881 seconds (JVM running for 5.913)
2024-05-20 01:53:04 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:219}] to localhost:27017
2024-05-20 01:53:04 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:220}] to localhost:27017
2024-05-20 01:53:04 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:221}] to localhost:27017
2024-05-20 01:53:09 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 01:53:09 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716187989753, current=DOWN, previous=UP]
2024-05-20 01:53:09 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:53:09 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:53:11 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 01:53:14 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 01:53:14 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 01:53:14 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 01:53:20 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 31964 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 01:53:20 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 01:53:20 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 01:53:20 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 01:53:20 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 01:53:21 [restartedMain] INFO  : Finished Spring Data repository scanning in 67 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 01:53:21 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 01:53:21 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:53:21 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:53:21 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 01:53:21 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@682a8b90, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5f9b6aa7]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 01:53:21 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:53:21 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 01:53:21 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 01:53:21 [cluster-ClusterId{value='664af361c47bf245b66e9174', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:223}] to localhost:27017
2024-05-20 01:53:21 [cluster-rtt-ClusterId{value='664af361c47bf245b66e9174', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:222}] to localhost:27017
2024-05-20 01:53:21 [cluster-ClusterId{value='664af361c47bf245b66e9174', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=40995800}
2024-05-20 01:53:22 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 01:53:22 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 01:53:22 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 01:53:22 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 01:53:22 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 01:53:22 [restartedMain] INFO  : Disable delta property : false
2024-05-20 01:53:22 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 01:53:22 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 01:53:22 [restartedMain] INFO  : Application is null : false
2024-05-20 01:53:22 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 01:53:22 [restartedMain] INFO  : Application version is -1: true
2024-05-20 01:53:22 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 01:53:23 [restartedMain] INFO  : The response status is 200
2024-05-20 01:53:23 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 01:53:23 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 01:53:23 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716188003237 with initial instances count: 2
2024-05-20 01:53:23 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 01:53:23 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716188003239, current=UP, previous=STARTING]
2024-05-20 01:53:23 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 01:53:23 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 01:53:23 [restartedMain] INFO  : Updating port to 8081
2024-05-20 01:53:23 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 01:53:23 [restartedMain] INFO  : Started FinalProjectApplication in 3.894 seconds (JVM running for 4.781)
2024-05-20 01:54:37 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:225}] to localhost:27017
2024-05-20 01:54:37 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:224}] to localhost:27017
2024-05-20 01:54:37 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:226}] to localhost:27017
2024-05-20 01:58:22 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 02:03:22 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 02:05:02 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 02:05:02 [Thread-1] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 02:05:02 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716188702031, current=DOWN, previous=UP]
2024-05-20 02:05:02 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 02:05:02 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 02:05:04 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 02:05:07 [Thread-1] INFO  : Unregistering ...
2024-05-20 02:05:07 [Thread-1] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 02:05:07 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 02:05:07 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 31964 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 02:05:07 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 02:05:07 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 02:05:07 [restartedMain] INFO  : Finished Spring Data repository scanning in 34 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 02:05:07 [restartedMain] INFO  : BeanFactory id=5e813907-ed8a-39e5-8c09-63c7ac2f5e46
2024-05-20 02:05:07 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:05:07 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:05:07 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:05:07 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'BARepoFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\factory\BARepoFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsAccAdapter': Resolution of declared constructors on bean Class [project.infrastructure.adapters.SavingsAccAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@ac5f373] failed; nested exception is java.lang.NoClassDefFoundError: project/domain/validations/ProductDomainValidations
2024-05-20 02:05:07 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-20 02:05:07 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'BARepoFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\factory\BARepoFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsAccAdapter': Resolution of declared constructors on bean Class [project.infrastructure.adapters.SavingsAccAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@ac5f373] failed; nested exception is java.lang.NoClassDefFoundError: project/domain/validations/ProductDomainValidations
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'BARepoFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\factory\BARepoFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsAccAdapter': Resolution of declared constructors on bean Class [project.infrastructure.adapters.SavingsAccAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@ac5f373] failed; nested exception is java.lang.NoClassDefFoundError: project/domain/validations/ProductDomainValidations
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'BARepoFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\factory\BARepoFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsAccAdapter': Resolution of declared constructors on bean Class [project.infrastructure.adapters.SavingsAccAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@ac5f373] failed; nested exception is java.lang.NoClassDefFoundError: project/domain/validations/ProductDomainValidations
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 38 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsAccAdapter': Resolution of declared constructors on bean Class [project.infrastructure.adapters.SavingsAccAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@ac5f373] failed; nested exception is java.lang.NoClassDefFoundError: project/domain/validations/ProductDomainValidations
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 52 common frames omitted
Caused by: java.lang.NoClassDefFoundError: project/domain/validations/ProductDomainValidations
	at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3137)
	at java.base/java.lang.Class.getDeclaredConstructors(Class.java:2357)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:313)
	... 65 common frames omitted
Caused by: java.lang.ClassNotFoundException: project.domain.validations.ProductDomainValidations
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:398)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 69 common frames omitted
2024-05-20 02:09:35 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 31964 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 02:09:35 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 02:09:36 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 02:09:36 [restartedMain] INFO  : Finished Spring Data repository scanning in 23 ms. Found 5 Reactive MongoDB repository interfaces.
2024-05-20 02:09:36 [restartedMain] INFO  : BeanFactory id=f3d7f8b7-286a-3530-9a57-158192ebb475
2024-05-20 02:09:36 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:09:36 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:09:36 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:09:36 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1a41b153, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5f9b6aa7]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 02:09:36 [cluster-ClusterId{value='664af730c47bf245b66e9175', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:228}] to localhost:27017
2024-05-20 02:09:36 [cluster-rtt-ClusterId{value='664af730c47bf245b66e9175', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:227}] to localhost:27017
2024-05-20 02:09:36 [cluster-ClusterId{value='664af730c47bf245b66e9175', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2313300}
2024-05-20 02:09:36 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 02:09:36 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 02:09:36 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 02:09:36 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 02:09:37 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 02:09:37 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 02:09:37 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 02:09:37 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 02:09:37 [restartedMain] INFO  : Disable delta property : false
2024-05-20 02:09:37 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 02:09:37 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 02:09:37 [restartedMain] INFO  : Application is null : false
2024-05-20 02:09:37 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 02:09:37 [restartedMain] INFO  : Application version is -1: true
2024-05-20 02:09:37 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 02:09:37 [restartedMain] INFO  : The response status is 200
2024-05-20 02:09:37 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 02:09:37 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 02:09:37 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716188977339 with initial instances count: 1
2024-05-20 02:09:37 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 02:09:37 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716188977340, current=UP, previous=STARTING]
2024-05-20 02:09:37 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 02:09:37 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 02:09:37 [restartedMain] INFO  : Updating port to 8081
2024-05-20 02:09:37 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 02:09:37 [restartedMain] INFO  : Started FinalProjectApplication in 2.297 seconds (JVM running for 978.942)
2024-05-20 02:09:37 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 02:09:48 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 02:09:48 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716188988353, current=DOWN, previous=UP]
2024-05-20 02:09:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 02:09:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 02:09:50 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 02:09:53 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 02:09:53 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 02:09:53 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 02:30:34 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 19992 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 02:30:34 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 02:30:34 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 02:30:34 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 02:30:34 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 02:30:34 [restartedMain] INFO  : Finished Spring Data repository scanning in 58 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 02:30:34 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 02:30:35 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:30:35 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:30:35 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:30:35 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@35658f81, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2778530f]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 02:30:35 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 02:30:35 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 02:30:35 [cluster-rtt-ClusterId{value='664afc1b23f57b2fd584e3bb', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:229}] to localhost:27017
2024-05-20 02:30:35 [cluster-ClusterId{value='664afc1b23f57b2fd584e3bb', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:230}] to localhost:27017
2024-05-20 02:30:35 [cluster-ClusterId{value='664afc1b23f57b2fd584e3bb', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=43572500}
2024-05-20 02:30:35 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 02:30:36 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 02:30:36 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 02:30:36 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 02:30:36 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 02:30:36 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 02:30:36 [restartedMain] INFO  : Disable delta property : false
2024-05-20 02:30:36 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 02:30:36 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 02:30:36 [restartedMain] INFO  : Application is null : false
2024-05-20 02:30:36 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 02:30:36 [restartedMain] INFO  : Application version is -1: true
2024-05-20 02:30:36 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 02:30:37 [restartedMain] INFO  : The response status is 200
2024-05-20 02:30:37 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 02:30:37 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 02:30:37 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716190237070 with initial instances count: 1
2024-05-20 02:30:37 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 02:30:37 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716190237072, current=UP, previous=STARTING]
2024-05-20 02:30:37 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 02:30:37 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 02:30:37 [restartedMain] INFO  : Updating port to 8081
2024-05-20 02:30:37 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 02:30:37 [restartedMain] INFO  : Started FinalProjectApplication in 3.974 seconds (JVM running for 4.863)
2024-05-20 02:31:45 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:232}] to localhost:27017
2024-05-20 02:31:45 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:231}] to localhost:27017
2024-05-20 02:31:45 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:233}] to localhost:27017
2024-05-20 02:34:11 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 02:34:11 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716190451381, current=DOWN, previous=UP]
2024-05-20 02:34:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 02:34:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 02:34:13 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 02:34:16 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 02:34:16 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 02:34:16 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 02:34:20 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 21640 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 02:34:20 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 02:34:20 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 02:34:20 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 02:34:21 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 02:34:21 [restartedMain] INFO  : Finished Spring Data repository scanning in 60 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 02:34:21 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 02:34:21 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:34:21 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:34:21 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:34:22 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@7bb2308d, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5566616d]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 02:34:22 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 02:34:22 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 02:34:22 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 02:34:22 [cluster-ClusterId{value='664afcfe227a4d2a1d2e9acf', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:234}] to localhost:27017
2024-05-20 02:34:22 [cluster-rtt-ClusterId{value='664afcfe227a4d2a1d2e9acf', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:235}] to localhost:27017
2024-05-20 02:34:22 [cluster-ClusterId{value='664afcfe227a4d2a1d2e9acf', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=44079600}
2024-05-20 02:34:22 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 02:34:23 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 02:34:23 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 02:34:23 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 02:34:23 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 02:34:23 [restartedMain] INFO  : Disable delta property : false
2024-05-20 02:34:23 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 02:34:23 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 02:34:23 [restartedMain] INFO  : Application is null : false
2024-05-20 02:34:23 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 02:34:23 [restartedMain] INFO  : Application version is -1: true
2024-05-20 02:34:23 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 02:34:23 [restartedMain] INFO  : The response status is 200
2024-05-20 02:34:23 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 02:34:23 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 02:34:23 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716190463691 with initial instances count: 2
2024-05-20 02:34:23 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 02:34:23 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716190463693, current=UP, previous=STARTING]
2024-05-20 02:34:23 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 02:34:23 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 02:34:23 [restartedMain] INFO  : Updating port to 8081
2024-05-20 02:34:23 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 02:34:24 [restartedMain] INFO  : Started FinalProjectApplication in 3.823 seconds (JVM running for 4.651)
2024-05-20 02:34:37 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:237}] to localhost:27017
2024-05-20 02:34:37 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:236}] to localhost:27017
2024-05-20 02:34:37 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:238}] to localhost:27017
2024-05-20 02:35:04 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 02:35:04 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716190504252, current=DOWN, previous=UP]
2024-05-20 02:35:04 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 02:35:04 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 02:35:06 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 02:35:09 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 02:35:09 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 02:35:09 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 02:35:13 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 17912 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 02:35:13 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 02:35:13 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 02:35:13 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 02:35:14 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 02:35:14 [restartedMain] INFO  : Finished Spring Data repository scanning in 59 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 02:35:14 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 02:35:14 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:35:14 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:35:14 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:35:14 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@6cf0e91b, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@38c94071]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 02:35:14 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 02:35:14 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 02:35:15 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 02:35:15 [cluster-ClusterId{value='664afd3285ad1a542c09e4b5', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:240}] to localhost:27017
2024-05-20 02:35:15 [cluster-rtt-ClusterId{value='664afd3285ad1a542c09e4b5', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:239}] to localhost:27017
2024-05-20 02:35:15 [cluster-ClusterId{value='664afd3285ad1a542c09e4b5', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=41166000}
2024-05-20 02:35:15 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 02:35:16 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 02:35:16 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 02:35:16 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 02:35:16 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 02:35:16 [restartedMain] INFO  : Disable delta property : false
2024-05-20 02:35:16 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 02:35:16 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 02:35:16 [restartedMain] INFO  : Application is null : false
2024-05-20 02:35:16 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 02:35:16 [restartedMain] INFO  : Application version is -1: true
2024-05-20 02:35:16 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 02:35:16 [restartedMain] INFO  : The response status is 200
2024-05-20 02:35:16 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 02:35:16 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 02:35:16 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716190516453 with initial instances count: 2
2024-05-20 02:35:16 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 02:35:16 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716190516455, current=UP, previous=STARTING]
2024-05-20 02:35:16 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 02:35:16 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 02:35:16 [restartedMain] INFO  : Updating port to 8081
2024-05-20 02:35:16 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 02:35:16 [restartedMain] INFO  : Started FinalProjectApplication in 3.769 seconds (JVM running for 4.627)
2024-05-20 02:35:34 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:241}] to localhost:27017
2024-05-20 02:35:34 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:242}] to localhost:27017
2024-05-20 02:35:34 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:243}] to localhost:27017
2024-05-20 02:38:07 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 02:38:07 [Thread-1] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 02:38:07 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716190687925, current=DOWN, previous=UP]
2024-05-20 02:38:07 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 02:38:07 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 02:38:10 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 02:38:13 [Thread-1] INFO  : Unregistering ...
2024-05-20 02:38:13 [Thread-1] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 02:38:13 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 02:38:13 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 17912 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 02:38:13 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 02:38:13 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 02:38:13 [restartedMain] INFO  : Finished Spring Data repository scanning in 39 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 02:38:14 [restartedMain] INFO  : BeanFactory id=b4787da9-d99a-3323-9bb1-bc28fe1e1b9a
2024-05-20 02:38:14 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:38:14 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:38:14 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:38:14 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@49d8050b] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
2024-05-20 02:38:14 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-20 02:38:14 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@49d8050b] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@49d8050b] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@49d8050b] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 38 common frames omitted
Caused by: java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3137)
	at java.base/java.lang.Class.getDeclaredConstructors(Class.java:2357)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:313)
	... 51 common frames omitted
Caused by: java.lang.ClassNotFoundException: project.infrastructure.adapters.CurrAccAdapter
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:398)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 55 common frames omitted
2024-05-20 02:38:16 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 17912 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 02:38:16 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 02:38:16 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 02:38:16 [restartedMain] INFO  : Finished Spring Data repository scanning in 47 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 02:38:16 [restartedMain] INFO  : BeanFactory id=b4787da9-d99a-3323-9bb1-bc28fe1e1b9a
2024-05-20 02:38:16 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:38:16 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:38:16 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:38:16 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@60c218c7] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
2024-05-20 02:38:16 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-20 02:38:16 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@60c218c7] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@60c218c7] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@60c218c7] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 38 common frames omitted
Caused by: java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3137)
	at java.base/java.lang.Class.getDeclaredConstructors(Class.java:2357)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:313)
	... 51 common frames omitted
Caused by: java.lang.ClassNotFoundException: project.infrastructure.adapters.CurrAccAdapter
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:398)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 55 common frames omitted
2024-05-20 02:43:06 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 24760 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 02:43:06 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 02:43:06 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 02:43:06 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 02:43:06 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 02:43:06 [restartedMain] INFO  : Finished Spring Data repository scanning in 57 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 02:43:06 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 02:43:07 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:43:07 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:43:07 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:43:07 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@6cf0e91b, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@38c94071]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 02:43:07 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 02:43:07 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 02:43:07 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 02:43:07 [cluster-ClusterId{value='664aff0b6bcf320d1684c640', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:244}] to localhost:27017
2024-05-20 02:43:07 [cluster-rtt-ClusterId{value='664aff0b6bcf320d1684c640', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:245}] to localhost:27017
2024-05-20 02:43:07 [cluster-ClusterId{value='664aff0b6bcf320d1684c640', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=41734100}
2024-05-20 02:43:08 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 02:43:08 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 02:43:08 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 02:43:08 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 02:43:08 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 02:43:08 [restartedMain] INFO  : Disable delta property : false
2024-05-20 02:43:08 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 02:43:08 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 02:43:08 [restartedMain] INFO  : Application is null : false
2024-05-20 02:43:08 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 02:43:08 [restartedMain] INFO  : Application version is -1: true
2024-05-20 02:43:08 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 02:43:08 [restartedMain] INFO  : The response status is 200
2024-05-20 02:43:08 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 02:43:08 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 02:43:08 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716190988935 with initial instances count: 1
2024-05-20 02:43:08 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 02:43:08 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716190988937, current=UP, previous=STARTING]
2024-05-20 02:43:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 02:43:08 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 02:43:08 [restartedMain] INFO  : Updating port to 8081
2024-05-20 02:43:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 02:43:09 [restartedMain] INFO  : Started FinalProjectApplication in 3.835 seconds (JVM running for 4.653)
2024-05-20 02:43:16 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:247}] to localhost:27017
2024-05-20 02:43:16 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:246}] to localhost:27017
2024-05-20 02:43:16 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:248}] to localhost:27017
2024-05-20 02:47:16 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 02:47:16 [Thread-1] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 02:47:16 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716191236372, current=DOWN, previous=UP]
2024-05-20 02:47:16 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 02:47:16 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 02:47:18 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 02:47:21 [Thread-1] INFO  : Unregistering ...
2024-05-20 02:47:21 [Thread-1] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 02:47:21 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 02:47:21 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 24760 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 02:47:21 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 02:47:22 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 02:47:22 [restartedMain] INFO  : Finished Spring Data repository scanning in 35 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 02:47:22 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 02:47:22 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:47:22 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:47:22 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:47:22 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@42601378, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@38c94071]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 02:47:22 [cluster-rtt-ClusterId{value='664b000a6bcf320d1684c642', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:249}] to localhost:27017
2024-05-20 02:47:22 [cluster-ClusterId{value='664b000a6bcf320d1684c642', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:250}] to localhost:27017
2024-05-20 02:47:22 [cluster-ClusterId{value='664b000a6bcf320d1684c642', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2199200}
2024-05-20 02:47:22 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 02:47:22 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 02:47:22 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 02:47:22 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 02:47:23 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 02:47:23 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 02:47:23 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 02:47:23 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 02:47:23 [restartedMain] INFO  : Disable delta property : false
2024-05-20 02:47:23 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 02:47:23 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 02:47:23 [restartedMain] INFO  : Application is null : false
2024-05-20 02:47:23 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 02:47:23 [restartedMain] INFO  : Application version is -1: true
2024-05-20 02:47:23 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 02:47:23 [restartedMain] INFO  : The response status is 200
2024-05-20 02:47:23 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 02:47:23 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 02:47:23 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716191243377 with initial instances count: 2
2024-05-20 02:47:23 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 02:47:23 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716191243379, current=UP, previous=STARTING]
2024-05-20 02:47:23 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 02:47:23 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 02:47:23 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 02:47:23 [restartedMain] INFO  : Updating port to 8081
2024-05-20 02:47:23 [restartedMain] INFO  : Started FinalProjectApplication in 2.26 seconds (JVM running for 259.142)
2024-05-20 02:47:23 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 02:47:23 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 02:47:23 [Thread-16] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 02:47:23 [Thread-16] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716191243991, current=DOWN, previous=UP]
2024-05-20 02:47:23 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 02:47:24 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 02:47:26 [Thread-16] INFO  : Shutting down DiscoveryClient ...
2024-05-20 02:47:29 [Thread-16] INFO  : Unregistering ...
2024-05-20 02:47:29 [Thread-16] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 02:47:29 [Thread-16] INFO  : Completed shut down of DiscoveryClient
2024-05-20 02:47:29 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 24760 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 02:47:29 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 02:47:29 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 02:47:29 [restartedMain] INFO  : Finished Spring Data repository scanning in 36 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 02:47:30 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 02:47:30 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:47:30 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:47:30 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:47:30 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@262ad5de, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@38c94071]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 02:47:30 [cluster-ClusterId{value='664b00126bcf320d1684c643', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:9, serverValue:251}] to localhost:27017
2024-05-20 02:47:30 [cluster-rtt-ClusterId{value='664b00126bcf320d1684c643', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:8, serverValue:252}] to localhost:27017
2024-05-20 02:47:30 [cluster-ClusterId{value='664b00126bcf320d1684c643', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1926700}
2024-05-20 02:47:30 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 02:47:30 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 02:47:30 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 02:47:30 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 02:47:31 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 02:47:31 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 02:47:31 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 02:47:31 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 02:47:31 [restartedMain] INFO  : Disable delta property : false
2024-05-20 02:47:31 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 02:47:31 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 02:47:31 [restartedMain] INFO  : Application is null : false
2024-05-20 02:47:31 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 02:47:31 [restartedMain] INFO  : Application version is -1: true
2024-05-20 02:47:31 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 02:47:31 [restartedMain] INFO  : The response status is 200
2024-05-20 02:47:31 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 02:47:31 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 02:47:31 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716191251101 with initial instances count: 2
2024-05-20 02:47:31 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 02:47:31 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716191251102, current=UP, previous=STARTING]
2024-05-20 02:47:31 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 02:47:31 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 02:47:31 [restartedMain] INFO  : Updating port to 8081
2024-05-20 02:47:31 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 02:47:31 [restartedMain] INFO  : Started FinalProjectApplication in 2.178 seconds (JVM running for 266.803)
2024-05-20 02:47:31 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 02:50:39 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 02:50:39 [Thread-23] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 02:50:39 [Thread-23] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716191439741, current=DOWN, previous=UP]
2024-05-20 02:50:39 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 02:50:39 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 02:50:41 [Thread-23] INFO  : Shutting down DiscoveryClient ...
2024-05-20 02:50:44 [Thread-23] INFO  : Unregistering ...
2024-05-20 02:50:44 [Thread-23] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 02:50:44 [Thread-23] INFO  : Completed shut down of DiscoveryClient
2024-05-20 02:50:45 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 24760 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 02:50:45 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 02:50:45 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 02:50:45 [restartedMain] INFO  : Finished Spring Data repository scanning in 29 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 02:50:45 [restartedMain] INFO  : BeanFactory id=b4787da9-d99a-3323-9bb1-bc28fe1e1b9a
2024-05-20 02:50:45 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:50:45 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:50:45 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:50:45 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@65d807fa] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
2024-05-20 02:50:45 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-20 02:50:45 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@65d807fa] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@65d807fa] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@65d807fa] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 38 common frames omitted
Caused by: java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3137)
	at java.base/java.lang.Class.getDeclaredConstructors(Class.java:2357)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:313)
	... 51 common frames omitted
Caused by: java.lang.ClassNotFoundException: project.infrastructure.adapters.CurrAccAdapter
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:398)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 55 common frames omitted
2024-05-20 02:52:20 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 24760 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 02:52:20 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 02:52:20 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 02:52:20 [restartedMain] INFO  : Finished Spring Data repository scanning in 25 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 02:52:21 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 02:52:21 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:52:21 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:52:21 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:52:21 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@472b826d, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@38c94071]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 02:52:21 [cluster-rtt-ClusterId{value='664b01356bcf320d1684c644', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:11, serverValue:253}] to localhost:27017
2024-05-20 02:52:21 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 02:52:21 [cluster-ClusterId{value='664b01356bcf320d1684c644', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:10, serverValue:254}] to localhost:27017
2024-05-20 02:52:21 [cluster-ClusterId{value='664b01356bcf320d1684c644', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4240100}
2024-05-20 02:52:21 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 02:52:21 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 02:52:21 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 02:52:22 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 02:52:22 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 02:52:22 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 02:52:22 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 02:52:22 [restartedMain] INFO  : Disable delta property : false
2024-05-20 02:52:22 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 02:52:22 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 02:52:22 [restartedMain] INFO  : Application is null : false
2024-05-20 02:52:22 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 02:52:22 [restartedMain] INFO  : Application version is -1: true
2024-05-20 02:52:22 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 02:52:22 [restartedMain] INFO  : The response status is 200
2024-05-20 02:52:22 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 02:52:22 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 02:52:22 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716191542244 with initial instances count: 1
2024-05-20 02:52:22 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 02:52:22 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716191542245, current=UP, previous=STARTING]
2024-05-20 02:52:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 02:52:22 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 02:52:22 [restartedMain] INFO  : Updating port to 8081
2024-05-20 02:52:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 02:52:22 [restartedMain] INFO  : Started FinalProjectApplication in 2.864 seconds (JVM running for 558.189)
2024-05-20 02:52:22 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 02:52:44 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 02:52:44 [Thread-37] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 02:52:44 [Thread-37] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716191564686, current=DOWN, previous=UP]
2024-05-20 02:52:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 02:52:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 02:52:46 [Thread-37] INFO  : Shutting down DiscoveryClient ...
2024-05-20 02:52:49 [Thread-37] INFO  : Unregistering ...
2024-05-20 02:52:49 [Thread-37] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 02:52:49 [Thread-37] INFO  : Completed shut down of DiscoveryClient
2024-05-20 02:52:50 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 24760 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 02:52:50 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 02:52:50 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 02:52:50 [restartedMain] INFO  : Finished Spring Data repository scanning in 31 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 02:52:50 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 02:52:50 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:52:50 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:52:50 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:52:50 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@48ee391c, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@38c94071]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 02:52:50 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 02:52:50 [cluster-ClusterId{value='664b01526bcf320d1684c645', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:12, serverValue:256}] to localhost:27017
2024-05-20 02:52:50 [cluster-rtt-ClusterId{value='664b01526bcf320d1684c645', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:13, serverValue:255}] to localhost:27017
2024-05-20 02:52:50 [cluster-ClusterId{value='664b01526bcf320d1684c645', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4464400}
2024-05-20 02:52:50 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 02:52:50 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 02:52:51 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 02:52:51 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 02:52:51 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 02:52:51 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 02:52:51 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 02:52:51 [restartedMain] INFO  : Disable delta property : false
2024-05-20 02:52:51 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 02:52:51 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 02:52:51 [restartedMain] INFO  : Application is null : false
2024-05-20 02:52:51 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 02:52:51 [restartedMain] INFO  : Application version is -1: true
2024-05-20 02:52:51 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 02:52:51 [restartedMain] INFO  : The response status is 200
2024-05-20 02:52:51 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 02:52:51 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 02:52:51 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716191571984 with initial instances count: 2
2024-05-20 02:52:51 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 02:52:51 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716191571985, current=UP, previous=STARTING]
2024-05-20 02:52:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 02:52:51 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 02:52:51 [restartedMain] INFO  : Updating port to 8081
2024-05-20 02:52:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 02:52:52 [restartedMain] INFO  : Started FinalProjectApplication in 2.741 seconds (JVM running for 587.923)
2024-05-20 02:52:52 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 02:53:43 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 02:53:43 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716191623424, current=DOWN, previous=UP]
2024-05-20 02:53:43 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 02:53:43 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 02:53:45 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 02:53:48 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 02:53:48 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 02:53:48 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 02:53:53 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 26284 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 02:53:53 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 02:53:53 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 02:53:53 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 02:53:53 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 02:53:53 [restartedMain] INFO  : Finished Spring Data repository scanning in 57 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 02:53:53 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 02:53:53 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:53:53 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:53:53 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:53:54 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@7da0b5b6, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7722e035]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 02:53:54 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 02:53:54 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 02:53:54 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 02:53:54 [cluster-rtt-ClusterId{value='664b0192f2654741f1aba2af', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:257}] to localhost:27017
2024-05-20 02:53:54 [cluster-ClusterId{value='664b0192f2654741f1aba2af', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:258}] to localhost:27017
2024-05-20 02:53:54 [cluster-ClusterId{value='664b0192f2654741f1aba2af', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=50293900}
2024-05-20 02:53:55 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 02:53:55 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 02:53:55 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 02:53:55 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 02:53:55 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 02:53:55 [restartedMain] INFO  : Disable delta property : false
2024-05-20 02:53:55 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 02:53:55 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 02:53:55 [restartedMain] INFO  : Application is null : false
2024-05-20 02:53:55 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 02:53:55 [restartedMain] INFO  : Application version is -1: true
2024-05-20 02:53:55 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 02:53:56 [restartedMain] INFO  : The response status is 200
2024-05-20 02:53:56 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 02:53:56 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 02:53:56 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716191636117 with initial instances count: 2
2024-05-20 02:53:56 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 02:53:56 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716191636119, current=UP, previous=STARTING]
2024-05-20 02:53:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 02:53:56 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 02:53:56 [restartedMain] INFO  : Updating port to 8081
2024-05-20 02:53:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 02:53:56 [restartedMain] INFO  : Started FinalProjectApplication in 3.992 seconds (JVM running for 4.837)
2024-05-20 02:54:01 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:259}] to localhost:27017
2024-05-20 02:54:01 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:260}] to localhost:27017
2024-05-20 02:54:01 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:261}] to localhost:27017
2024-05-20 02:56:26 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 02:56:26 [Thread-1] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 02:56:26 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716191786161, current=DOWN, previous=UP]
2024-05-20 02:56:26 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 02:56:26 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 02:56:28 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 02:56:31 [Thread-1] INFO  : Unregistering ...
2024-05-20 02:56:31 [Thread-1] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 02:56:31 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 02:56:31 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 26284 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 02:56:31 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 02:56:31 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 02:56:31 [restartedMain] INFO  : Finished Spring Data repository scanning in 34 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 02:56:32 [restartedMain] INFO  : BeanFactory id=b4787da9-d99a-3323-9bb1-bc28fe1e1b9a
2024-05-20 02:56:32 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:56:32 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:56:32 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:56:32 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@7cf123eb] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
2024-05-20 02:56:32 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-20 02:56:32 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@7cf123eb] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@7cf123eb] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@7cf123eb] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 38 common frames omitted
Caused by: java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3137)
	at java.base/java.lang.Class.getDeclaredConstructors(Class.java:2357)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:313)
	... 51 common frames omitted
Caused by: java.lang.ClassNotFoundException: project.infrastructure.adapters.CurrAccAdapter
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:398)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 55 common frames omitted
2024-05-20 02:59:40 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 11736 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 02:59:40 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 02:59:40 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 02:59:40 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 02:59:41 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 02:59:41 [restartedMain] INFO  : Finished Spring Data repository scanning in 74 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 02:59:41 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 02:59:41 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:59:41 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:59:41 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 02:59:41 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1aaf93a1, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2601ccd5]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 02:59:41 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 02:59:42 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 02:59:42 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 02:59:42 [cluster-rtt-ClusterId{value='664b02ed500708072391278f', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:262}] to localhost:27017
2024-05-20 02:59:42 [cluster-ClusterId{value='664b02ed500708072391278f', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:263}] to localhost:27017
2024-05-20 02:59:42 [cluster-ClusterId{value='664b02ed500708072391278f', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=46938700}
2024-05-20 02:59:42 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 02:59:43 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 02:59:43 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 02:59:43 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 02:59:43 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 02:59:43 [restartedMain] INFO  : Disable delta property : false
2024-05-20 02:59:43 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 02:59:43 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 02:59:43 [restartedMain] INFO  : Application is null : false
2024-05-20 02:59:43 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 02:59:43 [restartedMain] INFO  : Application version is -1: true
2024-05-20 02:59:43 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 02:59:43 [restartedMain] INFO  : The response status is 200
2024-05-20 02:59:43 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 02:59:43 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 02:59:43 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716191983685 with initial instances count: 1
2024-05-20 02:59:43 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 02:59:43 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716191983688, current=UP, previous=STARTING]
2024-05-20 02:59:43 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 02:59:43 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 02:59:43 [restartedMain] INFO  : Updating port to 8081
2024-05-20 02:59:43 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 02:59:44 [restartedMain] INFO  : Started FinalProjectApplication in 4.146 seconds (JVM running for 4.969)
2024-05-20 03:00:56 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:265}] to localhost:27017
2024-05-20 03:00:56 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:264}] to localhost:27017
2024-05-20 03:00:56 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:266}] to localhost:27017
2024-05-20 03:00:56 [nioEventLoopGroup-3-5] ERROR : Operator called default onErrorDropped
org.springframework.dao.DuplicateKeyException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: _id_ dup key: { _id: 0 }', details={}}.; nested exception is com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: _id_ dup key: { _id: 0 }', details={}}.
	at org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:106)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.potentiallyConvertRuntimeException(ReactiveMongoTemplate.java:2963)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.lambda$translateException$89(ReactiveMongoTemplate.java:2946)
	at reactor.core.publisher.Flux.lambda$onErrorMap$28(Flux.java:7070)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:255)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:258)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:545)
	at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$9(OperationExecutorImpl.java:124)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.operation.CommandOperationHelper.lambda$exceptionTransformingCallback$23(CommandOperationHelper.java:632)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.async.function.RetryingAsyncCallbackSupplier$RetryingCallback.onResult(RetryingAsyncCallbackSupplier.java:109)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$11(MixedBulkWriteOperation.java:464)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:84)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:61)
	at com.mongodb.internal.async.function.LoopState.breakAndCompleteIf(LoopState.java:111)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$10(MixedBulkWriteOperation.java:418)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:82)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:61)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$9(MixedBulkWriteOperation.java:440)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor$2.onResult(DefaultServer.java:276)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.CommandProtocolImpl$1.onResult(CommandProtocolImpl.java:84)
	at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection$1.onResult(DefaultConnectionPool.java:684)
	at com.mongodb.internal.connection.UsageTrackingInternalConnection$2.onResult(UsageTrackingInternalConnection.java:159)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:521)
	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:498)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:821)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:785)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:266)
	at com.mongodb.internal.connection.InternalStreamConnection.readAsync(InternalStreamConnection.java:642)
	at com.mongodb.internal.connection.InternalStreamConnection.access$600(InternalStreamConnection.java:86)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:775)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:760)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
	at com.mongodb.connection.netty.NettyStream.handleReadResponse(NettyStream.java:347)
	at com.mongodb.connection.netty.NettyStream.access$1100(NettyStream.java:105)
	at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:421)
	at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:418)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: _id_ dup key: { _id: 0 }', details={}}.
	at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$createSingleWriteRequestMono$24(MongoOperationPublisher.java:490)
	at reactor.core.publisher.Mono.lambda$onErrorMap$30(Mono.java:3797)
	at reactor.core.publisher.Mono.lambda$onErrorResume$32(Mono.java:3887)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	... 67 common frames omitted
2024-05-20 03:04:43 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 03:07:38 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 03:07:38 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716192458070, current=DOWN, previous=UP]
2024-05-20 03:07:38 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:07:38 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:07:40 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 03:07:43 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 03:07:43 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 03:07:43 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 03:08:05 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 24316 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 03:08:05 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 03:08:05 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 03:08:05 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 03:08:05 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 03:08:05 [restartedMain] INFO  : Finished Spring Data repository scanning in 63 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 03:08:06 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 03:08:06 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:08:06 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:08:06 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:08:06 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@755ffae5, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6b38b38b]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 03:08:06 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:08:06 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 03:08:06 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:08:06 [cluster-rtt-ClusterId{value='664b04e67440612f6d8131ed', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:267}] to localhost:27017
2024-05-20 03:08:06 [cluster-ClusterId{value='664b04e67440612f6d8131ed', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:268}] to localhost:27017
2024-05-20 03:08:06 [cluster-ClusterId{value='664b04e67440612f6d8131ed', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=51676300}
2024-05-20 03:08:06 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:269}] to localhost:27017
2024-05-20 03:08:07 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 03:08:07 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 03:08:07 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 03:08:07 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 03:08:07 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 03:08:07 [restartedMain] INFO  : Disable delta property : false
2024-05-20 03:08:07 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 03:08:07 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 03:08:07 [restartedMain] INFO  : Application is null : false
2024-05-20 03:08:07 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 03:08:07 [restartedMain] INFO  : Application version is -1: true
2024-05-20 03:08:07 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 03:08:08 [restartedMain] INFO  : The response status is 200
2024-05-20 03:08:08 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 03:08:08 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 03:08:08 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716192488136 with initial instances count: 1
2024-05-20 03:08:08 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 03:08:08 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716192488138, current=UP, previous=STARTING]
2024-05-20 03:08:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:08:08 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 03:08:08 [restartedMain] INFO  : Updating port to 8081
2024-05-20 03:08:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:08:08 [restartedMain] INFO  : Started FinalProjectApplication in 3.929 seconds (JVM running for 4.781)
2024-05-20 03:08:33 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:270}] to localhost:27017
2024-05-20 03:08:33 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:271}] to localhost:27017
2024-05-20 03:08:47 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 03:08:47 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716192527720, current=DOWN, previous=UP]
2024-05-20 03:08:47 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:08:47 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:08:49 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 03:08:52 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 03:08:52 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 03:08:52 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 03:08:57 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 17104 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 03:08:57 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 03:08:57 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 03:08:57 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 03:08:57 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 03:08:57 [restartedMain] INFO  : Finished Spring Data repository scanning in 63 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 03:08:58 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 03:08:58 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:08:58 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:08:58 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:08:58 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3d23b1e3, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@795c3ac5]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 03:08:58 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:08:58 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 03:08:58 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:08:58 [cluster-ClusterId{value='664b051ab3ea8937c76c63de', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:273}] to localhost:27017
2024-05-20 03:08:58 [cluster-rtt-ClusterId{value='664b051ab3ea8937c76c63de', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:272}] to localhost:27017
2024-05-20 03:08:58 [cluster-ClusterId{value='664b051ab3ea8937c76c63de', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=49428500}
2024-05-20 03:08:59 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 03:08:59 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 03:08:59 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 03:08:59 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 03:08:59 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 03:08:59 [restartedMain] INFO  : Disable delta property : false
2024-05-20 03:08:59 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 03:08:59 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 03:08:59 [restartedMain] INFO  : Application is null : false
2024-05-20 03:08:59 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 03:08:59 [restartedMain] INFO  : Application version is -1: true
2024-05-20 03:08:59 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 03:09:00 [restartedMain] INFO  : The response status is 200
2024-05-20 03:09:00 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 03:09:00 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 03:09:00 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716192540131 with initial instances count: 2
2024-05-20 03:09:00 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 03:09:00 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716192540134, current=UP, previous=STARTING]
2024-05-20 03:09:00 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:09:00 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 03:09:00 [restartedMain] INFO  : Updating port to 8081
2024-05-20 03:09:00 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:09:00 [restartedMain] INFO  : Started FinalProjectApplication in 4.012 seconds (JVM running for 4.859)
2024-05-20 03:09:07 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:274}] to localhost:27017
2024-05-20 03:09:07 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:275}] to localhost:27017
2024-05-20 03:09:07 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:276}] to localhost:27017
2024-05-20 03:09:07 [nioEventLoopGroup-3-5] ERROR : Operator called default onErrorDropped
org.springframework.dao.DuplicateKeyException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: _id_ dup key: { _id: 0 }', details={}}.; nested exception is com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: _id_ dup key: { _id: 0 }', details={}}.
	at org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:106)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.potentiallyConvertRuntimeException(ReactiveMongoTemplate.java:2963)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.lambda$translateException$89(ReactiveMongoTemplate.java:2946)
	at reactor.core.publisher.Flux.lambda$onErrorMap$28(Flux.java:7070)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:255)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:258)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:545)
	at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$9(OperationExecutorImpl.java:124)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.operation.CommandOperationHelper.lambda$exceptionTransformingCallback$23(CommandOperationHelper.java:632)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.async.function.RetryingAsyncCallbackSupplier$RetryingCallback.onResult(RetryingAsyncCallbackSupplier.java:109)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$11(MixedBulkWriteOperation.java:464)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:84)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:61)
	at com.mongodb.internal.async.function.LoopState.breakAndCompleteIf(LoopState.java:111)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$10(MixedBulkWriteOperation.java:418)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:82)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:61)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$9(MixedBulkWriteOperation.java:440)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor$2.onResult(DefaultServer.java:276)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.CommandProtocolImpl$1.onResult(CommandProtocolImpl.java:84)
	at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection$1.onResult(DefaultConnectionPool.java:684)
	at com.mongodb.internal.connection.UsageTrackingInternalConnection$2.onResult(UsageTrackingInternalConnection.java:159)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:521)
	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:498)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:821)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:785)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:266)
	at com.mongodb.internal.connection.InternalStreamConnection.readAsync(InternalStreamConnection.java:642)
	at com.mongodb.internal.connection.InternalStreamConnection.access$600(InternalStreamConnection.java:86)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:775)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:760)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
	at com.mongodb.connection.netty.NettyStream.handleReadResponse(NettyStream.java:347)
	at com.mongodb.connection.netty.NettyStream.access$1100(NettyStream.java:105)
	at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:421)
	at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:418)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: _id_ dup key: { _id: 0 }', details={}}.
	at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$createSingleWriteRequestMono$24(MongoOperationPublisher.java:490)
	at reactor.core.publisher.Mono.lambda$onErrorMap$30(Mono.java:3797)
	at reactor.core.publisher.Mono.lambda$onErrorResume$32(Mono.java:3887)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	... 67 common frames omitted
2024-05-20 03:10:19 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 03:10:19 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716192619447, current=DOWN, previous=UP]
2024-05-20 03:10:19 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:10:19 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:10:21 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 03:10:24 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 03:10:24 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 03:10:24 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 03:10:29 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 26260 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 03:10:29 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 03:10:29 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 03:10:29 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 03:10:29 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 03:10:29 [restartedMain] INFO  : Finished Spring Data repository scanning in 57 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 03:10:29 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 03:10:29 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:10:29 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:10:29 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:10:30 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@381c2246, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@46d9735b]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 03:10:30 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:10:30 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 03:10:30 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:10:30 [cluster-rtt-ClusterId{value='664b05760cdada68c865bce7', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:277}] to localhost:27017
2024-05-20 03:10:30 [cluster-ClusterId{value='664b05760cdada68c865bce7', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:278}] to localhost:27017
2024-05-20 03:10:30 [cluster-ClusterId{value='664b05760cdada68c865bce7', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=44937900}
2024-05-20 03:10:30 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 03:10:31 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 03:10:31 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 03:10:31 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 03:10:31 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 03:10:31 [restartedMain] INFO  : Disable delta property : false
2024-05-20 03:10:31 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 03:10:31 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 03:10:31 [restartedMain] INFO  : Application is null : false
2024-05-20 03:10:31 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 03:10:31 [restartedMain] INFO  : Application version is -1: true
2024-05-20 03:10:31 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 03:10:31 [restartedMain] INFO  : The response status is 200
2024-05-20 03:10:31 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 03:10:31 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 03:10:31 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716192631706 with initial instances count: 2
2024-05-20 03:10:31 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 03:10:31 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716192631707, current=UP, previous=STARTING]
2024-05-20 03:10:31 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:10:31 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 03:10:31 [restartedMain] INFO  : Updating port to 8081
2024-05-20 03:10:31 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:10:32 [restartedMain] INFO  : Started FinalProjectApplication in 3.711 seconds (JVM running for 4.556)
2024-05-20 03:11:12 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:280}] to localhost:27017
2024-05-20 03:11:12 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:279}] to localhost:27017
2024-05-20 03:11:12 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:281}] to localhost:27017
2024-05-20 03:11:12 [nioEventLoopGroup-3-4] ERROR : Operator called default onErrorDropped
org.springframework.dao.DuplicateKeyException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: _id_ dup key: { _id: 0 }', details={}}.; nested exception is com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: _id_ dup key: { _id: 0 }', details={}}.
	at org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:106)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.potentiallyConvertRuntimeException(ReactiveMongoTemplate.java:2963)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.lambda$translateException$89(ReactiveMongoTemplate.java:2946)
	at reactor.core.publisher.Flux.lambda$onErrorMap$28(Flux.java:7070)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:255)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:258)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:545)
	at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$9(OperationExecutorImpl.java:124)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.operation.CommandOperationHelper.lambda$exceptionTransformingCallback$23(CommandOperationHelper.java:632)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.async.function.RetryingAsyncCallbackSupplier$RetryingCallback.onResult(RetryingAsyncCallbackSupplier.java:109)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$11(MixedBulkWriteOperation.java:464)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:84)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:61)
	at com.mongodb.internal.async.function.LoopState.breakAndCompleteIf(LoopState.java:111)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$10(MixedBulkWriteOperation.java:418)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:82)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:61)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$9(MixedBulkWriteOperation.java:440)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor$2.onResult(DefaultServer.java:276)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.CommandProtocolImpl$1.onResult(CommandProtocolImpl.java:84)
	at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection$1.onResult(DefaultConnectionPool.java:684)
	at com.mongodb.internal.connection.UsageTrackingInternalConnection$2.onResult(UsageTrackingInternalConnection.java:159)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:521)
	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:498)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:821)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:785)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:266)
	at com.mongodb.internal.connection.InternalStreamConnection.readAsync(InternalStreamConnection.java:642)
	at com.mongodb.internal.connection.InternalStreamConnection.access$600(InternalStreamConnection.java:86)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:775)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:760)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
	at com.mongodb.connection.netty.NettyStream.handleReadResponse(NettyStream.java:347)
	at com.mongodb.connection.netty.NettyStream.access$1100(NettyStream.java:105)
	at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:421)
	at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:418)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: _id_ dup key: { _id: 0 }', details={}}.
	at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$createSingleWriteRequestMono$24(MongoOperationPublisher.java:490)
	at reactor.core.publisher.Mono.lambda$onErrorMap$30(Mono.java:3797)
	at reactor.core.publisher.Mono.lambda$onErrorResume$32(Mono.java:3887)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	... 67 common frames omitted
2024-05-20 03:14:13 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 03:14:13 [Thread-1] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 03:14:13 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716192853579, current=DOWN, previous=UP]
2024-05-20 03:14:13 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:14:13 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:14:15 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 03:14:18 [Thread-1] INFO  : Unregistering ...
2024-05-20 03:14:18 [Thread-1] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 03:14:18 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 03:14:19 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 26260 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 03:14:19 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 03:14:19 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 03:14:19 [restartedMain] INFO  : Finished Spring Data repository scanning in 29 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 03:14:19 [restartedMain] INFO  : BeanFactory id=b4787da9-d99a-3323-9bb1-bc28fe1e1b9a
2024-05-20 03:14:19 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:14:19 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:14:19 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:14:19 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@6ae265a5] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
2024-05-20 03:14:19 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-20 03:14:19 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@6ae265a5] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@6ae265a5] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@6ae265a5] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 38 common frames omitted
Caused by: java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3137)
	at java.base/java.lang.Class.getDeclaredConstructors(Class.java:2357)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:313)
	... 51 common frames omitted
Caused by: java.lang.ClassNotFoundException: project.infrastructure.adapters.CurrAccAdapter
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:398)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 55 common frames omitted
2024-05-20 03:15:19 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 1660 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 03:15:19 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 03:15:19 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 03:15:19 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 03:15:19 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 03:15:19 [restartedMain] INFO  : Finished Spring Data repository scanning in 62 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 03:15:20 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 03:15:20 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:15:20 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:15:20 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:15:20 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@45d4c8c7, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@59206be5]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 03:15:20 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:15:20 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 03:15:20 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:15:20 [cluster-ClusterId{value='664b0698847a0e1057f259a0', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:283}] to localhost:27017
2024-05-20 03:15:20 [cluster-rtt-ClusterId{value='664b0698847a0e1057f259a0', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:282}] to localhost:27017
2024-05-20 03:15:20 [cluster-ClusterId{value='664b0698847a0e1057f259a0', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=53978000}
2024-05-20 03:15:21 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 03:15:21 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 03:15:21 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 03:15:21 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 03:15:21 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 03:15:21 [restartedMain] INFO  : Disable delta property : false
2024-05-20 03:15:21 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 03:15:21 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 03:15:21 [restartedMain] INFO  : Application is null : false
2024-05-20 03:15:21 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 03:15:21 [restartedMain] INFO  : Application version is -1: true
2024-05-20 03:15:21 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 03:15:22 [restartedMain] INFO  : The response status is 200
2024-05-20 03:15:22 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 03:15:22 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 03:15:22 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716192922287 with initial instances count: 1
2024-05-20 03:15:22 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 03:15:22 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716192922290, current=UP, previous=STARTING]
2024-05-20 03:15:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:15:22 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 03:15:22 [restartedMain] INFO  : Updating port to 8081
2024-05-20 03:15:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:15:22 [restartedMain] INFO  : Started FinalProjectApplication in 4.533 seconds (JVM running for 5.542)
2024-05-20 03:15:26 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:285}] to localhost:27017
2024-05-20 03:15:26 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:284}] to localhost:27017
2024-05-20 03:15:26 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:286}] to localhost:27017
2024-05-20 03:16:06 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 03:16:06 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716192966145, current=DOWN, previous=UP]
2024-05-20 03:16:06 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:16:06 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:16:08 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 03:16:11 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 03:16:11 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 03:16:11 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 03:16:15 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 30016 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 03:16:15 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 03:16:15 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 03:16:15 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 03:16:16 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 03:16:16 [restartedMain] INFO  : Finished Spring Data repository scanning in 57 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 03:16:16 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 03:16:16 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:16:16 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:16:16 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:16:16 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@747d9bce, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7cc2360e]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 03:16:17 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:16:17 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 03:16:17 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:16:17 [cluster-rtt-ClusterId{value='664b06d07e2aed0b43d912ad', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:288}] to localhost:27017
2024-05-20 03:16:17 [cluster-ClusterId{value='664b06d07e2aed0b43d912ad', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:287}] to localhost:27017
2024-05-20 03:16:17 [cluster-ClusterId{value='664b06d07e2aed0b43d912ad', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=38216000}
2024-05-20 03:16:17 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 03:16:18 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 03:16:18 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 03:16:18 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 03:16:18 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 03:16:18 [restartedMain] INFO  : Disable delta property : false
2024-05-20 03:16:18 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 03:16:18 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 03:16:18 [restartedMain] INFO  : Application is null : false
2024-05-20 03:16:18 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 03:16:18 [restartedMain] INFO  : Application version is -1: true
2024-05-20 03:16:18 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 03:16:18 [restartedMain] INFO  : The response status is 200
2024-05-20 03:16:18 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 03:16:18 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 03:16:18 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716192978671 with initial instances count: 2
2024-05-20 03:16:18 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 03:16:18 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716192978673, current=UP, previous=STARTING]
2024-05-20 03:16:18 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:16:18 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 03:16:18 [restartedMain] INFO  : Updating port to 8081
2024-05-20 03:16:18 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:16:19 [restartedMain] INFO  : Started FinalProjectApplication in 3.91 seconds (JVM running for 4.754)
2024-05-20 03:16:22 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:290}] to localhost:27017
2024-05-20 03:16:22 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:289}] to localhost:27017
2024-05-20 03:16:22 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:291}] to localhost:27017
2024-05-20 03:16:23 [nioEventLoopGroup-3-3] ERROR : Operator called default onErrorDropped
org.springframework.dao.DuplicateKeyException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.; nested exception is com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.
	at org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:106)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.potentiallyConvertRuntimeException(ReactiveMongoTemplate.java:2963)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.lambda$translateException$89(ReactiveMongoTemplate.java:2946)
	at reactor.core.publisher.Flux.lambda$onErrorMap$28(Flux.java:7070)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:255)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:258)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:545)
	at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$9(OperationExecutorImpl.java:124)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.operation.CommandOperationHelper.lambda$exceptionTransformingCallback$23(CommandOperationHelper.java:632)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.async.function.RetryingAsyncCallbackSupplier$RetryingCallback.onResult(RetryingAsyncCallbackSupplier.java:109)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$11(MixedBulkWriteOperation.java:464)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:84)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:61)
	at com.mongodb.internal.async.function.LoopState.breakAndCompleteIf(LoopState.java:111)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$10(MixedBulkWriteOperation.java:418)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:82)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:61)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$9(MixedBulkWriteOperation.java:440)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor$2.onResult(DefaultServer.java:276)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.CommandProtocolImpl$1.onResult(CommandProtocolImpl.java:84)
	at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection$1.onResult(DefaultConnectionPool.java:684)
	at com.mongodb.internal.connection.UsageTrackingInternalConnection$2.onResult(UsageTrackingInternalConnection.java:159)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:521)
	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:498)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:821)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:785)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:266)
	at com.mongodb.internal.connection.InternalStreamConnection.readAsync(InternalStreamConnection.java:642)
	at com.mongodb.internal.connection.InternalStreamConnection.access$600(InternalStreamConnection.java:86)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:775)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:760)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
	at com.mongodb.connection.netty.NettyStream.handleReadResponse(NettyStream.java:347)
	at com.mongodb.connection.netty.NettyStream.access$1100(NettyStream.java:105)
	at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:421)
	at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:418)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.
	at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$createSingleWriteRequestMono$24(MongoOperationPublisher.java:490)
	at reactor.core.publisher.Mono.lambda$onErrorMap$30(Mono.java:3797)
	at reactor.core.publisher.Mono.lambda$onErrorResume$32(Mono.java:3887)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	... 67 common frames omitted
2024-05-20 03:17:33 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 03:17:33 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716193053206, current=DOWN, previous=UP]
2024-05-20 03:17:33 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:17:33 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:17:35 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 03:17:38 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 03:17:38 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 03:17:38 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 03:17:43 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 1456 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 03:17:43 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 03:17:43 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 03:17:43 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 03:17:43 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 03:17:43 [restartedMain] INFO  : Finished Spring Data repository scanning in 56 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 03:17:43 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 03:17:43 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:17:43 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:17:43 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:17:44 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@d2de366, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@23438e8d]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 03:17:44 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:17:44 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 03:17:44 [cluster-ClusterId{value='664b072842d27a35716f1504', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:293}] to localhost:27017
2024-05-20 03:17:44 [cluster-rtt-ClusterId{value='664b072842d27a35716f1504', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:292}] to localhost:27017
2024-05-20 03:17:44 [cluster-ClusterId{value='664b072842d27a35716f1504', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=45864800}
2024-05-20 03:17:44 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:17:44 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 03:17:45 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 03:17:45 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 03:17:45 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 03:17:45 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 03:17:45 [restartedMain] INFO  : Disable delta property : false
2024-05-20 03:17:45 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 03:17:45 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 03:17:45 [restartedMain] INFO  : Application is null : false
2024-05-20 03:17:45 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 03:17:45 [restartedMain] INFO  : Application version is -1: true
2024-05-20 03:17:45 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 03:17:45 [restartedMain] INFO  : The response status is 200
2024-05-20 03:17:45 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 03:17:45 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 03:17:45 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716193065834 with initial instances count: 2
2024-05-20 03:17:45 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 03:17:45 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716193065836, current=UP, previous=STARTING]
2024-05-20 03:17:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:17:45 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 03:17:45 [restartedMain] INFO  : Updating port to 8081
2024-05-20 03:17:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:17:46 [restartedMain] INFO  : Started FinalProjectApplication in 3.947 seconds (JVM running for 4.814)
2024-05-20 03:17:49 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:294}] to localhost:27017
2024-05-20 03:17:49 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:295}] to localhost:27017
2024-05-20 03:17:49 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:296}] to localhost:27017
2024-05-20 03:21:17 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 03:21:17 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716193277182, current=DOWN, previous=UP]
2024-05-20 03:21:17 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:21:17 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:21:19 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 03:21:22 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 03:21:22 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 03:21:22 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 03:21:28 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 16512 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 03:21:28 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 03:21:28 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 03:21:28 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 03:21:28 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 03:21:29 [restartedMain] INFO  : Finished Spring Data repository scanning in 62 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 03:21:29 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 03:21:29 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:21:29 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:21:29 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:21:29 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@25bf90c2, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@aee5d8b]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 03:21:29 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:21:29 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 03:21:29 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:21:29 [cluster-rtt-ClusterId{value='664b08090a5122789e828cf6', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:298}] to localhost:27017
2024-05-20 03:21:29 [cluster-ClusterId{value='664b08090a5122789e828cf6', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:297}] to localhost:27017
2024-05-20 03:21:29 [cluster-ClusterId{value='664b08090a5122789e828cf6', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=40989300}
2024-05-20 03:21:30 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 03:21:30 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 03:21:30 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 03:21:30 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 03:21:30 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 03:21:30 [restartedMain] INFO  : Disable delta property : false
2024-05-20 03:21:30 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 03:21:30 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 03:21:30 [restartedMain] INFO  : Application is null : false
2024-05-20 03:21:30 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 03:21:30 [restartedMain] INFO  : Application version is -1: true
2024-05-20 03:21:30 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 03:21:31 [restartedMain] INFO  : The response status is 200
2024-05-20 03:21:31 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 03:21:31 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 03:21:31 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716193291128 with initial instances count: 2
2024-05-20 03:21:31 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 03:21:31 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716193291129, current=UP, previous=STARTING]
2024-05-20 03:21:31 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:21:31 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 03:21:31 [restartedMain] INFO  : Updating port to 8081
2024-05-20 03:21:31 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:21:31 [restartedMain] INFO  : Started FinalProjectApplication in 3.693 seconds (JVM running for 4.551)
2024-05-20 03:21:45 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:299}] to localhost:27017
2024-05-20 03:21:45 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:300}] to localhost:27017
2024-05-20 03:21:45 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:301}] to localhost:27017
2024-05-20 03:26:30 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 03:26:52 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 03:26:52 [Thread-1] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 03:26:52 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716193612920, current=DOWN, previous=UP]
2024-05-20 03:26:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:26:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:26:55 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 03:26:58 [Thread-1] INFO  : Unregistering ...
2024-05-20 03:26:58 [Thread-1] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 03:26:58 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 03:26:58 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 16512 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 03:26:58 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 03:26:58 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 03:26:58 [restartedMain] INFO  : Finished Spring Data repository scanning in 66 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 03:26:59 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 03:26:59 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:26:59 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:26:59 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:26:59 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@31e8607, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@aee5d8b]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 03:26:59 [cluster-rtt-ClusterId{value='664b09530a5122789e828cf7', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:302}] to localhost:27017
2024-05-20 03:26:59 [cluster-ClusterId{value='664b09530a5122789e828cf7', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:303}] to localhost:27017
2024-05-20 03:26:59 [cluster-ClusterId{value='664b09530a5122789e828cf7', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2570300}
2024-05-20 03:26:59 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:26:59 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 03:26:59 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:26:59 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 03:27:00 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 03:27:00 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 03:27:00 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 03:27:00 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 03:27:00 [restartedMain] INFO  : Disable delta property : false
2024-05-20 03:27:00 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 03:27:00 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 03:27:00 [restartedMain] INFO  : Application is null : false
2024-05-20 03:27:00 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 03:27:00 [restartedMain] INFO  : Application version is -1: true
2024-05-20 03:27:00 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 03:27:00 [restartedMain] INFO  : The response status is 200
2024-05-20 03:27:00 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 03:27:00 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 03:27:00 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716193620619 with initial instances count: 2
2024-05-20 03:27:00 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 03:27:00 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716193620621, current=UP, previous=STARTING]
2024-05-20 03:27:00 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:27:00 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 03:27:00 [restartedMain] INFO  : Updating port to 8081
2024-05-20 03:27:00 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:27:00 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 03:27:01 [restartedMain] INFO  : Started FinalProjectApplication in 3.002 seconds (JVM running for 334.16)
2024-05-20 03:27:01 [Thread-16] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 03:27:01 [Thread-16] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716193621133, current=DOWN, previous=UP]
2024-05-20 03:27:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:27:01 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 03:27:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:27:03 [Thread-16] INFO  : Shutting down DiscoveryClient ...
2024-05-20 03:27:06 [Thread-16] INFO  : Unregistering ...
2024-05-20 03:27:06 [Thread-16] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 03:27:06 [Thread-16] INFO  : Completed shut down of DiscoveryClient
2024-05-20 03:27:06 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 16512 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 03:27:06 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 03:27:07 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 03:27:07 [restartedMain] INFO  : Finished Spring Data repository scanning in 40 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 03:27:07 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 03:27:07 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:27:07 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:27:07 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:27:07 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3753d305, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@aee5d8b]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 03:27:07 [cluster-rtt-ClusterId{value='664b095b0a5122789e828cf8', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:9, serverValue:305}] to localhost:27017
2024-05-20 03:27:07 [cluster-ClusterId{value='664b095b0a5122789e828cf8', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:8, serverValue:304}] to localhost:27017
2024-05-20 03:27:07 [cluster-ClusterId{value='664b095b0a5122789e828cf8', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3094800}
2024-05-20 03:27:07 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:27:07 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 03:27:07 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:27:07 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 03:27:08 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 03:27:08 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 03:27:08 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 03:27:08 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 03:27:08 [restartedMain] INFO  : Disable delta property : false
2024-05-20 03:27:08 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 03:27:08 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 03:27:08 [restartedMain] INFO  : Application is null : false
2024-05-20 03:27:08 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 03:27:08 [restartedMain] INFO  : Application version is -1: true
2024-05-20 03:27:08 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 03:27:08 [restartedMain] INFO  : The response status is 200
2024-05-20 03:27:08 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 03:27:08 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 03:27:08 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716193628538 with initial instances count: 2
2024-05-20 03:27:08 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 03:27:08 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716193628539, current=UP, previous=STARTING]
2024-05-20 03:27:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:27:08 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 03:27:08 [restartedMain] INFO  : Updating port to 8081
2024-05-20 03:27:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:27:09 [restartedMain] INFO  : Started FinalProjectApplication in 2.825 seconds (JVM running for 342.208)
2024-05-20 03:27:09 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 03:29:44 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 03:29:44 [Thread-23] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 03:29:44 [Thread-23] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716193784170, current=DOWN, previous=UP]
2024-05-20 03:29:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:29:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:29:46 [Thread-23] INFO  : Shutting down DiscoveryClient ...
2024-05-20 03:29:49 [Thread-23] INFO  : Unregistering ...
2024-05-20 03:29:49 [Thread-23] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 03:29:49 [Thread-23] INFO  : Completed shut down of DiscoveryClient
2024-05-20 03:29:49 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 16512 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 03:29:49 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 03:29:50 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 03:29:50 [restartedMain] INFO  : Finished Spring Data repository scanning in 36 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 03:29:50 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 03:29:50 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:29:50 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:29:50 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:29:50 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@48e5a0c, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@aee5d8b]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 03:29:50 [cluster-ClusterId{value='664b09fe0a5122789e828cf9', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:10, serverValue:306}] to localhost:27017
2024-05-20 03:29:50 [cluster-ClusterId{value='664b09fe0a5122789e828cf9', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3059700}
2024-05-20 03:29:50 [cluster-rtt-ClusterId{value='664b09fe0a5122789e828cf9', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:11, serverValue:307}] to localhost:27017
2024-05-20 03:29:50 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:29:50 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 03:29:50 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:29:50 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 03:29:51 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 03:29:51 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 03:29:51 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 03:29:51 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 03:29:51 [restartedMain] INFO  : Disable delta property : false
2024-05-20 03:29:51 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 03:29:51 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 03:29:51 [restartedMain] INFO  : Application is null : false
2024-05-20 03:29:51 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 03:29:51 [restartedMain] INFO  : Application version is -1: true
2024-05-20 03:29:51 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 03:29:51 [restartedMain] INFO  : The response status is 200
2024-05-20 03:29:51 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 03:29:51 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 03:29:51 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716193791855 with initial instances count: 2
2024-05-20 03:29:51 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 03:29:51 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716193791857, current=UP, previous=STARTING]
2024-05-20 03:29:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:29:51 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 03:29:51 [restartedMain] INFO  : Updating port to 8081
2024-05-20 03:29:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:29:52 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 03:29:52 [restartedMain] INFO  : Started FinalProjectApplication in 3.1 seconds (JVM running for 505.49)
2024-05-20 03:29:52 [Thread-37] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 03:29:52 [Thread-37] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716193792463, current=DOWN, previous=UP]
2024-05-20 03:29:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:29:52 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 03:29:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:29:54 [Thread-37] INFO  : Shutting down DiscoveryClient ...
2024-05-20 03:29:57 [Thread-37] INFO  : Unregistering ...
2024-05-20 03:29:57 [Thread-37] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 03:29:57 [Thread-37] INFO  : Completed shut down of DiscoveryClient
2024-05-20 03:29:57 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 16512 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 03:29:57 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 03:29:58 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 03:29:58 [restartedMain] INFO  : Finished Spring Data repository scanning in 37 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 03:29:58 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 03:29:58 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:29:58 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:29:58 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:29:58 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@5e0cf2b6, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@aee5d8b]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 03:29:58 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:29:58 [cluster-rtt-ClusterId{value='664b0a060a5122789e828cfa', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:13, serverValue:308}] to localhost:27017
2024-05-20 03:29:58 [cluster-ClusterId{value='664b0a060a5122789e828cfa', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:12, serverValue:309}] to localhost:27017
2024-05-20 03:29:58 [cluster-ClusterId{value='664b0a060a5122789e828cfa', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=6417700}
2024-05-20 03:29:58 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 03:29:58 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:29:58 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 03:29:59 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 03:29:59 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 03:29:59 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 03:29:59 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 03:29:59 [restartedMain] INFO  : Disable delta property : false
2024-05-20 03:29:59 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 03:29:59 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 03:29:59 [restartedMain] INFO  : Application is null : false
2024-05-20 03:29:59 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 03:29:59 [restartedMain] INFO  : Application version is -1: true
2024-05-20 03:29:59 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 03:29:59 [restartedMain] INFO  : The response status is 200
2024-05-20 03:29:59 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 03:29:59 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 03:29:59 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716193799334 with initial instances count: 2
2024-05-20 03:29:59 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 03:29:59 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716193799335, current=UP, previous=STARTING]
2024-05-20 03:29:59 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:29:59 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 03:29:59 [restartedMain] INFO  : Updating port to 8081
2024-05-20 03:29:59 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:29:59 [restartedMain] INFO  : Started FinalProjectApplication in 2.109 seconds (JVM running for 512.783)
2024-05-20 03:29:59 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 03:34:15 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 03:34:15 [Thread-51] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 03:34:15 [Thread-51] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716194055964, current=DOWN, previous=UP]
2024-05-20 03:34:15 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:34:15 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:34:18 [Thread-51] INFO  : Shutting down DiscoveryClient ...
2024-05-20 03:34:21 [Thread-51] INFO  : Unregistering ...
2024-05-20 03:34:21 [Thread-51] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 03:34:21 [Thread-51] INFO  : Completed shut down of DiscoveryClient
2024-05-20 03:34:21 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 16512 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 03:34:21 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 03:34:21 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 03:34:21 [restartedMain] INFO  : Finished Spring Data repository scanning in 21 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 03:34:21 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 03:34:21 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:34:21 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:34:21 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:34:21 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@70e1be33, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@aee5d8b]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 03:34:21 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:34:21 [cluster-ClusterId{value='664b0b0d0a5122789e828cfb', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:14, serverValue:311}] to localhost:27017
2024-05-20 03:34:21 [cluster-rtt-ClusterId{value='664b0b0d0a5122789e828cfb', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:15, serverValue:310}] to localhost:27017
2024-05-20 03:34:21 [cluster-ClusterId{value='664b0b0d0a5122789e828cfb', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3131500}
2024-05-20 03:34:21 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 03:34:21 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:34:22 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 03:34:22 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 03:34:22 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 03:34:22 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 03:34:22 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 03:34:22 [restartedMain] INFO  : Disable delta property : false
2024-05-20 03:34:22 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 03:34:22 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 03:34:22 [restartedMain] INFO  : Application is null : false
2024-05-20 03:34:22 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 03:34:22 [restartedMain] INFO  : Application version is -1: true
2024-05-20 03:34:22 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 03:34:22 [restartedMain] INFO  : The response status is 200
2024-05-20 03:34:22 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 03:34:22 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 03:34:22 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716194062560 with initial instances count: 2
2024-05-20 03:34:22 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 03:34:22 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716194062561, current=UP, previous=STARTING]
2024-05-20 03:34:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:34:22 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 03:34:22 [restartedMain] INFO  : Updating port to 8081
2024-05-20 03:34:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:34:22 [restartedMain] INFO  : Started FinalProjectApplication in 1.806 seconds (JVM running for 775.975)
2024-05-20 03:34:22 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 03:34:23 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 03:34:23 [Thread-65] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 03:34:23 [Thread-65] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716194063281, current=DOWN, previous=UP]
2024-05-20 03:34:23 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:34:23 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:34:25 [Thread-65] INFO  : Shutting down DiscoveryClient ...
2024-05-20 03:34:28 [Thread-65] INFO  : Unregistering ...
2024-05-20 03:34:28 [Thread-65] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 03:34:28 [Thread-65] INFO  : Completed shut down of DiscoveryClient
2024-05-20 03:34:28 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 16512 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 03:34:28 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 03:34:28 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 03:34:28 [restartedMain] INFO  : Finished Spring Data repository scanning in 29 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 03:34:28 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 03:34:28 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:34:28 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:34:28 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:34:28 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@5809ff63, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@aee5d8b]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 03:34:29 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:34:29 [cluster-rtt-ClusterId{value='664b0b140a5122789e828cfc', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:17, serverValue:313}] to localhost:27017
2024-05-20 03:34:29 [cluster-ClusterId{value='664b0b140a5122789e828cfc', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:16, serverValue:312}] to localhost:27017
2024-05-20 03:34:29 [cluster-ClusterId{value='664b0b140a5122789e828cfc', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4638300}
2024-05-20 03:34:29 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 03:34:29 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:34:29 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 03:34:29 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 03:34:29 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 03:34:29 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 03:34:29 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 03:34:29 [restartedMain] INFO  : Disable delta property : false
2024-05-20 03:34:29 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 03:34:29 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 03:34:29 [restartedMain] INFO  : Application is null : false
2024-05-20 03:34:29 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 03:34:29 [restartedMain] INFO  : Application version is -1: true
2024-05-20 03:34:29 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 03:34:29 [restartedMain] INFO  : The response status is 200
2024-05-20 03:34:29 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 03:34:29 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 03:34:29 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716194069801 with initial instances count: 2
2024-05-20 03:34:29 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 03:34:29 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716194069802, current=UP, previous=STARTING]
2024-05-20 03:34:29 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:34:29 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 03:34:29 [restartedMain] INFO  : Updating port to 8081
2024-05-20 03:34:29 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:34:30 [restartedMain] INFO  : Started FinalProjectApplication in 1.709 seconds (JVM running for 783.221)
2024-05-20 03:34:30 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 03:35:22 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 03:35:22 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716194122286, current=DOWN, previous=UP]
2024-05-20 03:35:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:35:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:35:24 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 03:35:27 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 03:35:27 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 03:35:27 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 03:35:34 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 27796 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 03:35:34 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 03:35:34 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 03:35:34 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 03:35:34 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 03:35:35 [restartedMain] INFO  : Finished Spring Data repository scanning in 111 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 03:35:35 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 03:35:35 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:35:35 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:35:35 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:35:35 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@207adfe2, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@610d0c61]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 03:35:35 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:35:36 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 03:35:36 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:35:36 [cluster-ClusterId{value='664b0b57b45b564fa61b5e48', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:314}] to localhost:27017
2024-05-20 03:35:36 [cluster-rtt-ClusterId{value='664b0b57b45b564fa61b5e48', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:315}] to localhost:27017
2024-05-20 03:35:36 [cluster-ClusterId{value='664b0b57b45b564fa61b5e48', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=42638300}
2024-05-20 03:35:36 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 03:35:37 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 03:35:37 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 03:35:37 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 03:35:37 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 03:35:37 [restartedMain] INFO  : Disable delta property : false
2024-05-20 03:35:37 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 03:35:37 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 03:35:37 [restartedMain] INFO  : Application is null : false
2024-05-20 03:35:37 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 03:35:37 [restartedMain] INFO  : Application version is -1: true
2024-05-20 03:35:37 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 03:35:37 [restartedMain] INFO  : The response status is 200
2024-05-20 03:35:37 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 03:35:37 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 03:35:37 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716194137995 with initial instances count: 1
2024-05-20 03:35:37 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 03:35:37 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716194137997, current=UP, previous=STARTING]
2024-05-20 03:35:38 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:35:38 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 03:35:38 [restartedMain] INFO  : Updating port to 8081
2024-05-20 03:35:38 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:35:38 [restartedMain] INFO  : Started FinalProjectApplication in 5.386 seconds (JVM running for 6.398)
2024-05-20 03:35:51 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:316}] to localhost:27017
2024-05-20 03:35:51 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:317}] to localhost:27017
2024-05-20 03:35:51 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:318}] to localhost:27017
2024-05-20 03:37:11 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 03:37:11 [Thread-1] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 03:37:11 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716194231923, current=DOWN, previous=UP]
2024-05-20 03:37:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:37:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:37:14 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 03:37:17 [Thread-1] INFO  : Unregistering ...
2024-05-20 03:37:17 [Thread-1] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 03:37:17 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 03:37:17 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 27796 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 03:37:17 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 03:37:17 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 03:37:17 [restartedMain] INFO  : Finished Spring Data repository scanning in 38 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 03:37:17 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 03:37:17 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:37:17 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:37:17 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:37:17 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@2c9488dd, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@610d0c61]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 03:37:17 [cluster-ClusterId{value='664b0bbdb45b564fa61b5e4b', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:319}] to localhost:27017
2024-05-20 03:37:17 [cluster-rtt-ClusterId{value='664b0bbdb45b564fa61b5e4b', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:320}] to localhost:27017
2024-05-20 03:37:17 [cluster-ClusterId{value='664b0bbdb45b564fa61b5e4b', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3065200}
2024-05-20 03:37:17 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:37:17 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 03:37:17 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:37:18 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 03:37:18 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 03:37:18 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 03:37:18 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 03:37:18 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 03:37:18 [restartedMain] INFO  : Disable delta property : false
2024-05-20 03:37:18 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 03:37:18 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 03:37:18 [restartedMain] INFO  : Application is null : false
2024-05-20 03:37:18 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 03:37:18 [restartedMain] INFO  : Application version is -1: true
2024-05-20 03:37:18 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 03:37:18 [restartedMain] INFO  : The response status is 200
2024-05-20 03:37:18 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 03:37:18 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 03:37:18 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716194238920 with initial instances count: 2
2024-05-20 03:37:18 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 03:37:18 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716194238921, current=UP, previous=STARTING]
2024-05-20 03:37:18 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:37:18 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 03:37:18 [restartedMain] INFO  : Updating port to 8081
2024-05-20 03:37:18 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:37:19 [restartedMain] INFO  : Started FinalProjectApplication in 2.272 seconds (JVM running for 107.254)
2024-05-20 03:37:19 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 03:37:19 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 03:37:19 [Thread-16] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 03:37:19 [Thread-16] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716194239488, current=DOWN, previous=UP]
2024-05-20 03:37:19 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:37:19 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:37:21 [Thread-16] INFO  : Shutting down DiscoveryClient ...
2024-05-20 03:37:24 [Thread-16] INFO  : Unregistering ...
2024-05-20 03:37:24 [Thread-16] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 03:37:24 [Thread-16] INFO  : Completed shut down of DiscoveryClient
2024-05-20 03:37:24 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 27796 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 03:37:24 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 03:37:25 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 03:37:25 [restartedMain] INFO  : Finished Spring Data repository scanning in 32 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 03:37:25 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 03:37:25 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:37:25 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:37:25 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:37:25 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@538ac1f1, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@610d0c61]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 03:37:25 [cluster-rtt-ClusterId{value='664b0bc5b45b564fa61b5e4c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:9, serverValue:322}] to localhost:27017
2024-05-20 03:37:25 [cluster-ClusterId{value='664b0bc5b45b564fa61b5e4c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:8, serverValue:321}] to localhost:27017
2024-05-20 03:37:25 [cluster-ClusterId{value='664b0bc5b45b564fa61b5e4c', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2268400}
2024-05-20 03:37:25 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:37:25 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 03:37:25 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:37:25 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 03:37:26 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 03:37:26 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 03:37:26 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 03:37:26 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 03:37:26 [restartedMain] INFO  : Disable delta property : false
2024-05-20 03:37:26 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 03:37:26 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 03:37:26 [restartedMain] INFO  : Application is null : false
2024-05-20 03:37:26 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 03:37:26 [restartedMain] INFO  : Application version is -1: true
2024-05-20 03:37:26 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 03:37:26 [restartedMain] INFO  : The response status is 200
2024-05-20 03:37:26 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 03:37:26 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 03:37:26 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716194246251 with initial instances count: 2
2024-05-20 03:37:26 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 03:37:26 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716194246252, current=UP, previous=STARTING]
2024-05-20 03:37:26 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:37:26 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 03:37:26 [restartedMain] INFO  : Updating port to 8081
2024-05-20 03:37:26 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:37:26 [restartedMain] INFO  : Started FinalProjectApplication in 2.032 seconds (JVM running for 114.581)
2024-05-20 03:37:26 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 03:39:01 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 03:39:01 [Thread-23] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 03:39:01 [Thread-23] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716194341902, current=DOWN, previous=UP]
2024-05-20 03:39:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:39:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:39:03 [Thread-23] INFO  : Shutting down DiscoveryClient ...
2024-05-20 03:39:07 [Thread-23] INFO  : Unregistering ...
2024-05-20 03:39:07 [Thread-23] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 03:39:07 [Thread-23] INFO  : Completed shut down of DiscoveryClient
2024-05-20 03:39:07 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 27796 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 03:39:07 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 03:39:07 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 03:39:07 [restartedMain] INFO  : Finished Spring Data repository scanning in 29 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 03:39:07 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 03:39:07 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:39:07 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:39:07 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:39:07 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@448ff289, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@610d0c61]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 03:39:07 [cluster-ClusterId{value='664b0c2bb45b564fa61b5e4d', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:10, serverValue:323}] to localhost:27017
2024-05-20 03:39:07 [cluster-ClusterId{value='664b0c2bb45b564fa61b5e4d', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2581400}
2024-05-20 03:39:07 [cluster-rtt-ClusterId{value='664b0c2bb45b564fa61b5e4d', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:11, serverValue:324}] to localhost:27017
2024-05-20 03:39:07 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:39:07 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 03:39:07 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:39:08 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 03:39:08 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 03:39:08 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 03:39:08 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 03:39:08 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 03:39:08 [restartedMain] INFO  : Disable delta property : false
2024-05-20 03:39:08 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 03:39:08 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 03:39:08 [restartedMain] INFO  : Application is null : false
2024-05-20 03:39:08 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 03:39:08 [restartedMain] INFO  : Application version is -1: true
2024-05-20 03:39:08 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 03:39:08 [restartedMain] INFO  : The response status is 200
2024-05-20 03:39:08 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 03:39:08 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 03:39:08 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716194348731 with initial instances count: 2
2024-05-20 03:39:08 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 03:39:08 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716194348732, current=UP, previous=STARTING]
2024-05-20 03:39:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:39:08 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 03:39:08 [restartedMain] INFO  : Updating port to 8081
2024-05-20 03:39:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:39:09 [restartedMain] INFO  : Started FinalProjectApplication in 2.13 seconds (JVM running for 217.089)
2024-05-20 03:39:09 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 03:39:09 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 03:39:09 [Thread-37] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 03:39:09 [Thread-37] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716194349356, current=DOWN, previous=UP]
2024-05-20 03:39:09 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:39:09 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:39:11 [Thread-37] INFO  : Shutting down DiscoveryClient ...
2024-05-20 03:39:14 [Thread-37] INFO  : Unregistering ...
2024-05-20 03:39:14 [Thread-37] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 03:39:14 [Thread-37] INFO  : Completed shut down of DiscoveryClient
2024-05-20 03:39:14 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 27796 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 03:39:14 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 03:39:14 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 03:39:15 [restartedMain] INFO  : Finished Spring Data repository scanning in 40 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 03:39:15 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 03:39:15 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:39:15 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:39:15 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:39:15 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@470fa6bb, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@610d0c61]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 03:39:15 [cluster-ClusterId{value='664b0c33b45b564fa61b5e4e', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:12, serverValue:326}] to localhost:27017
2024-05-20 03:39:15 [cluster-rtt-ClusterId{value='664b0c33b45b564fa61b5e4e', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:13, serverValue:325}] to localhost:27017
2024-05-20 03:39:15 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:39:15 [cluster-ClusterId{value='664b0c33b45b564fa61b5e4e', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3423400}
2024-05-20 03:39:15 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 03:39:15 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:39:15 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 03:39:16 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 03:39:16 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 03:39:16 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 03:39:16 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 03:39:16 [restartedMain] INFO  : Disable delta property : false
2024-05-20 03:39:16 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 03:39:16 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 03:39:16 [restartedMain] INFO  : Application is null : false
2024-05-20 03:39:16 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 03:39:16 [restartedMain] INFO  : Application version is -1: true
2024-05-20 03:39:16 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 03:39:16 [restartedMain] INFO  : The response status is 200
2024-05-20 03:39:16 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 03:39:16 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 03:39:16 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716194356243 with initial instances count: 2
2024-05-20 03:39:16 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 03:39:16 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716194356245, current=UP, previous=STARTING]
2024-05-20 03:39:16 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:39:16 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 03:39:16 [restartedMain] INFO  : Updating port to 8081
2024-05-20 03:39:16 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:39:16 [restartedMain] INFO  : Started FinalProjectApplication in 2.31 seconds (JVM running for 224.702)
2024-05-20 03:39:16 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 03:41:16 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 03:41:16 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716194476549, current=DOWN, previous=UP]
2024-05-20 03:41:16 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:41:16 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:41:18 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 03:41:21 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 03:41:21 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 03:41:21 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 03:41:26 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 32336 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 03:41:26 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 03:41:26 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 03:41:26 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 03:41:27 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 03:41:27 [restartedMain] INFO  : Finished Spring Data repository scanning in 57 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 03:41:27 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 03:41:27 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:41:27 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:41:27 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:41:27 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@609c0f05, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2d355fd8]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 03:41:27 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:41:27 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 03:41:27 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:41:27 [cluster-ClusterId{value='664b0cb76a12266f88237195', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:327}] to localhost:27017
2024-05-20 03:41:27 [cluster-rtt-ClusterId{value='664b0cb76a12266f88237195', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:328}] to localhost:27017
2024-05-20 03:41:27 [cluster-ClusterId{value='664b0cb76a12266f88237195', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=39249200}
2024-05-20 03:41:28 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 03:41:28 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 03:41:28 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 03:41:28 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 03:41:28 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 03:41:28 [restartedMain] INFO  : Disable delta property : false
2024-05-20 03:41:28 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 03:41:28 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 03:41:28 [restartedMain] INFO  : Application is null : false
2024-05-20 03:41:28 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 03:41:28 [restartedMain] INFO  : Application version is -1: true
2024-05-20 03:41:28 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 03:41:29 [restartedMain] INFO  : The response status is 200
2024-05-20 03:41:29 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 03:41:29 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 03:41:29 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716194489270 with initial instances count: 2
2024-05-20 03:41:29 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 03:41:29 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716194489272, current=UP, previous=STARTING]
2024-05-20 03:41:29 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:41:29 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 03:41:29 [restartedMain] INFO  : Updating port to 8081
2024-05-20 03:41:29 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:41:29 [restartedMain] INFO  : Started FinalProjectApplication in 3.764 seconds (JVM running for 4.616)
2024-05-20 03:41:39 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:330}] to localhost:27017
2024-05-20 03:41:39 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:329}] to localhost:27017
2024-05-20 03:41:39 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:331}] to localhost:27017
2024-05-20 03:41:39 [nioEventLoopGroup-3-5] ERROR : Operator called default onErrorDropped
org.springframework.dao.DuplicateKeyException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.; nested exception is com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.
	at org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:106)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.potentiallyConvertRuntimeException(ReactiveMongoTemplate.java:2963)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.lambda$translateException$89(ReactiveMongoTemplate.java:2946)
	at reactor.core.publisher.Flux.lambda$onErrorMap$28(Flux.java:7070)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:255)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:258)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:545)
	at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$9(OperationExecutorImpl.java:124)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.operation.CommandOperationHelper.lambda$exceptionTransformingCallback$23(CommandOperationHelper.java:632)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.async.function.RetryingAsyncCallbackSupplier$RetryingCallback.onResult(RetryingAsyncCallbackSupplier.java:109)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$11(MixedBulkWriteOperation.java:464)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:84)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:61)
	at com.mongodb.internal.async.function.LoopState.breakAndCompleteIf(LoopState.java:111)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$10(MixedBulkWriteOperation.java:418)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:82)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:61)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$9(MixedBulkWriteOperation.java:440)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor$2.onResult(DefaultServer.java:276)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.CommandProtocolImpl$1.onResult(CommandProtocolImpl.java:84)
	at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection$1.onResult(DefaultConnectionPool.java:684)
	at com.mongodb.internal.connection.UsageTrackingInternalConnection$2.onResult(UsageTrackingInternalConnection.java:159)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:521)
	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:498)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:821)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:785)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:266)
	at com.mongodb.internal.connection.InternalStreamConnection.readAsync(InternalStreamConnection.java:642)
	at com.mongodb.internal.connection.InternalStreamConnection.access$600(InternalStreamConnection.java:86)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:775)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:760)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
	at com.mongodb.connection.netty.NettyStream.handleReadResponse(NettyStream.java:347)
	at com.mongodb.connection.netty.NettyStream.access$1100(NettyStream.java:105)
	at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:421)
	at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:418)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.
	at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$createSingleWriteRequestMono$24(MongoOperationPublisher.java:490)
	at reactor.core.publisher.Mono.lambda$onErrorMap$30(Mono.java:3797)
	at reactor.core.publisher.Mono.lambda$onErrorResume$32(Mono.java:3887)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	... 67 common frames omitted
2024-05-20 03:45:12 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 03:45:12 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716194712114, current=DOWN, previous=UP]
2024-05-20 03:45:12 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:45:12 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:45:14 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 03:45:17 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 03:45:17 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 03:45:17 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 03:45:21 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 1960 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 03:45:21 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 03:45:22 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 03:45:22 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 03:45:22 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 03:45:22 [restartedMain] INFO  : Finished Spring Data repository scanning in 61 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 03:45:22 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 03:45:22 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:45:22 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:45:22 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 03:45:23 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@4fbca2fe, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@45ebed2d]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 03:45:23 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:45:23 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 03:45:23 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 03:45:23 [cluster-ClusterId{value='664b0da3c85e3c006f52ba62', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:333}] to localhost:27017
2024-05-20 03:45:23 [cluster-rtt-ClusterId{value='664b0da3c85e3c006f52ba62', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:332}] to localhost:27017
2024-05-20 03:45:23 [cluster-ClusterId{value='664b0da3c85e3c006f52ba62', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=39121400}
2024-05-20 03:45:23 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 03:45:24 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 03:45:24 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 03:45:24 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 03:45:24 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 03:45:24 [restartedMain] INFO  : Disable delta property : false
2024-05-20 03:45:24 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 03:45:24 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 03:45:24 [restartedMain] INFO  : Application is null : false
2024-05-20 03:45:24 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 03:45:24 [restartedMain] INFO  : Application version is -1: true
2024-05-20 03:45:24 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 03:45:24 [restartedMain] INFO  : The response status is 200
2024-05-20 03:45:24 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 03:45:24 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 03:45:24 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716194724713 with initial instances count: 2
2024-05-20 03:45:24 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 03:45:24 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716194724715, current=UP, previous=STARTING]
2024-05-20 03:45:24 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:45:24 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 03:45:24 [restartedMain] INFO  : Updating port to 8081
2024-05-20 03:45:24 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:45:25 [restartedMain] INFO  : Started FinalProjectApplication in 3.823 seconds (JVM running for 4.676)
2024-05-20 03:45:35 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:334}] to localhost:27017
2024-05-20 03:45:35 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:335}] to localhost:27017
2024-05-20 03:45:35 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:336}] to localhost:27017
2024-05-20 03:45:35 [nioEventLoopGroup-3-4] ERROR : Operator called default onErrorDropped
org.springframework.dao.DuplicateKeyException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.; nested exception is com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.
	at org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:106)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.potentiallyConvertRuntimeException(ReactiveMongoTemplate.java:2963)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.lambda$translateException$89(ReactiveMongoTemplate.java:2946)
	at reactor.core.publisher.Flux.lambda$onErrorMap$28(Flux.java:7070)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:255)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:258)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:545)
	at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$9(OperationExecutorImpl.java:124)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.operation.CommandOperationHelper.lambda$exceptionTransformingCallback$23(CommandOperationHelper.java:632)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.async.function.RetryingAsyncCallbackSupplier$RetryingCallback.onResult(RetryingAsyncCallbackSupplier.java:109)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$11(MixedBulkWriteOperation.java:464)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:84)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:61)
	at com.mongodb.internal.async.function.LoopState.breakAndCompleteIf(LoopState.java:111)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$10(MixedBulkWriteOperation.java:418)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:82)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:61)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$9(MixedBulkWriteOperation.java:440)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor$2.onResult(DefaultServer.java:276)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.CommandProtocolImpl$1.onResult(CommandProtocolImpl.java:84)
	at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection$1.onResult(DefaultConnectionPool.java:684)
	at com.mongodb.internal.connection.UsageTrackingInternalConnection$2.onResult(UsageTrackingInternalConnection.java:159)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:521)
	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:498)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:821)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:785)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:266)
	at com.mongodb.internal.connection.InternalStreamConnection.readAsync(InternalStreamConnection.java:642)
	at com.mongodb.internal.connection.InternalStreamConnection.access$600(InternalStreamConnection.java:86)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:775)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:760)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
	at com.mongodb.connection.netty.NettyStream.handleReadResponse(NettyStream.java:347)
	at com.mongodb.connection.netty.NettyStream.access$1100(NettyStream.java:105)
	at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:421)
	at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:418)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.
	at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$createSingleWriteRequestMono$24(MongoOperationPublisher.java:490)
	at reactor.core.publisher.Mono.lambda$onErrorMap$30(Mono.java:3797)
	at reactor.core.publisher.Mono.lambda$onErrorResume$32(Mono.java:3887)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	... 67 common frames omitted
2024-05-20 03:45:58 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 03:45:58 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716194758755, current=DOWN, previous=UP]
2024-05-20 03:45:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 03:45:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 03:46:00 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 03:46:03 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 03:46:03 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 03:46:03 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 09:39:10 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 28348 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 09:39:10 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 09:39:10 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 09:39:10 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 09:39:11 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 09:39:11 [restartedMain] INFO  : Finished Spring Data repository scanning in 63 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 09:39:11 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 09:39:11 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 09:39:11 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 09:39:11 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 09:39:12 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@406b3fc9, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@8945de3]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 09:39:12 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 09:39:12 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 09:39:12 [cluster-ClusterId{value='664b60906c8a94402f4c4ae4', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:339}] to localhost:27017
2024-05-20 09:39:12 [cluster-rtt-ClusterId{value='664b60906c8a94402f4c4ae4', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:338}] to localhost:27017
2024-05-20 09:39:12 [cluster-ClusterId{value='664b60906c8a94402f4c4ae4', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=49378300}
2024-05-20 09:39:12 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 09:39:13 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 09:39:14 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 09:39:14 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 09:39:14 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 09:39:14 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 09:39:14 [restartedMain] INFO  : Disable delta property : false
2024-05-20 09:39:14 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 09:39:14 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 09:39:14 [restartedMain] INFO  : Application is null : false
2024-05-20 09:39:14 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 09:39:14 [restartedMain] INFO  : Application version is -1: true
2024-05-20 09:39:14 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 09:39:15 [restartedMain] INFO  : The response status is 200
2024-05-20 09:39:15 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 09:39:15 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 09:39:15 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716215955342 with initial instances count: 1
2024-05-20 09:39:15 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 09:39:15 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716215955347, current=UP, previous=STARTING]
2024-05-20 09:39:15 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 09:39:15 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 09:39:15 [restartedMain] INFO  : Updating port to 8081
2024-05-20 09:39:15 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 09:39:15 [restartedMain] INFO  : Started FinalProjectApplication in 5.843 seconds (JVM running for 6.835)
2024-05-20 09:39:31 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:341}] to localhost:27017
2024-05-20 09:39:31 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:340}] to localhost:27017
2024-05-20 09:39:31 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:342}] to localhost:27017
2024-05-20 09:41:53 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 09:41:53 [Thread-1] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 09:41:53 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716216113684, current=DOWN, previous=UP]
2024-05-20 09:41:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 09:41:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 09:41:55 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 09:41:58 [Thread-1] INFO  : Unregistering ...
2024-05-20 09:41:58 [Thread-1] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 09:41:58 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 09:41:59 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 28348 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 09:41:59 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 09:42:00 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 09:42:00 [restartedMain] INFO  : Finished Spring Data repository scanning in 70 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 09:42:00 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 09:42:00 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 09:42:00 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 09:42:00 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 09:42:00 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@5c3687b8, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@8945de3]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 09:42:00 [cluster-rtt-ClusterId{value='664b61386c8a94402f4c4ae5', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:344}] to localhost:27017
2024-05-20 09:42:00 [cluster-ClusterId{value='664b61386c8a94402f4c4ae5', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:343}] to localhost:27017
2024-05-20 09:42:00 [cluster-ClusterId{value='664b61386c8a94402f4c4ae5', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4646000}
2024-05-20 09:42:00 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 09:42:00 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 09:42:00 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 09:42:01 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 09:42:02 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 09:42:02 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 09:42:02 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 09:42:02 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 09:42:02 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 09:42:02 [restartedMain] INFO  : Disable delta property : false
2024-05-20 09:42:02 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 09:42:02 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 09:42:02 [restartedMain] INFO  : Application is null : false
2024-05-20 09:42:02 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 09:42:02 [restartedMain] INFO  : Application version is -1: true
2024-05-20 09:42:02 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 09:42:02 [restartedMain] INFO  : The response status is 200
2024-05-20 09:42:02 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 09:42:02 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 09:42:02 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716216122969 with initial instances count: 2
2024-05-20 09:42:02 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 09:42:02 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716216122971, current=UP, previous=STARTING]
2024-05-20 09:42:02 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 09:42:02 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 09:42:02 [restartedMain] INFO  : Updating port to 8081
2024-05-20 09:42:02 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 09:42:03 [restartedMain] INFO  : Started FinalProjectApplication in 5.021 seconds (JVM running for 174.906)
2024-05-20 09:42:03 [Thread-16] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 09:42:03 [Thread-16] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716216123974, current=DOWN, previous=UP]
2024-05-20 09:42:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 09:42:03 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 09:42:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 09:42:06 [Thread-16] INFO  : Shutting down DiscoveryClient ...
2024-05-20 09:42:09 [Thread-16] INFO  : Unregistering ...
2024-05-20 09:42:09 [Thread-16] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 09:42:09 [Thread-16] INFO  : Completed shut down of DiscoveryClient
2024-05-20 09:42:09 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 28348 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 09:42:09 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 09:42:10 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 09:42:10 [restartedMain] INFO  : Finished Spring Data repository scanning in 66 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 09:42:10 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 09:42:10 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 09:42:10 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 09:42:10 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 09:42:10 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@27d7a2bd, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@8945de3]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 09:42:10 [cluster-ClusterId{value='664b61426c8a94402f4c4ae6', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:8, serverValue:346}] to localhost:27017
2024-05-20 09:42:10 [cluster-rtt-ClusterId{value='664b61426c8a94402f4c4ae6', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:9, serverValue:345}] to localhost:27017
2024-05-20 09:42:10 [cluster-ClusterId{value='664b61426c8a94402f4c4ae6', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4780800}
2024-05-20 09:42:10 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 09:42:10 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 09:42:10 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 09:42:11 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 09:42:12 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 09:42:12 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 09:42:12 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 09:42:12 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 09:42:12 [restartedMain] INFO  : Disable delta property : false
2024-05-20 09:42:12 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 09:42:12 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 09:42:12 [restartedMain] INFO  : Application is null : false
2024-05-20 09:42:12 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 09:42:12 [restartedMain] INFO  : Application version is -1: true
2024-05-20 09:42:12 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 09:42:12 [restartedMain] INFO  : The response status is 200
2024-05-20 09:42:12 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 09:42:12 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 09:42:12 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716216132865 with initial instances count: 2
2024-05-20 09:42:12 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 09:42:12 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716216132868, current=UP, previous=STARTING]
2024-05-20 09:42:12 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 09:42:12 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 09:42:12 [restartedMain] INFO  : Updating port to 8081
2024-05-20 09:42:12 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 09:42:13 [restartedMain] INFO  : Started FinalProjectApplication in 4.736 seconds (JVM running for 184.868)
2024-05-20 09:42:13 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 09:43:01 [nioEventLoopGroup-7-3] INFO  : Opened connection [connectionId{localValue:10, serverValue:347}] to localhost:27017
2024-05-20 09:43:01 [nioEventLoopGroup-7-4] INFO  : Opened connection [connectionId{localValue:11, serverValue:348}] to localhost:27017
2024-05-20 09:43:01 [nioEventLoopGroup-7-5] INFO  : Opened connection [connectionId{localValue:12, serverValue:349}] to localhost:27017
2024-05-20 09:44:09 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 09:44:09 [Thread-22] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 09:44:09 [Thread-22] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716216249715, current=DOWN, previous=UP]
2024-05-20 09:44:09 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 09:44:09 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 09:44:11 [Thread-22] INFO  : Shutting down DiscoveryClient ...
2024-05-20 09:44:14 [DiscoveryClient-0] WARN  : task supervisor shutting down, can't accept the task
2024-05-20 09:44:14 [Thread-22] INFO  : Unregistering ...
2024-05-20 09:44:14 [Thread-22] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 09:44:14 [Thread-22] INFO  : Completed shut down of DiscoveryClient
2024-05-20 09:44:15 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 28348 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 09:44:15 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 09:44:16 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 09:44:16 [restartedMain] INFO  : Finished Spring Data repository scanning in 62 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 09:44:16 [restartedMain] INFO  : BeanFactory id=b4787da9-d99a-3323-9bb1-bc28fe1e1b9a
2024-05-20 09:44:16 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 09:44:16 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 09:44:16 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 09:44:16 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@6f04bf38] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
2024-05-20 09:44:16 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-20 09:44:16 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@6f04bf38] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@6f04bf38] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@6f04bf38] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 38 common frames omitted
Caused by: java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3137)
	at java.base/java.lang.Class.getDeclaredConstructors(Class.java:2357)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:313)
	... 51 common frames omitted
Caused by: java.lang.ClassNotFoundException: project.infrastructure.adapters.CurrAccAdapter
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:398)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 55 common frames omitted
2024-05-20 09:45:32 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 6328 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 09:45:32 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 09:45:32 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 09:45:32 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 09:45:32 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 09:45:33 [restartedMain] INFO  : Finished Spring Data repository scanning in 55 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 09:45:33 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 09:45:33 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 09:45:33 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 09:45:33 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 09:45:33 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@4fbca2fe, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@45ebed2d]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 09:45:33 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 09:45:33 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 09:45:33 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 09:45:33 [cluster-ClusterId{value='664b620d3c891e1f192707d3', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:351}] to localhost:27017
2024-05-20 09:45:33 [cluster-rtt-ClusterId{value='664b620d3c891e1f192707d3', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:350}] to localhost:27017
2024-05-20 09:45:33 [cluster-ClusterId{value='664b620d3c891e1f192707d3', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=43924100}
2024-05-20 09:45:34 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 09:45:34 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 09:45:34 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 09:45:34 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 09:45:34 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 09:45:34 [restartedMain] INFO  : Disable delta property : false
2024-05-20 09:45:34 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 09:45:34 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 09:45:34 [restartedMain] INFO  : Application is null : false
2024-05-20 09:45:34 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 09:45:34 [restartedMain] INFO  : Application version is -1: true
2024-05-20 09:45:34 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 09:45:35 [restartedMain] INFO  : The response status is 200
2024-05-20 09:45:35 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 09:45:35 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 09:45:35 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716216335227 with initial instances count: 1
2024-05-20 09:45:35 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 09:45:35 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716216335230, current=UP, previous=STARTING]
2024-05-20 09:45:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 09:45:35 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 09:45:35 [restartedMain] INFO  : Updating port to 8081
2024-05-20 09:45:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 09:45:35 [restartedMain] INFO  : Started FinalProjectApplication in 3.996 seconds (JVM running for 4.865)
2024-05-20 09:45:41 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:352}] to localhost:27017
2024-05-20 09:45:41 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:353}] to localhost:27017
2024-05-20 09:45:41 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:354}] to localhost:27017
2024-05-20 09:50:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 09:51:03 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 09:51:03 [Thread-1] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 09:51:03 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716216663982, current=DOWN, previous=UP]
2024-05-20 09:51:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 09:51:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 09:51:06 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 10:00:34 [Thread-1] INFO  : Unregistering ...
2024-05-20 10:00:34 [Thread-1] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 10:00:34 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 10:00:35 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 6328 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 10:00:35 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 10:00:35 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 10:00:35 [restartedMain] INFO  : Finished Spring Data repository scanning in 34 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 10:00:35 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 10:00:35 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 10:00:35 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 10:00:35 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 10:00:35 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@72088ecb, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@45ebed2d]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 10:00:35 [cluster-ClusterId{value='664b65933c891e1f192707d7', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:356}] to localhost:27017
2024-05-20 10:00:35 [cluster-rtt-ClusterId{value='664b65933c891e1f192707d7', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:355}] to localhost:27017
2024-05-20 10:00:35 [cluster-ClusterId{value='664b65933c891e1f192707d7', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2091500}
2024-05-20 10:00:35 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 10:00:35 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 10:00:35 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 10:00:36 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 10:00:37 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 10:00:37 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 10:00:37 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 10:00:37 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 10:00:37 [restartedMain] INFO  : Disable delta property : false
2024-05-20 10:00:37 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 10:00:37 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 10:00:37 [restartedMain] INFO  : Application is null : false
2024-05-20 10:00:37 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 10:00:37 [restartedMain] INFO  : Application version is -1: true
2024-05-20 10:00:37 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 10:00:37 [restartedMain] INFO  : The response status is 200
2024-05-20 10:00:37 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 10:00:37 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 10:00:37 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716217237144 with initial instances count: 2
2024-05-20 10:00:37 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 10:00:37 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716217237145, current=UP, previous=STARTING]
2024-05-20 10:00:37 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 10:00:37 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 10:00:37 [restartedMain] INFO  : Updating port to 8081
2024-05-20 10:00:37 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 10:00:37 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 10:00:37 [restartedMain] INFO  : Started FinalProjectApplication in 2.967 seconds (JVM running for 906.93)
2024-05-20 10:00:37 [Thread-16] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 10:00:37 [Thread-16] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716217237876, current=DOWN, previous=UP]
2024-05-20 10:00:37 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 10:00:37 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 10:00:37 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 10:00:39 [Thread-16] INFO  : Shutting down DiscoveryClient ...
2024-05-20 10:00:42 [Thread-16] INFO  : Unregistering ...
2024-05-20 10:00:43 [Thread-16] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 10:00:43 [Thread-16] INFO  : Completed shut down of DiscoveryClient
2024-05-20 10:00:44 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 6328 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 10:00:44 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 10:00:44 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 10:00:44 [restartedMain] INFO  : Finished Spring Data repository scanning in 61 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 10:00:44 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 10:00:44 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 10:00:44 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 10:00:44 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 10:00:44 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@7aaea420, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@45ebed2d]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 10:00:44 [cluster-rtt-ClusterId{value='664b659c3c891e1f192707d8', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:9, serverValue:359}] to localhost:27017
2024-05-20 10:00:44 [cluster-ClusterId{value='664b659c3c891e1f192707d8', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:8, serverValue:358}] to localhost:27017
2024-05-20 10:00:44 [cluster-ClusterId{value='664b659c3c891e1f192707d8', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4281700}
2024-05-20 10:00:44 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 10:00:45 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 10:00:45 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 10:00:45 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 10:00:47 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 10:00:47 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 10:00:47 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 10:00:47 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 10:00:47 [restartedMain] INFO  : Disable delta property : false
2024-05-20 10:00:47 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 10:00:47 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 10:00:47 [restartedMain] INFO  : Application is null : false
2024-05-20 10:00:47 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 10:00:47 [restartedMain] INFO  : Application version is -1: true
2024-05-20 10:00:47 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 10:00:47 [restartedMain] INFO  : The response status is 200
2024-05-20 10:00:47 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 10:00:47 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 10:00:47 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716217247261 with initial instances count: 1
2024-05-20 10:00:47 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 10:00:47 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716217247264, current=UP, previous=STARTING]
2024-05-20 10:00:47 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 10:00:47 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 10:00:47 [restartedMain] INFO  : Updating port to 8081
2024-05-20 10:00:47 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 10:00:48 [restartedMain] INFO  : Started FinalProjectApplication in 5.3 seconds (JVM running for 917.484)
2024-05-20 10:00:48 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 10:02:34 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 10:02:34 [Thread-23] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 10:02:34 [Thread-23] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716217354843, current=DOWN, previous=UP]
2024-05-20 10:02:34 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 10:02:34 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 10:02:36 [Thread-23] INFO  : Shutting down DiscoveryClient ...
2024-05-20 10:02:39 [Thread-23] INFO  : Unregistering ...
2024-05-20 10:02:39 [Thread-23] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 10:02:39 [Thread-23] INFO  : Completed shut down of DiscoveryClient
2024-05-20 10:02:40 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 6328 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 10:02:40 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 10:02:41 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 10:02:41 [restartedMain] INFO  : Finished Spring Data repository scanning in 49 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 10:02:41 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 10:02:41 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 10:02:41 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 10:02:41 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 10:02:41 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@718b49d2, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@45ebed2d]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 10:02:41 [cluster-rtt-ClusterId{value='664b66113c891e1f192707d9', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:10, serverValue:360}] to localhost:27017
2024-05-20 10:02:41 [cluster-ClusterId{value='664b66113c891e1f192707d9', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:11, serverValue:361}] to localhost:27017
2024-05-20 10:02:41 [cluster-ClusterId{value='664b66113c891e1f192707d9', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4474300}
2024-05-20 10:02:41 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 10:02:41 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 10:02:41 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 10:02:42 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 10:02:43 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 10:02:43 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 10:02:44 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 10:02:44 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 10:02:44 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 10:02:44 [restartedMain] INFO  : Disable delta property : false
2024-05-20 10:02:44 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 10:02:44 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 10:02:44 [restartedMain] INFO  : Application is null : false
2024-05-20 10:02:44 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 10:02:44 [restartedMain] INFO  : Application version is -1: true
2024-05-20 10:02:44 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 10:02:44 [restartedMain] INFO  : The response status is 200
2024-05-20 10:02:44 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 10:02:44 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 10:02:44 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716217364068 with initial instances count: 2
2024-05-20 10:02:44 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 10:02:44 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716217364071, current=UP, previous=STARTING]
2024-05-20 10:02:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 10:02:44 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 10:02:44 [restartedMain] INFO  : Updating port to 8081
2024-05-20 10:02:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 10:02:45 [restartedMain] INFO  : Started FinalProjectApplication in 4.982 seconds (JVM running for 1034.104)
2024-05-20 10:02:45 [Thread-37] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 10:02:45 [Thread-37] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716217365050, current=DOWN, previous=UP]
2024-05-20 10:02:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 10:02:45 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 10:02:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 10:02:47 [Thread-37] INFO  : Shutting down DiscoveryClient ...
2024-05-20 10:02:50 [Thread-37] INFO  : Unregistering ...
2024-05-20 10:02:50 [Thread-37] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 10:02:50 [Thread-37] INFO  : Completed shut down of DiscoveryClient
2024-05-20 10:02:50 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 6328 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 10:02:50 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 10:02:51 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 10:02:51 [restartedMain] INFO  : Finished Spring Data repository scanning in 58 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 10:02:51 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 10:02:51 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 10:02:51 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 10:02:51 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 10:02:51 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3d7d85ae, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@45ebed2d]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 10:02:51 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 10:02:51 [cluster-rtt-ClusterId{value='664b661b3c891e1f192707da', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:13, serverValue:362}] to localhost:27017
2024-05-20 10:02:51 [cluster-ClusterId{value='664b661b3c891e1f192707da', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:12, serverValue:363}] to localhost:27017
2024-05-20 10:02:51 [cluster-ClusterId{value='664b661b3c891e1f192707da', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=7816600}
2024-05-20 10:02:51 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 10:02:51 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 10:02:52 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 10:02:53 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 10:02:53 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 10:02:53 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 10:02:53 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 10:02:53 [restartedMain] INFO  : Disable delta property : false
2024-05-20 10:02:53 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 10:02:53 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 10:02:53 [restartedMain] INFO  : Application is null : false
2024-05-20 10:02:53 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 10:02:53 [restartedMain] INFO  : Application version is -1: true
2024-05-20 10:02:53 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 10:02:53 [restartedMain] INFO  : The response status is 200
2024-05-20 10:02:53 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 10:02:53 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 10:02:53 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716217373917 with initial instances count: 2
2024-05-20 10:02:53 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 10:02:53 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716217373919, current=UP, previous=STARTING]
2024-05-20 10:02:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 10:02:53 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 10:02:53 [restartedMain] INFO  : Updating port to 8081
2024-05-20 10:02:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 10:02:54 [restartedMain] INFO  : Started FinalProjectApplication in 4.648 seconds (JVM running for 1044.021)
2024-05-20 10:02:54 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 10:07:41 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 10:07:41 [Thread-50] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 10:07:41 [Thread-50] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716217661633, current=DOWN, previous=UP]
2024-05-20 10:07:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 10:07:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 10:07:43 [Thread-50] INFO  : Shutting down DiscoveryClient ...
2024-05-20 10:07:46 [Thread-50] INFO  : Unregistering ...
2024-05-20 10:07:46 [Thread-50] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 10:07:46 [Thread-50] INFO  : Completed shut down of DiscoveryClient
2024-05-20 10:07:47 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 6328 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 10:07:47 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 10:07:47 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 10:07:48 [restartedMain] INFO  : Finished Spring Data repository scanning in 64 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 10:07:48 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 10:07:48 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 10:07:48 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 10:07:48 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 10:07:48 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@8a67044, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@45ebed2d]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 10:07:48 [cluster-ClusterId{value='664b67443c891e1f192707db', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:15, serverValue:364}] to localhost:27017
2024-05-20 10:07:48 [cluster-rtt-ClusterId{value='664b67443c891e1f192707db', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:14, serverValue:365}] to localhost:27017
2024-05-20 10:07:48 [cluster-ClusterId{value='664b67443c891e1f192707db', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=5447900}
2024-05-20 10:07:48 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 10:07:48 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 10:07:48 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 10:07:49 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 10:07:50 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 10:07:50 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 10:07:50 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 10:07:50 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 10:07:50 [restartedMain] INFO  : Disable delta property : false
2024-05-20 10:07:50 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 10:07:50 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 10:07:50 [restartedMain] INFO  : Application is null : false
2024-05-20 10:07:50 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 10:07:50 [restartedMain] INFO  : Application version is -1: true
2024-05-20 10:07:50 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 10:07:50 [restartedMain] INFO  : The response status is 200
2024-05-20 10:07:50 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 10:07:50 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 10:07:50 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716217670111 with initial instances count: 1
2024-05-20 10:07:50 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 10:07:50 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716217670113, current=UP, previous=STARTING]
2024-05-20 10:07:50 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 10:07:50 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 10:07:50 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 10:07:50 [restartedMain] INFO  : Updating port to 8081
2024-05-20 10:07:50 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 10:07:51 [restartedMain] INFO  : Started FinalProjectApplication in 4.167 seconds (JVM running for 1340.119)
2024-05-20 10:07:51 [Thread-65] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 10:07:51 [Thread-65] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716217671064, current=DOWN, previous=UP]
2024-05-20 10:07:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 10:07:51 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 10:07:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 10:07:53 [Thread-65] INFO  : Shutting down DiscoveryClient ...
2024-05-20 10:07:56 [Thread-65] INFO  : Unregistering ...
2024-05-20 10:07:56 [Thread-65] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 10:07:56 [Thread-65] INFO  : Completed shut down of DiscoveryClient
2024-05-20 10:07:56 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 6328 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 10:07:56 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 10:07:56 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 10:07:56 [restartedMain] INFO  : Finished Spring Data repository scanning in 27 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 10:07:56 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 10:07:56 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 10:07:56 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 10:07:56 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 10:07:57 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@5bd64b7a, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@45ebed2d]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 10:07:57 [cluster-rtt-ClusterId{value='664b674d3c891e1f192707dc', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:16, serverValue:367}] to localhost:27017
2024-05-20 10:07:57 [cluster-ClusterId{value='664b674d3c891e1f192707dc', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:17, serverValue:366}] to localhost:27017
2024-05-20 10:07:57 [cluster-ClusterId{value='664b674d3c891e1f192707dc', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3513200}
2024-05-20 10:07:57 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 10:07:57 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 10:07:57 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 10:07:57 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 10:07:57 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 10:07:57 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 10:07:57 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 10:07:57 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 10:07:57 [restartedMain] INFO  : Disable delta property : false
2024-05-20 10:07:57 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 10:07:57 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 10:07:57 [restartedMain] INFO  : Application is null : false
2024-05-20 10:07:57 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 10:07:57 [restartedMain] INFO  : Application version is -1: true
2024-05-20 10:07:57 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 10:07:57 [restartedMain] INFO  : The response status is 200
2024-05-20 10:07:57 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 10:07:57 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 10:07:57 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716217677855 with initial instances count: 1
2024-05-20 10:07:57 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 10:07:57 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716217677855, current=UP, previous=STARTING]
2024-05-20 10:07:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 10:07:57 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 10:07:57 [restartedMain] INFO  : Updating port to 8081
2024-05-20 10:07:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 10:07:58 [restartedMain] INFO  : Started FinalProjectApplication in 1.896 seconds (JVM running for 1347.322)
2024-05-20 10:07:58 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 10:12:42 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 10:12:42 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716217962649, current=DOWN, previous=UP]
2024-05-20 10:12:42 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 10:12:42 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 10:12:44 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 10:12:47 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 10:12:47 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 10:12:47 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 10:12:53 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 11092 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 10:12:53 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 10:12:54 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 10:12:54 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 10:12:54 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 10:12:54 [restartedMain] INFO  : Finished Spring Data repository scanning in 67 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 10:12:54 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 10:12:54 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 10:12:54 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 10:12:54 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 10:12:55 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@170d1256, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@44d71555]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 10:12:55 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 10:12:55 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 10:12:55 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 10:12:55 [cluster-rtt-ClusterId{value='664b6877a4d143137640d739', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:369}] to localhost:27017
2024-05-20 10:12:55 [cluster-ClusterId{value='664b6877a4d143137640d739', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:368}] to localhost:27017
2024-05-20 10:12:55 [cluster-ClusterId{value='664b6877a4d143137640d739', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=55279900}
2024-05-20 10:12:56 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 10:12:56 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 10:12:56 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 10:12:56 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 10:12:56 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 10:12:56 [restartedMain] INFO  : Disable delta property : false
2024-05-20 10:12:56 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 10:12:56 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 10:12:56 [restartedMain] INFO  : Application is null : false
2024-05-20 10:12:56 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 10:12:56 [restartedMain] INFO  : Application version is -1: true
2024-05-20 10:12:56 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 10:12:57 [restartedMain] INFO  : The response status is 200
2024-05-20 10:12:57 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 10:12:57 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 10:12:57 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716217977123 with initial instances count: 2
2024-05-20 10:12:57 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 10:12:57 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716217977126, current=UP, previous=STARTING]
2024-05-20 10:12:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 10:12:57 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 10:12:57 [restartedMain] INFO  : Updating port to 8081
2024-05-20 10:12:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 10:12:57 [restartedMain] INFO  : Started FinalProjectApplication in 4.403 seconds (JVM running for 5.394)
2024-05-20 10:13:39 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:371}] to localhost:27017
2024-05-20 10:13:39 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:370}] to localhost:27017
2024-05-20 10:13:39 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:372}] to localhost:27017
2024-05-20 10:17:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 10:22:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 10:27:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 10:32:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 10:37:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 10:38:29 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 10:38:29 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716219509663, current=DOWN, previous=UP]
2024-05-20 10:38:29 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 10:38:29 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 10:38:31 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 10:38:34 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 10:38:34 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 10:38:34 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 10:38:41 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 26520 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 10:38:41 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 10:38:41 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 10:38:41 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 10:38:41 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 10:38:41 [restartedMain] INFO  : Finished Spring Data repository scanning in 58 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 10:38:42 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 10:38:42 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 10:38:42 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 10:38:42 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 10:38:42 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@654f82f8, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@154bb696]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 10:38:42 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 10:38:42 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 10:38:42 [cluster-rtt-ClusterId{value='664b6e82249bd50bf60c0c86', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:379}] to localhost:27017
2024-05-20 10:38:42 [cluster-ClusterId{value='664b6e82249bd50bf60c0c86', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:378}] to localhost:27017
2024-05-20 10:38:42 [cluster-ClusterId{value='664b6e82249bd50bf60c0c86', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=46518000}
2024-05-20 10:38:42 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 10:38:43 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 10:38:43 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 10:38:43 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 10:38:43 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 10:38:43 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 10:38:43 [restartedMain] INFO  : Disable delta property : false
2024-05-20 10:38:43 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 10:38:43 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 10:38:43 [restartedMain] INFO  : Application is null : false
2024-05-20 10:38:43 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 10:38:43 [restartedMain] INFO  : Application version is -1: true
2024-05-20 10:38:43 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 10:38:44 [restartedMain] INFO  : The response status is 200
2024-05-20 10:38:44 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 10:38:44 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 10:38:44 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716219524150 with initial instances count: 2
2024-05-20 10:38:44 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 10:38:44 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716219524152, current=UP, previous=STARTING]
2024-05-20 10:38:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 10:38:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 10:38:44 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 10:38:44 [restartedMain] INFO  : Updating port to 8081
2024-05-20 10:38:44 [restartedMain] INFO  : Started FinalProjectApplication in 3.807 seconds (JVM running for 4.724)
2024-05-20 10:44:57 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 10:45:09 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:380}] to localhost:27017
2024-05-20 10:45:09 [nioEventLoopGroup-3-3] ERROR : [f6a96c8c-1]  500 Server Error for HTTP GET "/accounts/all"
java.lang.UnsupportedOperationException: DBRef resolution is not supported!
	at org.springframework.data.mongodb.core.convert.NoOpDbRefResolver.handle(NoOpDbRefResolver.java:71)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler project.application.controller.BankAccountController#getAllBankAccounts() [DispatcherHandler]
	*__checkpoint ⇢ HTTP GET "/accounts/all" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.data.mongodb.core.convert.NoOpDbRefResolver.handle(NoOpDbRefResolver.java:71)
		at org.springframework.data.mongodb.core.convert.NoOpDbRefResolver.resolveDbRef(NoOpDbRefResolver.java:48)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readAssociation(MappingMongoConverter.java:687)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readProperties(MappingMongoConverter.java:611)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.populateProperties(MappingMongoConverter.java:549)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:527)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readDocument(MappingMongoConverter.java:491)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:427)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:423)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:120)
		at org.springframework.data.mongodb.core.ReactiveMongoTemplate$ReadDocumentCallback.doWith(ReactiveMongoTemplate.java:3300)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:376)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:251)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:878)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:803)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:161)
		at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.lambda$recurseCursor$4(BatchCursorFlux.java:94)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:171)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
		at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:549)
		at com.mongodb.internal.operation.AsyncQueryBatchCursor.next(AsyncQueryBatchCursor.java:174)
		at com.mongodb.reactivestreams.client.internal.BatchCursor.lambda$next$0(BatchCursor.java:35)
		at reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:58)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.Mono.subscribeWith(Mono.java:4605)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4318)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.recurseCursor(BatchCursorFlux.java:104)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.lambda$subscribe$0(BatchCursorFlux.java:56)
		at reactor.core.publisher.LambdaMonoSubscriber.onNext(LambdaMonoSubscriber.java:171)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
		at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:549)
		at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$2(OperationExecutorImpl.java:92)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
		at com.mongodb.internal.async.function.RetryingAsyncCallbackSupplier$RetryingCallback.onResult(RetryingAsyncCallbackSupplier.java:114)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
		at com.mongodb.internal.operation.FindOperation$2.onResult(FindOperation.java:792)
		at com.mongodb.internal.operation.CommandOperationHelper.lambda$transformingReadCallback$10(CommandOperationHelper.java:331)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor$2.onResult(DefaultServer.java:276)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.CommandProtocolImpl$1.onResult(CommandProtocolImpl.java:84)
		at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection$1.onResult(DefaultConnectionPool.java:684)
		at com.mongodb.internal.connection.UsageTrackingInternalConnection$2.onResult(UsageTrackingInternalConnection.java:159)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:521)
		at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:498)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:821)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:785)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
		at com.mongodb.connection.netty.NettyStream.handleReadResponse(NettyStream.java:347)
		at com.mongodb.connection.netty.NettyStream.access$1100(NettyStream.java:105)
		at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:421)
		at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:418)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:834)
2024-05-20 10:46:33 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 10:46:33 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716219993527, current=DOWN, previous=UP]
2024-05-20 10:46:33 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 10:46:33 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 10:46:35 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 10:46:38 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 10:46:38 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 10:46:38 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 10:46:43 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 33032 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 10:46:43 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 10:46:43 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 10:46:43 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 10:46:44 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 10:46:44 [restartedMain] INFO  : Finished Spring Data repository scanning in 56 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 10:46:44 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 10:46:44 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 10:46:44 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 10:46:44 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 10:46:44 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@4e9792dc, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3139beba]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 10:46:45 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 10:46:45 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 10:46:45 [cluster-rtt-ClusterId{value='664b70640ff74b34ac832ed6', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:382}] to localhost:27017
2024-05-20 10:46:45 [cluster-ClusterId{value='664b70640ff74b34ac832ed6', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:381}] to localhost:27017
2024-05-20 10:46:45 [cluster-ClusterId{value='664b70640ff74b34ac832ed6', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=41109700}
2024-05-20 10:46:45 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 10:46:45 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 10:46:46 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 10:46:46 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 10:46:46 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 10:46:46 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 10:46:46 [restartedMain] INFO  : Disable delta property : false
2024-05-20 10:46:46 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 10:46:46 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 10:46:46 [restartedMain] INFO  : Application is null : false
2024-05-20 10:46:46 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 10:46:46 [restartedMain] INFO  : Application version is -1: true
2024-05-20 10:46:46 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 10:46:46 [restartedMain] INFO  : The response status is 200
2024-05-20 10:46:46 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 10:46:46 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 10:46:46 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716220006599 with initial instances count: 2
2024-05-20 10:46:46 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 10:46:46 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716220006600, current=UP, previous=STARTING]
2024-05-20 10:46:46 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 10:46:46 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 10:46:46 [restartedMain] INFO  : Updating port to 8081
2024-05-20 10:46:46 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 10:46:47 [restartedMain] INFO  : Started FinalProjectApplication in 3.937 seconds (JVM running for 4.997)
2024-05-20 10:47:09 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:383}] to localhost:27017
2024-05-20 10:48:19 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:384}] to localhost:27017
2024-05-20 10:48:19 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:385}] to localhost:27017
2024-05-20 10:48:19 [nioEventLoopGroup-3-4] ERROR : Operator called default onErrorDropped
org.springframework.dao.DuplicateKeyException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.; nested exception is com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.; nested exception is org.springframework.dao.DuplicateKeyException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.; nested exception is com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.
	at org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:91)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.potentiallyConvertRuntimeException(ReactiveMongoTemplate.java:2963)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.lambda$translateException$89(ReactiveMongoTemplate.java:2946)
	at reactor.core.publisher.Mono.lambda$onErrorMap$31(Mono.java:3811)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:258)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:545)
	at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$9(OperationExecutorImpl.java:124)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.operation.CommandOperationHelper.lambda$exceptionTransformingCallback$23(CommandOperationHelper.java:632)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.async.function.RetryingAsyncCallbackSupplier$RetryingCallback.onResult(RetryingAsyncCallbackSupplier.java:109)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$11(MixedBulkWriteOperation.java:464)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:84)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:61)
	at com.mongodb.internal.async.function.LoopState.breakAndCompleteIf(LoopState.java:111)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$10(MixedBulkWriteOperation.java:418)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:82)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:61)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$9(MixedBulkWriteOperation.java:440)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor$2.onResult(DefaultServer.java:276)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.CommandProtocolImpl$1.onResult(CommandProtocolImpl.java:84)
	at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection$1.onResult(DefaultConnectionPool.java:684)
	at com.mongodb.internal.connection.UsageTrackingInternalConnection$2.onResult(UsageTrackingInternalConnection.java:159)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:521)
	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:498)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:821)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:785)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:266)
	at com.mongodb.internal.connection.InternalStreamConnection.readAsync(InternalStreamConnection.java:642)
	at com.mongodb.internal.connection.InternalStreamConnection.access$600(InternalStreamConnection.java:86)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:775)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:760)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
	at com.mongodb.connection.netty.NettyStream.handleReadResponse(NettyStream.java:347)
	at com.mongodb.connection.netty.NettyStream.access$1100(NettyStream.java:105)
	at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:421)
	at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:418)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.springframework.dao.DuplicateKeyException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.; nested exception is com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.
	at org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:106)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.potentiallyConvertRuntimeException(ReactiveMongoTemplate.java:2963)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.lambda$translateException$89(ReactiveMongoTemplate.java:2946)
	at reactor.core.publisher.Mono.lambda$onErrorMap$31(Mono.java:3811)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	... 77 common frames omitted
Caused by: com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.
	at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$createSingleWriteRequestMono$24(MongoOperationPublisher.java:490)
	at reactor.core.publisher.Mono.lambda$onErrorMap$30(Mono.java:3797)
	at reactor.core.publisher.Mono.lambda$onErrorResume$32(Mono.java:3887)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	... 67 common frames omitted
2024-05-20 10:50:19 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 10:50:19 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716220219402, current=DOWN, previous=UP]
2024-05-20 10:50:19 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 10:50:19 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 10:50:21 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 10:50:24 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 10:50:24 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 10:50:24 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 10:50:29 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 18068 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 10:50:29 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 10:50:29 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 10:50:29 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 10:50:30 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 10:50:30 [restartedMain] INFO  : Finished Spring Data repository scanning in 57 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 10:50:30 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 10:50:30 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 10:50:30 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 10:50:30 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 10:50:30 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@f814bfa, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2580b3a6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 10:50:30 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 10:50:30 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 10:50:30 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 10:50:30 [cluster-rtt-ClusterId{value='664b7146ebea157a9f8d11ad', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:387}] to localhost:27017
2024-05-20 10:50:30 [cluster-ClusterId{value='664b7146ebea157a9f8d11ad', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:386}] to localhost:27017
2024-05-20 10:50:30 [cluster-ClusterId{value='664b7146ebea157a9f8d11ad', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=45111600}
2024-05-20 10:50:31 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 10:50:31 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 10:50:31 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 10:50:31 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 10:50:31 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 10:50:31 [restartedMain] INFO  : Disable delta property : false
2024-05-20 10:50:31 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 10:50:31 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 10:50:31 [restartedMain] INFO  : Application is null : false
2024-05-20 10:50:31 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 10:50:31 [restartedMain] INFO  : Application version is -1: true
2024-05-20 10:50:31 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 10:50:32 [restartedMain] INFO  : The response status is 200
2024-05-20 10:50:32 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 10:50:32 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 10:50:32 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716220232291 with initial instances count: 1
2024-05-20 10:50:32 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 10:50:32 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716220232294, current=UP, previous=STARTING]
2024-05-20 10:50:32 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 10:50:32 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 10:50:32 [restartedMain] INFO  : Updating port to 8081
2024-05-20 10:50:32 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 10:50:32 [restartedMain] INFO  : Started FinalProjectApplication in 3.817 seconds (JVM running for 4.677)
2024-05-20 11:18:48 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:388}] to localhost:27017
2024-05-20 11:18:48 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:389}] to localhost:27017
2024-05-20 11:18:48 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:390}] to localhost:27017
2024-05-20 11:18:48 [nioEventLoopGroup-3-4] ERROR : Operator called default onErrorDropped
org.springframework.dao.DuplicateKeyException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.; nested exception is com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.
	at org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:106)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.potentiallyConvertRuntimeException(ReactiveMongoTemplate.java:2963)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.lambda$translateException$89(ReactiveMongoTemplate.java:2946)
	at reactor.core.publisher.Flux.lambda$onErrorMap$28(Flux.java:7070)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:255)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:258)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:545)
	at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$9(OperationExecutorImpl.java:124)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.operation.CommandOperationHelper.lambda$exceptionTransformingCallback$23(CommandOperationHelper.java:632)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.async.function.RetryingAsyncCallbackSupplier$RetryingCallback.onResult(RetryingAsyncCallbackSupplier.java:109)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$11(MixedBulkWriteOperation.java:464)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:84)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:61)
	at com.mongodb.internal.async.function.LoopState.breakAndCompleteIf(LoopState.java:111)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$10(MixedBulkWriteOperation.java:418)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:82)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:61)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$9(MixedBulkWriteOperation.java:440)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor$2.onResult(DefaultServer.java:276)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.CommandProtocolImpl$1.onResult(CommandProtocolImpl.java:84)
	at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection$1.onResult(DefaultConnectionPool.java:684)
	at com.mongodb.internal.connection.UsageTrackingInternalConnection$2.onResult(UsageTrackingInternalConnection.java:159)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:521)
	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:498)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:821)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:785)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:266)
	at com.mongodb.internal.connection.InternalStreamConnection.readAsync(InternalStreamConnection.java:642)
	at com.mongodb.internal.connection.InternalStreamConnection.access$600(InternalStreamConnection.java:86)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:775)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:760)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
	at com.mongodb.connection.netty.NettyStream.handleReadResponse(NettyStream.java:347)
	at com.mongodb.connection.netty.NettyStream.access$1100(NettyStream.java:105)
	at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:421)
	at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:418)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.
	at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$createSingleWriteRequestMono$24(MongoOperationPublisher.java:490)
	at reactor.core.publisher.Mono.lambda$onErrorMap$30(Mono.java:3797)
	at reactor.core.publisher.Mono.lambda$onErrorResume$32(Mono.java:3887)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	... 67 common frames omitted
2024-05-20 11:19:49 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 11:19:49 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716221989166, current=DOWN, previous=UP]
2024-05-20 11:19:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 11:19:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 11:19:51 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 11:19:54 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 11:19:54 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 11:19:54 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 11:20:03 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 34144 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 11:20:03 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 11:20:03 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 11:20:03 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 11:20:03 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 11:20:04 [restartedMain] INFO  : Finished Spring Data repository scanning in 78 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 11:20:04 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 11:20:04 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:20:04 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:20:04 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:20:04 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@2dc3b1a2, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2d502226]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 11:20:04 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 11:20:05 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 11:20:05 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 11:20:05 [cluster-rtt-ClusterId{value='664b7834b759f937b9972b08', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:391}] to localhost:27017
2024-05-20 11:20:05 [cluster-ClusterId{value='664b7834b759f937b9972b08', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:392}] to localhost:27017
2024-05-20 11:20:05 [cluster-ClusterId{value='664b7834b759f937b9972b08', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=58538100}
2024-05-20 11:20:06 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 11:20:06 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 11:20:06 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 11:20:06 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 11:20:06 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 11:20:06 [restartedMain] INFO  : Disable delta property : false
2024-05-20 11:20:06 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 11:20:06 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 11:20:06 [restartedMain] INFO  : Application is null : false
2024-05-20 11:20:06 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 11:20:06 [restartedMain] INFO  : Application version is -1: true
2024-05-20 11:20:06 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 11:20:07 [restartedMain] INFO  : The response status is 200
2024-05-20 11:20:07 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 11:20:07 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 11:20:07 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716222007304 with initial instances count: 1
2024-05-20 11:20:07 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 11:20:07 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716222007307, current=UP, previous=STARTING]
2024-05-20 11:20:07 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 11:20:07 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 11:20:07 [restartedMain] INFO  : Updating port to 8081
2024-05-20 11:20:07 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 11:20:07 [restartedMain] INFO  : Started FinalProjectApplication in 5.51 seconds (JVM running for 6.748)
2024-05-20 11:20:14 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:394}] to localhost:27017
2024-05-20 11:20:14 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:393}] to localhost:27017
2024-05-20 11:20:14 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:395}] to localhost:27017
2024-05-20 11:20:14 [nioEventLoopGroup-3-5] ERROR : Operator called default onErrorDropped
org.springframework.dao.DuplicateKeyException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.; nested exception is com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.
	at org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:106)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.potentiallyConvertRuntimeException(ReactiveMongoTemplate.java:2963)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.lambda$translateException$89(ReactiveMongoTemplate.java:2946)
	at reactor.core.publisher.Flux.lambda$onErrorMap$28(Flux.java:7070)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:255)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:258)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:545)
	at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$9(OperationExecutorImpl.java:124)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.operation.CommandOperationHelper.lambda$exceptionTransformingCallback$23(CommandOperationHelper.java:632)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.async.function.RetryingAsyncCallbackSupplier$RetryingCallback.onResult(RetryingAsyncCallbackSupplier.java:109)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$11(MixedBulkWriteOperation.java:464)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:84)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:61)
	at com.mongodb.internal.async.function.LoopState.breakAndCompleteIf(LoopState.java:111)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$10(MixedBulkWriteOperation.java:418)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:82)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:61)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$9(MixedBulkWriteOperation.java:440)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor$2.onResult(DefaultServer.java:276)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.CommandProtocolImpl$1.onResult(CommandProtocolImpl.java:84)
	at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection$1.onResult(DefaultConnectionPool.java:684)
	at com.mongodb.internal.connection.UsageTrackingInternalConnection$2.onResult(UsageTrackingInternalConnection.java:159)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:521)
	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:498)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:821)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:785)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:266)
	at com.mongodb.internal.connection.InternalStreamConnection.readAsync(InternalStreamConnection.java:642)
	at com.mongodb.internal.connection.InternalStreamConnection.access$600(InternalStreamConnection.java:86)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:775)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:760)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
	at com.mongodb.connection.netty.NettyStream.handleReadResponse(NettyStream.java:347)
	at com.mongodb.connection.netty.NettyStream.access$1100(NettyStream.java:105)
	at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:421)
	at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:418)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.
	at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$createSingleWriteRequestMono$24(MongoOperationPublisher.java:490)
	at reactor.core.publisher.Mono.lambda$onErrorMap$30(Mono.java:3797)
	at reactor.core.publisher.Mono.lambda$onErrorResume$32(Mono.java:3887)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	... 67 common frames omitted
2024-05-20 11:21:35 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 11:21:35 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716222095278, current=DOWN, previous=UP]
2024-05-20 11:21:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 11:21:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 11:21:37 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 11:21:40 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 11:21:40 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 11:21:40 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 11:21:46 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 3524 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 11:21:46 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 11:21:46 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 11:21:46 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 11:21:46 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 11:21:46 [restartedMain] INFO  : Finished Spring Data repository scanning in 57 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 11:21:46 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 11:21:46 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:21:46 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:21:46 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:21:47 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@4fbca2fe, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@45ebed2d]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 11:21:47 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 11:21:47 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 11:21:47 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 11:21:47 [cluster-rtt-ClusterId{value='664b789b37b8315c7ea14d3a', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:396}] to localhost:27017
2024-05-20 11:21:47 [cluster-ClusterId{value='664b789b37b8315c7ea14d3a', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:397}] to localhost:27017
2024-05-20 11:21:47 [cluster-ClusterId{value='664b789b37b8315c7ea14d3a', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=44597700}
2024-05-20 11:21:48 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 11:21:48 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 11:21:48 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 11:21:48 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 11:21:48 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 11:21:48 [restartedMain] INFO  : Disable delta property : false
2024-05-20 11:21:48 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 11:21:48 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 11:21:48 [restartedMain] INFO  : Application is null : false
2024-05-20 11:21:48 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 11:21:48 [restartedMain] INFO  : Application version is -1: true
2024-05-20 11:21:48 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 11:21:48 [restartedMain] INFO  : The response status is 200
2024-05-20 11:21:48 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 11:21:48 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 11:21:48 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716222108841 with initial instances count: 2
2024-05-20 11:21:48 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 11:21:48 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716222108843, current=UP, previous=STARTING]
2024-05-20 11:21:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 11:21:48 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 11:21:48 [restartedMain] INFO  : Updating port to 8081
2024-05-20 11:21:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 11:21:49 [restartedMain] INFO  : Started FinalProjectApplication in 3.913 seconds (JVM running for 4.795)
2024-05-20 11:21:52 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:398}] to localhost:27017
2024-05-20 11:21:52 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:399}] to localhost:27017
2024-05-20 11:21:52 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:400}] to localhost:27017
2024-05-20 11:26:31 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 11:26:31 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716222391742, current=DOWN, previous=UP]
2024-05-20 11:26:31 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 11:26:31 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 11:26:33 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 11:26:36 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 11:26:36 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 11:26:36 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 11:26:45 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 25108 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 11:26:45 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 11:26:45 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 11:26:45 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 11:26:45 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 11:26:45 [restartedMain] INFO  : Finished Spring Data repository scanning in 76 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 11:26:46 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 11:26:46 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:26:46 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:26:46 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:26:46 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@13732316, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6914fc96]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 11:26:46 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 11:26:46 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 11:26:46 [cluster-rtt-ClusterId{value='664b79c6e823216b8edd04d4', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:402}] to localhost:27017
2024-05-20 11:26:46 [cluster-ClusterId{value='664b79c6e823216b8edd04d4', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:401}] to localhost:27017
2024-05-20 11:26:46 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 11:26:46 [cluster-ClusterId{value='664b79c6e823216b8edd04d4', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=63794500}
2024-05-20 11:26:47 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 11:26:48 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 11:26:48 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 11:26:48 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 11:26:48 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 11:26:48 [restartedMain] INFO  : Disable delta property : false
2024-05-20 11:26:48 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 11:26:48 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 11:26:48 [restartedMain] INFO  : Application is null : false
2024-05-20 11:26:48 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 11:26:48 [restartedMain] INFO  : Application version is -1: true
2024-05-20 11:26:48 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 11:26:48 [restartedMain] INFO  : The response status is 200
2024-05-20 11:26:48 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 11:26:48 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 11:26:48 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716222408720 with initial instances count: 2
2024-05-20 11:26:48 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 11:26:48 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716222408722, current=UP, previous=STARTING]
2024-05-20 11:26:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 11:26:48 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 11:26:48 [restartedMain] INFO  : Updating port to 8081
2024-05-20 11:26:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 11:26:49 [restartedMain] INFO  : Started FinalProjectApplication in 4.932 seconds (JVM running for 5.954)
2024-05-20 11:26:53 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:403}] to localhost:27017
2024-05-20 11:26:53 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:404}] to localhost:27017
2024-05-20 11:26:53 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:405}] to localhost:27017
2024-05-20 11:31:48 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 11:36:25 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 11:36:25 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716222985403, current=DOWN, previous=UP]
2024-05-20 11:36:25 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 11:36:25 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 11:36:27 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 11:36:30 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 11:36:30 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 11:36:30 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 11:36:36 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 25468 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 11:36:36 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 11:36:36 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 11:36:36 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 11:36:37 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 11:36:37 [restartedMain] INFO  : Finished Spring Data repository scanning in 78 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 11:36:37 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 11:36:37 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:36:37 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:36:37 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:36:38 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@726d1d5a, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7e93b6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 11:36:38 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 11:36:38 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 11:36:38 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 11:36:38 [cluster-rtt-ClusterId{value='664b7c15cea82f0d4e4b2c15', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:407}] to localhost:27017
2024-05-20 11:36:38 [cluster-ClusterId{value='664b7c15cea82f0d4e4b2c15', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:406}] to localhost:27017
2024-05-20 11:36:38 [cluster-ClusterId{value='664b7c15cea82f0d4e4b2c15', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=42248900}
2024-05-20 11:36:38 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 11:36:39 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 11:36:39 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 11:36:39 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 11:36:39 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 11:36:39 [restartedMain] INFO  : Disable delta property : false
2024-05-20 11:36:39 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 11:36:39 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 11:36:39 [restartedMain] INFO  : Application is null : false
2024-05-20 11:36:39 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 11:36:39 [restartedMain] INFO  : Application version is -1: true
2024-05-20 11:36:39 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 11:36:39 [restartedMain] INFO  : The response status is 200
2024-05-20 11:36:39 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 11:36:39 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 11:36:39 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716222999894 with initial instances count: 2
2024-05-20 11:36:39 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 11:36:39 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716222999895, current=UP, previous=STARTING]
2024-05-20 11:36:39 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 11:36:39 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 11:36:39 [restartedMain] INFO  : Updating port to 8081
2024-05-20 11:36:39 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 11:36:40 [restartedMain] INFO  : Started FinalProjectApplication in 4.77 seconds (JVM running for 5.806)
2024-05-20 11:37:05 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:409}] to localhost:27017
2024-05-20 11:37:05 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:408}] to localhost:27017
2024-05-20 11:37:05 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:410}] to localhost:27017
2024-05-20 11:37:05 [nioEventLoopGroup-3-4] ERROR : Operator called default onErrorDropped
org.springframework.dao.DuplicateKeyException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.; nested exception is com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.; nested exception is org.springframework.dao.DuplicateKeyException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.; nested exception is com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.
	at org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:91)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.potentiallyConvertRuntimeException(ReactiveMongoTemplate.java:2963)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.lambda$translateException$89(ReactiveMongoTemplate.java:2946)
	at reactor.core.publisher.Mono.lambda$onErrorMap$31(Mono.java:3811)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:258)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:545)
	at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$9(OperationExecutorImpl.java:124)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.operation.CommandOperationHelper.lambda$exceptionTransformingCallback$23(CommandOperationHelper.java:632)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.async.function.RetryingAsyncCallbackSupplier$RetryingCallback.onResult(RetryingAsyncCallbackSupplier.java:109)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$11(MixedBulkWriteOperation.java:464)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:84)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:61)
	at com.mongodb.internal.async.function.LoopState.breakAndCompleteIf(LoopState.java:111)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$10(MixedBulkWriteOperation.java:418)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:82)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:61)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$9(MixedBulkWriteOperation.java:440)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor$2.onResult(DefaultServer.java:276)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.CommandProtocolImpl$1.onResult(CommandProtocolImpl.java:84)
	at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection$1.onResult(DefaultConnectionPool.java:684)
	at com.mongodb.internal.connection.UsageTrackingInternalConnection$2.onResult(UsageTrackingInternalConnection.java:159)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:521)
	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:498)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:821)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:785)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:266)
	at com.mongodb.internal.connection.InternalStreamConnection.readAsync(InternalStreamConnection.java:642)
	at com.mongodb.internal.connection.InternalStreamConnection.access$600(InternalStreamConnection.java:86)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:775)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:760)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
	at com.mongodb.connection.netty.NettyStream.handleReadResponse(NettyStream.java:347)
	at com.mongodb.connection.netty.NettyStream.access$1100(NettyStream.java:105)
	at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:421)
	at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:418)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.springframework.dao.DuplicateKeyException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.; nested exception is com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.
	at org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:106)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.potentiallyConvertRuntimeException(ReactiveMongoTemplate.java:2963)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.lambda$translateException$89(ReactiveMongoTemplate.java:2946)
	at reactor.core.publisher.Mono.lambda$onErrorMap$31(Mono.java:3811)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	... 77 common frames omitted
Caused by: com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.
	at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$createSingleWriteRequestMono$24(MongoOperationPublisher.java:490)
	at reactor.core.publisher.Mono.lambda$onErrorMap$30(Mono.java:3797)
	at reactor.core.publisher.Mono.lambda$onErrorResume$32(Mono.java:3887)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	... 67 common frames omitted
2024-05-20 11:39:20 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 11:39:20 [Thread-1] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 11:39:20 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716223160617, current=DOWN, previous=UP]
2024-05-20 11:39:20 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 11:39:20 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 11:39:22 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 11:39:25 [Thread-1] INFO  : Unregistering ...
2024-05-20 11:39:25 [Thread-1] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 11:39:25 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 11:39:26 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 25468 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 11:39:26 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 11:39:26 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 11:39:26 [restartedMain] INFO  : Finished Spring Data repository scanning in 70 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 11:39:27 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 11:39:27 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:39:27 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:39:27 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:39:27 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@16ac6f34, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7e93b6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 11:39:27 [cluster-rtt-ClusterId{value='664b7cbfcea82f0d4e4b2c18', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:412}] to localhost:27017
2024-05-20 11:39:27 [cluster-ClusterId{value='664b7cbfcea82f0d4e4b2c18', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:411}] to localhost:27017
2024-05-20 11:39:27 [cluster-ClusterId{value='664b7cbfcea82f0d4e4b2c18', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=7132700}
2024-05-20 11:39:27 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 11:39:27 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 11:39:27 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 11:39:28 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 11:39:29 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 11:39:29 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 11:39:29 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 11:39:29 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 11:39:29 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 11:39:29 [restartedMain] INFO  : Disable delta property : false
2024-05-20 11:39:29 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 11:39:29 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 11:39:29 [restartedMain] INFO  : Application is null : false
2024-05-20 11:39:29 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 11:39:29 [restartedMain] INFO  : Application version is -1: true
2024-05-20 11:39:29 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 11:39:29 [restartedMain] INFO  : The response status is 200
2024-05-20 11:39:29 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 11:39:29 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 11:39:29 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716223169560 with initial instances count: 1
2024-05-20 11:39:29 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 11:39:29 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716223169562, current=UP, previous=STARTING]
2024-05-20 11:39:29 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 11:39:29 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 11:39:29 [restartedMain] INFO  : Updating port to 8081
2024-05-20 11:39:29 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 11:39:30 [restartedMain] INFO  : Started FinalProjectApplication in 4.757 seconds (JVM running for 176.05)
2024-05-20 11:39:30 [Thread-16] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 11:39:30 [Thread-16] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716223170591, current=DOWN, previous=UP]
2024-05-20 11:39:30 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 11:39:30 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 11:39:30 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 11:39:32 [Thread-16] INFO  : Shutting down DiscoveryClient ...
2024-05-20 11:39:35 [Thread-16] INFO  : Unregistering ...
2024-05-20 11:39:35 [Thread-16] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 11:39:35 [Thread-16] INFO  : Completed shut down of DiscoveryClient
2024-05-20 11:39:37 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 25468 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 11:39:37 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 11:39:37 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 11:39:37 [restartedMain] INFO  : Finished Spring Data repository scanning in 73 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 11:39:38 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 11:39:38 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:39:38 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:39:38 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:39:38 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@7155b025, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7e93b6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 11:39:38 [cluster-ClusterId{value='664b7ccacea82f0d4e4b2c19', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:8, serverValue:413}] to localhost:27017
2024-05-20 11:39:38 [cluster-rtt-ClusterId{value='664b7ccacea82f0d4e4b2c19', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:9, serverValue:414}] to localhost:27017
2024-05-20 11:39:38 [cluster-ClusterId{value='664b7ccacea82f0d4e4b2c19', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3835800}
2024-05-20 11:39:38 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 11:39:38 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 11:39:38 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 11:39:39 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 11:39:40 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 11:39:40 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 11:39:40 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 11:39:40 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 11:39:40 [restartedMain] INFO  : Disable delta property : false
2024-05-20 11:39:40 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 11:39:40 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 11:39:40 [restartedMain] INFO  : Application is null : false
2024-05-20 11:39:40 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 11:39:40 [restartedMain] INFO  : Application version is -1: true
2024-05-20 11:39:40 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 11:39:40 [restartedMain] INFO  : The response status is 200
2024-05-20 11:39:40 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 11:39:40 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 11:39:40 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716223180129 with initial instances count: 1
2024-05-20 11:39:40 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 11:39:40 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716223180130, current=UP, previous=STARTING]
2024-05-20 11:39:40 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 11:39:40 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 11:39:40 [restartedMain] INFO  : Updating port to 8081
2024-05-20 11:39:40 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 11:39:40 [restartedMain] INFO  : Started FinalProjectApplication in 4.812 seconds (JVM running for 186.079)
2024-05-20 11:39:40 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 11:42:33 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 11:42:33 [Thread-22] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 11:42:33 [Thread-22] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716223353464, current=DOWN, previous=UP]
2024-05-20 11:42:33 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 11:42:33 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 11:42:35 [Thread-22] INFO  : Shutting down DiscoveryClient ...
2024-05-20 11:42:38 [Thread-22] INFO  : Unregistering ...
2024-05-20 11:42:38 [Thread-22] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 11:42:38 [Thread-22] INFO  : Completed shut down of DiscoveryClient
2024-05-20 11:42:38 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 25468 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 11:42:38 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 11:42:38 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 11:42:39 [restartedMain] INFO  : Finished Spring Data repository scanning in 22 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 11:42:39 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 11:42:39 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:42:39 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:42:39 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:42:39 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@7f394f00, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7e93b6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 11:42:39 [cluster-ClusterId{value='664b7d7fcea82f0d4e4b2c1a', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:10, serverValue:415}] to localhost:27017
2024-05-20 11:42:39 [cluster-ClusterId{value='664b7d7fcea82f0d4e4b2c1a', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1782300}
2024-05-20 11:42:39 [cluster-rtt-ClusterId{value='664b7d7fcea82f0d4e4b2c1a', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:11, serverValue:416}] to localhost:27017
2024-05-20 11:42:39 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 11:42:39 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 11:42:39 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 11:42:39 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 11:42:39 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 11:42:39 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 11:42:39 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 11:42:39 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 11:42:39 [restartedMain] INFO  : Disable delta property : false
2024-05-20 11:42:39 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 11:42:39 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 11:42:39 [restartedMain] INFO  : Application is null : false
2024-05-20 11:42:39 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 11:42:39 [restartedMain] INFO  : Application version is -1: true
2024-05-20 11:42:39 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 11:42:39 [restartedMain] INFO  : The response status is 200
2024-05-20 11:42:39 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 11:42:39 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 11:42:39 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716223359866 with initial instances count: 2
2024-05-20 11:42:39 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 11:42:39 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716223359867, current=UP, previous=STARTING]
2024-05-20 11:42:39 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 11:42:39 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 11:42:39 [restartedMain] INFO  : Updating port to 8081
2024-05-20 11:42:39 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 11:42:40 [restartedMain] INFO  : Started FinalProjectApplication in 1.607 seconds (JVM running for 365.694)
2024-05-20 11:42:40 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 11:42:40 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 11:42:40 [Thread-37] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 11:42:40 [Thread-37] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716223360720, current=DOWN, previous=UP]
2024-05-20 11:42:40 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 11:42:40 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 11:42:42 [Thread-37] INFO  : Shutting down DiscoveryClient ...
2024-05-20 11:42:45 [Thread-37] INFO  : Unregistering ...
2024-05-20 11:42:45 [Thread-37] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 11:42:45 [Thread-37] INFO  : Completed shut down of DiscoveryClient
2024-05-20 11:42:46 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 25468 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 11:42:46 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 11:42:46 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 11:42:46 [restartedMain] INFO  : Finished Spring Data repository scanning in 55 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 11:42:47 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 11:42:47 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:42:47 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:42:47 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:42:47 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@227c4f83, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7e93b6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 11:42:47 [cluster-ClusterId{value='664b7d87cea82f0d4e4b2c1b', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:12, serverValue:417}] to localhost:27017
2024-05-20 11:42:47 [cluster-ClusterId{value='664b7d87cea82f0d4e4b2c1b', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=6883500}
2024-05-20 11:42:47 [cluster-rtt-ClusterId{value='664b7d87cea82f0d4e4b2c1b', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:13, serverValue:418}] to localhost:27017
2024-05-20 11:42:47 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 11:42:47 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 11:42:47 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 11:42:48 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 11:42:48 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 11:42:48 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 11:42:48 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 11:42:48 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 11:42:48 [restartedMain] INFO  : Disable delta property : false
2024-05-20 11:42:48 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 11:42:48 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 11:42:48 [restartedMain] INFO  : Application is null : false
2024-05-20 11:42:48 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 11:42:48 [restartedMain] INFO  : Application version is -1: true
2024-05-20 11:42:48 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 11:42:48 [restartedMain] INFO  : The response status is 200
2024-05-20 11:42:48 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 11:42:48 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 11:42:48 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716223368474 with initial instances count: 2
2024-05-20 11:42:48 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 11:42:48 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716223368474, current=UP, previous=STARTING]
2024-05-20 11:42:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 11:42:48 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 11:42:48 [restartedMain] INFO  : Updating port to 8081
2024-05-20 11:42:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 11:42:48 [restartedMain] INFO  : Started FinalProjectApplication in 2.956 seconds (JVM running for 374.349)
2024-05-20 11:42:48 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 11:45:43 [File Watcher] INFO  : Restarting due to 2 class path changes (0 additions, 2 deletions, 0 modifications)
2024-05-20 11:45:43 [Thread-51] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 11:45:43 [Thread-51] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716223543412, current=DOWN, previous=UP]
2024-05-20 11:45:43 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 11:45:43 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 11:45:45 [Thread-51] INFO  : Shutting down DiscoveryClient ...
2024-05-20 11:45:48 [Thread-51] INFO  : Unregistering ...
2024-05-20 11:45:48 [Thread-51] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 11:45:48 [Thread-51] INFO  : Completed shut down of DiscoveryClient
2024-05-20 11:45:49 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 25468 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 11:45:49 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 11:45:49 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 11:45:49 [restartedMain] INFO  : Finished Spring Data repository scanning in 65 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 11:45:49 [restartedMain] INFO  : BeanFactory id=b4787da9-d99a-3323-9bb1-bc28fe1e1b9a
2024-05-20 11:45:49 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:45:49 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:45:49 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:45:49 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@5c1be0d9] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
2024-05-20 11:45:49 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-20 11:45:50 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@5c1be0d9] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@5c1be0d9] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@5c1be0d9] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 38 common frames omitted
Caused by: java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3137)
	at java.base/java.lang.Class.getDeclaredConstructors(Class.java:2357)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:313)
	... 51 common frames omitted
Caused by: java.lang.ClassNotFoundException: project.infrastructure.adapters.CurrAccAdapter
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:398)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 55 common frames omitted
2024-05-20 11:45:52 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 25468 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 11:45:52 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 11:45:52 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 11:45:52 [restartedMain] INFO  : Finished Spring Data repository scanning in 61 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 11:45:52 [restartedMain] INFO  : BeanFactory id=b4787da9-d99a-3323-9bb1-bc28fe1e1b9a
2024-05-20 11:45:52 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:45:52 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:45:52 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:45:53 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@107f389c] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
2024-05-20 11:45:53 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-20 11:45:53 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@107f389c] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@107f389c] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@107f389c] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 38 common frames omitted
Caused by: java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3137)
	at java.base/java.lang.Class.getDeclaredConstructors(Class.java:2357)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:313)
	... 51 common frames omitted
Caused by: java.lang.ClassNotFoundException: project.infrastructure.adapters.CurrAccAdapter
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:398)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 55 common frames omitted
2024-05-20 11:49:37 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 25468 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 11:49:37 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 11:49:37 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 11:49:37 [restartedMain] ERROR : Application run failed
java.lang.TypeNotPresentException: Type project.domain.model.Account.CurrentAccount not present
	at java.base/sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType(CoreReflectionFactory.java:117)
	at java.base/sun.reflect.generics.visitor.Reifier.visitClassTypeSignature(Reifier.java:125)
	at java.base/sun.reflect.generics.tree.ClassTypeSignature.accept(ClassTypeSignature.java:49)
	at java.base/sun.reflect.generics.visitor.Reifier.reifyTypeArguments(Reifier.java:68)
	at java.base/sun.reflect.generics.visitor.Reifier.visitClassTypeSignature(Reifier.java:138)
	at java.base/sun.reflect.generics.tree.ClassTypeSignature.accept(ClassTypeSignature.java:49)
	at java.base/sun.reflect.generics.repository.ClassRepository.computeSuperInterfaces(ClassRepository.java:117)
	at java.base/sun.reflect.generics.repository.ClassRepository.getSuperInterfaces(ClassRepository.java:95)
	at java.base/java.lang.Class.getGenericInterfaces(Class.java:1137)
	at org.springframework.core.ResolvableType.getInterfaces(ResolvableType.java:507)
	at org.springframework.core.GenericTypeResolver.buildTypeVariableMap(GenericTypeResolver.java:271)
	at org.springframework.core.GenericTypeResolver.getTypeVariableMap(GenericTypeResolver.java:248)
	at org.springframework.data.util.ClassTypeInformation.getTypeVariableMap(ClassTypeInformation.java:120)
	at org.springframework.data.util.ClassTypeInformation.getTypeVariableMap(ClassTypeInformation.java:109)
	at org.springframework.data.util.ClassTypeInformation.<init>(ClassTypeInformation.java:96)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.util.ClassTypeInformation.from(ClassTypeInformation.java:73)
	at org.springframework.data.repository.core.support.AbstractRepositoryMetadata.<init>(AbstractRepositoryMetadata.java:63)
	at org.springframework.data.repository.core.support.DefaultRepositoryMetadata.<init>(DefaultRepositoryMetadata.java:50)
	at org.springframework.data.repository.core.support.AbstractRepositoryMetadata.getMetadata(AbstractRepositoryMetadata.java:78)
	at org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getRepositoryConfigurations(RepositoryConfigurationExtensionSupport.java:104)
	at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:159)
	at org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport.registerBeanDefinitions(RepositoryBeanDefinitionRegistrarSupport.java:106)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromRegistrars$1(ConfigurationClassBeanDefinitionReader.java:396)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromRegistrars(ConfigurationClassBeanDefinitionReader.java:395)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:157)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:129)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:343)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:756)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:572)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.ClassNotFoundException: project.domain.model.Account.CurrentAccount
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:398)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:398)
	at java.base/sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType(CoreReflectionFactory.java:114)
	... 45 common frames omitted
2024-05-20 11:49:40 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 25468 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 11:49:40 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 11:49:41 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 11:49:41 [restartedMain] INFO  : Finished Spring Data repository scanning in 34 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 11:49:41 [restartedMain] INFO  : BeanFactory id=b4787da9-d99a-3323-9bb1-bc28fe1e1b9a
2024-05-20 11:49:41 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:49:41 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:49:41 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:49:41 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@684c73d1] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
2024-05-20 11:49:41 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-20 11:49:41 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@684c73d1] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@684c73d1] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@684c73d1] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 38 common frames omitted
Caused by: java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3137)
	at java.base/java.lang.Class.getDeclaredConstructors(Class.java:2357)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:313)
	... 51 common frames omitted
Caused by: java.lang.ClassNotFoundException: project.infrastructure.adapters.CurrAccAdapter
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:398)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 55 common frames omitted
2024-05-20 11:50:58 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 25468 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 11:50:58 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 11:50:58 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 11:50:58 [restartedMain] ERROR : Application run failed
java.lang.TypeNotPresentException: Type project.domain.model.Account.CurrentAccount not present
	at java.base/sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType(CoreReflectionFactory.java:117)
	at java.base/sun.reflect.generics.visitor.Reifier.visitClassTypeSignature(Reifier.java:125)
	at java.base/sun.reflect.generics.tree.ClassTypeSignature.accept(ClassTypeSignature.java:49)
	at java.base/sun.reflect.generics.visitor.Reifier.reifyTypeArguments(Reifier.java:68)
	at java.base/sun.reflect.generics.visitor.Reifier.visitClassTypeSignature(Reifier.java:138)
	at java.base/sun.reflect.generics.tree.ClassTypeSignature.accept(ClassTypeSignature.java:49)
	at java.base/sun.reflect.generics.repository.ClassRepository.computeSuperInterfaces(ClassRepository.java:117)
	at java.base/sun.reflect.generics.repository.ClassRepository.getSuperInterfaces(ClassRepository.java:95)
	at java.base/java.lang.Class.getGenericInterfaces(Class.java:1137)
	at org.springframework.core.ResolvableType.getInterfaces(ResolvableType.java:507)
	at org.springframework.core.GenericTypeResolver.buildTypeVariableMap(GenericTypeResolver.java:271)
	at org.springframework.core.GenericTypeResolver.getTypeVariableMap(GenericTypeResolver.java:248)
	at org.springframework.data.util.ClassTypeInformation.getTypeVariableMap(ClassTypeInformation.java:120)
	at org.springframework.data.util.ClassTypeInformation.getTypeVariableMap(ClassTypeInformation.java:109)
	at org.springframework.data.util.ClassTypeInformation.<init>(ClassTypeInformation.java:96)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.util.ClassTypeInformation.from(ClassTypeInformation.java:73)
	at org.springframework.data.repository.core.support.AbstractRepositoryMetadata.<init>(AbstractRepositoryMetadata.java:63)
	at org.springframework.data.repository.core.support.DefaultRepositoryMetadata.<init>(DefaultRepositoryMetadata.java:50)
	at org.springframework.data.repository.core.support.AbstractRepositoryMetadata.getMetadata(AbstractRepositoryMetadata.java:78)
	at org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getRepositoryConfigurations(RepositoryConfigurationExtensionSupport.java:104)
	at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:159)
	at org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport.registerBeanDefinitions(RepositoryBeanDefinitionRegistrarSupport.java:106)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromRegistrars$1(ConfigurationClassBeanDefinitionReader.java:396)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromRegistrars(ConfigurationClassBeanDefinitionReader.java:395)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:157)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:129)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:343)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:756)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:572)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.ClassNotFoundException: project.domain.model.Account.CurrentAccount
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:398)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:398)
	at java.base/sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType(CoreReflectionFactory.java:114)
	... 45 common frames omitted
2024-05-20 11:51:01 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 25468 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 11:51:01 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 11:51:01 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 11:51:01 [restartedMain] INFO  : Finished Spring Data repository scanning in 45 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 11:51:02 [restartedMain] INFO  : BeanFactory id=b4787da9-d99a-3323-9bb1-bc28fe1e1b9a
2024-05-20 11:51:02 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:51:02 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:51:02 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:51:02 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1a9c8d63] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
2024-05-20 11:51:02 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-20 11:51:02 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1a9c8d63] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1a9c8d63] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1a9c8d63] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 38 common frames omitted
Caused by: java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3137)
	at java.base/java.lang.Class.getDeclaredConstructors(Class.java:2357)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:313)
	... 51 common frames omitted
Caused by: java.lang.ClassNotFoundException: project.infrastructure.adapters.CurrAccAdapter
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:398)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 55 common frames omitted
2024-05-20 11:51:56 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 25468 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 11:51:56 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 11:51:56 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 11:51:56 [restartedMain] ERROR : Application run failed
java.lang.TypeNotPresentException: Type project.domain.model.Account.CurrentAccount not present
	at java.base/sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType(CoreReflectionFactory.java:117)
	at java.base/sun.reflect.generics.visitor.Reifier.visitClassTypeSignature(Reifier.java:125)
	at java.base/sun.reflect.generics.tree.ClassTypeSignature.accept(ClassTypeSignature.java:49)
	at java.base/sun.reflect.generics.visitor.Reifier.reifyTypeArguments(Reifier.java:68)
	at java.base/sun.reflect.generics.visitor.Reifier.visitClassTypeSignature(Reifier.java:138)
	at java.base/sun.reflect.generics.tree.ClassTypeSignature.accept(ClassTypeSignature.java:49)
	at java.base/sun.reflect.generics.repository.ClassRepository.computeSuperInterfaces(ClassRepository.java:117)
	at java.base/sun.reflect.generics.repository.ClassRepository.getSuperInterfaces(ClassRepository.java:95)
	at java.base/java.lang.Class.getGenericInterfaces(Class.java:1137)
	at org.springframework.core.ResolvableType.getInterfaces(ResolvableType.java:507)
	at org.springframework.core.GenericTypeResolver.buildTypeVariableMap(GenericTypeResolver.java:271)
	at org.springframework.core.GenericTypeResolver.getTypeVariableMap(GenericTypeResolver.java:248)
	at org.springframework.data.util.ClassTypeInformation.getTypeVariableMap(ClassTypeInformation.java:120)
	at org.springframework.data.util.ClassTypeInformation.getTypeVariableMap(ClassTypeInformation.java:109)
	at org.springframework.data.util.ClassTypeInformation.<init>(ClassTypeInformation.java:96)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.util.ClassTypeInformation.from(ClassTypeInformation.java:73)
	at org.springframework.data.repository.core.support.AbstractRepositoryMetadata.<init>(AbstractRepositoryMetadata.java:63)
	at org.springframework.data.repository.core.support.DefaultRepositoryMetadata.<init>(DefaultRepositoryMetadata.java:50)
	at org.springframework.data.repository.core.support.AbstractRepositoryMetadata.getMetadata(AbstractRepositoryMetadata.java:78)
	at org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getRepositoryConfigurations(RepositoryConfigurationExtensionSupport.java:104)
	at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:159)
	at org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport.registerBeanDefinitions(RepositoryBeanDefinitionRegistrarSupport.java:106)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromRegistrars$1(ConfigurationClassBeanDefinitionReader.java:396)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromRegistrars(ConfigurationClassBeanDefinitionReader.java:395)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:157)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:129)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:343)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:756)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:572)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.ClassNotFoundException: project.domain.model.Account.CurrentAccount
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:398)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:398)
	at java.base/sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType(CoreReflectionFactory.java:114)
	... 45 common frames omitted
2024-05-20 11:51:59 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 25468 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 11:51:59 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 11:51:59 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 11:51:59 [restartedMain] INFO  : Finished Spring Data repository scanning in 28 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 11:51:59 [restartedMain] INFO  : BeanFactory id=b4787da9-d99a-3323-9bb1-bc28fe1e1b9a
2024-05-20 11:51:59 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:51:59 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:51:59 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:51:59 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@73483d0e] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
2024-05-20 11:51:59 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-20 11:51:59 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@73483d0e] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@73483d0e] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@73483d0e] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 38 common frames omitted
Caused by: java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3137)
	at java.base/java.lang.Class.getDeclaredConstructors(Class.java:2357)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:313)
	... 51 common frames omitted
Caused by: java.lang.ClassNotFoundException: project.infrastructure.adapters.CurrAccAdapter
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:398)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 55 common frames omitted
2024-05-20 11:56:42 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 15728 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 11:56:42 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 11:56:42 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 11:56:42 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 11:56:43 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 11:56:43 [restartedMain] INFO  : Finished Spring Data repository scanning in 64 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 11:56:43 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 11:56:43 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:56:43 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:56:43 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 11:56:43 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@67fa5778, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@33199f01]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 11:56:43 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 11:56:43 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 11:56:43 [cluster-rtt-ClusterId{value='664b80cb2649446ceb20273d', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:419}] to localhost:27017
2024-05-20 11:56:43 [cluster-ClusterId{value='664b80cb2649446ceb20273d', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:420}] to localhost:27017
2024-05-20 11:56:43 [cluster-ClusterId{value='664b80cb2649446ceb20273d', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=42558300}
2024-05-20 11:56:43 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 11:56:44 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 11:56:44 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 11:56:45 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 11:56:45 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 11:56:45 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 11:56:45 [restartedMain] INFO  : Disable delta property : false
2024-05-20 11:56:45 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 11:56:45 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 11:56:45 [restartedMain] INFO  : Application is null : false
2024-05-20 11:56:45 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 11:56:45 [restartedMain] INFO  : Application version is -1: true
2024-05-20 11:56:45 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 11:56:45 [restartedMain] INFO  : The response status is 200
2024-05-20 11:56:45 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 11:56:45 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 11:56:45 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716224205422 with initial instances count: 1
2024-05-20 11:56:45 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 11:56:45 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716224205424, current=UP, previous=STARTING]
2024-05-20 11:56:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 11:56:45 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 11:56:45 [restartedMain] INFO  : Updating port to 8081
2024-05-20 11:56:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 11:56:45 [restartedMain] INFO  : Started FinalProjectApplication in 3.936 seconds (JVM running for 4.842)
2024-05-20 11:59:05 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:421}] to localhost:27017
2024-05-20 11:59:05 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:422}] to localhost:27017
2024-05-20 11:59:05 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:423}] to localhost:27017
2024-05-20 11:59:05 [nioEventLoopGroup-3-4] ERROR : Operator called default onErrorDropped
org.springframework.dao.DuplicateKeyException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.; nested exception is com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.; nested exception is org.springframework.dao.DuplicateKeyException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.; nested exception is com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.
	at org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:91)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.potentiallyConvertRuntimeException(ReactiveMongoTemplate.java:2963)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.lambda$translateException$89(ReactiveMongoTemplate.java:2946)
	at reactor.core.publisher.Mono.lambda$onErrorMap$31(Mono.java:3811)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:258)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:545)
	at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$9(OperationExecutorImpl.java:124)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.operation.CommandOperationHelper.lambda$exceptionTransformingCallback$23(CommandOperationHelper.java:632)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.async.function.RetryingAsyncCallbackSupplier$RetryingCallback.onResult(RetryingAsyncCallbackSupplier.java:109)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$11(MixedBulkWriteOperation.java:464)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:84)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:61)
	at com.mongodb.internal.async.function.LoopState.breakAndCompleteIf(LoopState.java:111)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$10(MixedBulkWriteOperation.java:418)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:82)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:61)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$9(MixedBulkWriteOperation.java:440)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor$2.onResult(DefaultServer.java:276)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.CommandProtocolImpl$1.onResult(CommandProtocolImpl.java:84)
	at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection$1.onResult(DefaultConnectionPool.java:684)
	at com.mongodb.internal.connection.UsageTrackingInternalConnection$2.onResult(UsageTrackingInternalConnection.java:159)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:521)
	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:498)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:821)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:785)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:266)
	at com.mongodb.internal.connection.InternalStreamConnection.readAsync(InternalStreamConnection.java:642)
	at com.mongodb.internal.connection.InternalStreamConnection.access$600(InternalStreamConnection.java:86)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:775)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:760)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
	at com.mongodb.connection.netty.NettyStream.handleReadResponse(NettyStream.java:347)
	at com.mongodb.connection.netty.NettyStream.access$1100(NettyStream.java:105)
	at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:421)
	at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:418)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.springframework.dao.DuplicateKeyException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.; nested exception is com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.
	at org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:106)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.potentiallyConvertRuntimeException(ReactiveMongoTemplate.java:2963)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.lambda$translateException$89(ReactiveMongoTemplate.java:2946)
	at reactor.core.publisher.Mono.lambda$onErrorMap$31(Mono.java:3811)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	... 77 common frames omitted
Caused by: com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.
	at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$createSingleWriteRequestMono$24(MongoOperationPublisher.java:490)
	at reactor.core.publisher.Mono.lambda$onErrorMap$30(Mono.java:3797)
	at reactor.core.publisher.Mono.lambda$onErrorResume$32(Mono.java:3887)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	... 67 common frames omitted
2024-05-20 12:01:45 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 12:03:45 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 12:03:45 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716224625518, current=DOWN, previous=UP]
2024-05-20 12:03:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 12:03:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 12:03:47 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 12:03:50 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 12:03:50 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 12:03:50 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 12:03:55 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 4756 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 12:03:55 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 12:03:55 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 12:03:55 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 12:03:56 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 12:03:56 [restartedMain] INFO  : Finished Spring Data repository scanning in 144 ms. Found 4 Reactive MongoDB repository interfaces.
2024-05-20 12:03:56 [restartedMain] INFO  : BeanFactory id=7a885a5a-33c7-327d-b7ab-107365d8ff8d
2024-05-20 12:03:56 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:03:56 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:03:56 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:03:56 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@275f064b, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@1edc480e]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 12:03:57 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 12:03:57 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 12:03:57 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 12:03:57 [cluster-ClusterId{value='664b827cf352c735758afb88', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:424}] to localhost:27017
2024-05-20 12:03:57 [cluster-rtt-ClusterId{value='664b827cf352c735758afb88', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:425}] to localhost:27017
2024-05-20 12:03:57 [cluster-ClusterId{value='664b827cf352c735758afb88', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=46598100}
2024-05-20 12:03:57 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 12:03:58 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 12:03:58 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 12:03:58 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 12:03:58 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 12:03:58 [restartedMain] INFO  : Disable delta property : false
2024-05-20 12:03:58 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 12:03:58 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 12:03:58 [restartedMain] INFO  : Application is null : false
2024-05-20 12:03:58 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 12:03:58 [restartedMain] INFO  : Application version is -1: true
2024-05-20 12:03:58 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 12:03:58 [restartedMain] INFO  : The response status is 200
2024-05-20 12:03:58 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 12:03:58 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 12:03:58 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716224638561 with initial instances count: 1
2024-05-20 12:03:58 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 12:03:58 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716224638562, current=UP, previous=STARTING]
2024-05-20 12:03:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 12:03:58 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 12:03:58 [restartedMain] INFO  : Updating port to 8081
2024-05-20 12:03:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 12:03:58 [restartedMain] INFO  : Started FinalProjectApplication in 4.054 seconds (JVM running for 4.923)
2024-05-20 12:04:24 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:427}] to localhost:27017
2024-05-20 12:04:24 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:426}] to localhost:27017
2024-05-20 12:04:24 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:428}] to localhost:27017
2024-05-20 12:04:24 [nioEventLoopGroup-3-4] ERROR : Operator called default onErrorDropped
org.springframework.dao.DuplicateKeyException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.; nested exception is com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.; nested exception is org.springframework.dao.DuplicateKeyException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.; nested exception is com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.
	at org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:91)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.potentiallyConvertRuntimeException(ReactiveMongoTemplate.java:2963)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.lambda$translateException$89(ReactiveMongoTemplate.java:2946)
	at reactor.core.publisher.Mono.lambda$onErrorMap$31(Mono.java:3811)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:258)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:545)
	at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$9(OperationExecutorImpl.java:124)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.operation.CommandOperationHelper.lambda$exceptionTransformingCallback$23(CommandOperationHelper.java:632)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.async.function.RetryingAsyncCallbackSupplier$RetryingCallback.onResult(RetryingAsyncCallbackSupplier.java:109)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$11(MixedBulkWriteOperation.java:464)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:84)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:61)
	at com.mongodb.internal.async.function.LoopState.breakAndCompleteIf(LoopState.java:111)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$10(MixedBulkWriteOperation.java:418)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:82)
	at com.mongodb.internal.async.function.AsyncCallbackLoop$LoopingCallback.onResult(AsyncCallbackLoop.java:61)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$9(MixedBulkWriteOperation.java:440)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor$2.onResult(DefaultServer.java:276)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.CommandProtocolImpl$1.onResult(CommandProtocolImpl.java:84)
	at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection$1.onResult(DefaultConnectionPool.java:684)
	at com.mongodb.internal.connection.UsageTrackingInternalConnection$2.onResult(UsageTrackingInternalConnection.java:159)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:521)
	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:498)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:821)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:785)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:266)
	at com.mongodb.internal.connection.InternalStreamConnection.readAsync(InternalStreamConnection.java:642)
	at com.mongodb.internal.connection.InternalStreamConnection.access$600(InternalStreamConnection.java:86)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:775)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:760)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
	at com.mongodb.connection.netty.NettyStream.handleReadResponse(NettyStream.java:347)
	at com.mongodb.connection.netty.NettyStream.access$1100(NettyStream.java:105)
	at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:421)
	at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:418)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.springframework.dao.DuplicateKeyException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.; nested exception is com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.
	at org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:106)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.potentiallyConvertRuntimeException(ReactiveMongoTemplate.java:2963)
	at org.springframework.data.mongodb.core.ReactiveMongoTemplate.lambda$translateException$89(ReactiveMongoTemplate.java:2946)
	at reactor.core.publisher.Mono.lambda$onErrorMap$31(Mono.java:3811)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	... 77 common frames omitted
Caused by: com.mongodb.MongoWriteException: Write operation error on server localhost:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: BankProducts.legalSigners index: signerNumber dup key: { signerNumber: null }', details={}}.
	at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$createSingleWriteRequestMono$24(MongoOperationPublisher.java:490)
	at reactor.core.publisher.Mono.lambda$onErrorMap$30(Mono.java:3797)
	at reactor.core.publisher.Mono.lambda$onErrorResume$32(Mono.java:3887)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	... 67 common frames omitted
2024-05-20 12:08:58 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 12:11:32 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 12:11:32 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716225092801, current=DOWN, previous=UP]
2024-05-20 12:11:32 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 12:11:32 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 12:11:34 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 12:11:37 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 12:11:37 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 12:11:38 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 12:11:43 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 33264 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 12:11:43 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 12:11:43 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 12:11:43 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 12:11:43 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 12:11:44 [restartedMain] INFO  : Finished Spring Data repository scanning in 55 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 12:11:44 [restartedMain] INFO  : BeanFactory id=a4c1e8b9-a0a5-3fed-b7ed-d6c0b55e070b
2024-05-20 12:11:44 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:11:44 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:11:44 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:11:44 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1798a06a, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@592af100]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 12:11:44 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 12:11:44 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 12:11:44 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 12:11:44 [cluster-ClusterId{value='664b84502fc11e15d0ce85ee', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:430}] to localhost:27017
2024-05-20 12:11:44 [cluster-rtt-ClusterId{value='664b84502fc11e15d0ce85ee', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:429}] to localhost:27017
2024-05-20 12:11:44 [cluster-ClusterId{value='664b84502fc11e15d0ce85ee', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=49038800}
2024-05-20 12:11:45 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 12:11:45 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 12:11:45 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 12:11:45 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 12:11:45 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 12:11:45 [restartedMain] INFO  : Disable delta property : false
2024-05-20 12:11:45 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 12:11:45 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 12:11:45 [restartedMain] INFO  : Application is null : false
2024-05-20 12:11:45 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 12:11:45 [restartedMain] INFO  : Application version is -1: true
2024-05-20 12:11:45 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 12:11:46 [restartedMain] INFO  : The response status is 200
2024-05-20 12:11:46 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 12:11:46 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 12:11:46 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716225106304 with initial instances count: 2
2024-05-20 12:11:46 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 12:11:46 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716225106306, current=UP, previous=STARTING]
2024-05-20 12:11:46 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 12:11:46 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 12:11:46 [restartedMain] INFO  : Updating port to 8081
2024-05-20 12:11:46 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 12:11:46 [restartedMain] INFO  : Started FinalProjectApplication in 3.894 seconds (JVM running for 4.751)
2024-05-20 12:12:06 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:431}] to localhost:27017
2024-05-20 12:12:06 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:432}] to localhost:27017
2024-05-20 12:12:06 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:433}] to localhost:27017
2024-05-20 12:15:03 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 12:15:03 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716225303953, current=DOWN, previous=UP]
2024-05-20 12:15:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 12:15:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 12:15:06 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 12:15:09 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 12:15:09 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 12:15:09 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 12:15:14 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 26592 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 12:15:14 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 12:15:14 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 12:15:14 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 12:15:15 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 12:15:15 [restartedMain] INFO  : Finished Spring Data repository scanning in 57 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 12:15:15 [restartedMain] INFO  : BeanFactory id=a4c1e8b9-a0a5-3fed-b7ed-d6c0b55e070b
2024-05-20 12:15:15 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:15:15 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:15:15 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:15:16 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@792474c4, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5bdacf8c]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 12:15:16 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 12:15:16 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 12:15:16 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 12:15:16 [cluster-rtt-ClusterId{value='664b85237cc2a41c4e9df232', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:435}] to localhost:27017
2024-05-20 12:15:16 [cluster-ClusterId{value='664b85237cc2a41c4e9df232', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:434}] to localhost:27017
2024-05-20 12:15:16 [cluster-ClusterId{value='664b85237cc2a41c4e9df232', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=60857600}
2024-05-20 12:15:16 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 12:15:17 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 12:15:17 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 12:15:17 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 12:15:17 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 12:15:17 [restartedMain] INFO  : Disable delta property : false
2024-05-20 12:15:17 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 12:15:17 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 12:15:17 [restartedMain] INFO  : Application is null : false
2024-05-20 12:15:17 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 12:15:17 [restartedMain] INFO  : Application version is -1: true
2024-05-20 12:15:17 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 12:15:17 [restartedMain] INFO  : The response status is 200
2024-05-20 12:15:17 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 12:15:17 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 12:15:17 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716225317758 with initial instances count: 2
2024-05-20 12:15:17 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 12:15:17 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716225317760, current=UP, previous=STARTING]
2024-05-20 12:15:17 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 12:15:17 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 12:15:17 [restartedMain] INFO  : Updating port to 8081
2024-05-20 12:15:17 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 12:15:18 [restartedMain] INFO  : Started FinalProjectApplication in 4.098 seconds (JVM running for 5.151)
2024-05-20 12:16:56 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:437}] to localhost:27017
2024-05-20 12:16:56 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:436}] to localhost:27017
2024-05-20 12:16:56 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:438}] to localhost:27017
2024-05-20 12:17:06 [nioEventLoopGroup-3-5] ERROR : [93dbf9ac-2]  500 Server Error for HTTP GET "/accounts/all"
java.lang.UnsupportedOperationException: DBRef resolution is not supported!
	at org.springframework.data.mongodb.core.convert.NoOpDbRefResolver.handle(NoOpDbRefResolver.java:71)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler project.application.controller.BankAccountController#getAllBankAccounts() [DispatcherHandler]
	*__checkpoint ⇢ HTTP GET "/accounts/all" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.data.mongodb.core.convert.NoOpDbRefResolver.handle(NoOpDbRefResolver.java:71)
		at org.springframework.data.mongodb.core.convert.NoOpDbRefResolver.bulkFetch(NoOpDbRefResolver.java:67)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.bulkReadRefs(MappingMongoConverter.java:1782)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.bulkReadAndConvertDBRefs(MappingMongoConverter.java:1718)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readCollectionOrArray(MappingMongoConverter.java:1416)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$DefaultConversionContext.convert(MappingMongoConverter.java:2342)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$ConversionContext.convert(MappingMongoConverter.java:2174)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$MongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:1936)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readProperties(MappingMongoConverter.java:638)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.populateProperties(MappingMongoConverter.java:549)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:527)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readDocument(MappingMongoConverter.java:491)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:427)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:423)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:120)
		at org.springframework.data.mongodb.core.ReactiveMongoTemplate$ReadDocumentCallback.doWith(ReactiveMongoTemplate.java:3300)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:376)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:251)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:878)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:803)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:161)
		at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.lambda$recurseCursor$4(BatchCursorFlux.java:94)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:171)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
		at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:549)
		at com.mongodb.internal.operation.AsyncQueryBatchCursor.next(AsyncQueryBatchCursor.java:174)
		at com.mongodb.reactivestreams.client.internal.BatchCursor.lambda$next$0(BatchCursor.java:35)
		at reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:58)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.Mono.subscribeWith(Mono.java:4605)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4318)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.recurseCursor(BatchCursorFlux.java:104)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.lambda$subscribe$0(BatchCursorFlux.java:56)
		at reactor.core.publisher.LambdaMonoSubscriber.onNext(LambdaMonoSubscriber.java:171)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
		at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:549)
		at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$2(OperationExecutorImpl.java:92)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
		at com.mongodb.internal.async.function.RetryingAsyncCallbackSupplier$RetryingCallback.onResult(RetryingAsyncCallbackSupplier.java:114)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
		at com.mongodb.internal.operation.FindOperation$2.onResult(FindOperation.java:792)
		at com.mongodb.internal.operation.CommandOperationHelper.lambda$transformingReadCallback$10(CommandOperationHelper.java:331)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor$2.onResult(DefaultServer.java:276)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.CommandProtocolImpl$1.onResult(CommandProtocolImpl.java:84)
		at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection$1.onResult(DefaultConnectionPool.java:684)
		at com.mongodb.internal.connection.UsageTrackingInternalConnection$2.onResult(UsageTrackingInternalConnection.java:159)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:521)
		at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:498)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:821)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:785)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
		at com.mongodb.connection.netty.NettyStream.handleReadResponse(NettyStream.java:347)
		at com.mongodb.connection.netty.NettyStream.access$1100(NettyStream.java:105)
		at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:421)
		at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:418)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:834)
2024-05-20 12:17:36 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 12:17:36 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716225456901, current=DOWN, previous=UP]
2024-05-20 12:17:36 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 12:17:36 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 12:17:39 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 12:17:42 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 12:17:42 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 12:17:42 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 12:18:08 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 20216 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 12:18:08 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 12:18:08 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 12:18:08 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 12:18:08 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 12:18:08 [restartedMain] INFO  : Finished Spring Data repository scanning in 49 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 12:18:09 [restartedMain] INFO  : BeanFactory id=a4c1e8b9-a0a5-3fed-b7ed-d6c0b55e070b
2024-05-20 12:18:09 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:18:09 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:18:09 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:18:09 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@4b12d77a, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6516bd68]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 12:18:09 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 12:18:09 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 12:18:09 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 12:18:09 [cluster-ClusterId{value='664b85d1509e8704d6d9f239', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:439}] to localhost:27017
2024-05-20 12:18:09 [cluster-rtt-ClusterId{value='664b85d1509e8704d6d9f239', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:440}] to localhost:27017
2024-05-20 12:18:09 [cluster-ClusterId{value='664b85d1509e8704d6d9f239', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=42591900}
2024-05-20 12:18:10 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 12:18:10 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 12:18:10 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 12:18:10 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 12:18:10 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 12:18:10 [restartedMain] INFO  : Disable delta property : false
2024-05-20 12:18:10 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 12:18:10 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 12:18:10 [restartedMain] INFO  : Application is null : false
2024-05-20 12:18:10 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 12:18:10 [restartedMain] INFO  : Application version is -1: true
2024-05-20 12:18:10 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 12:18:11 [restartedMain] INFO  : The response status is 200
2024-05-20 12:18:11 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 12:18:11 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 12:18:11 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716225491037 with initial instances count: 1
2024-05-20 12:18:11 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 12:18:11 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716225491039, current=UP, previous=STARTING]
2024-05-20 12:18:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 12:18:11 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 12:18:11 [restartedMain] INFO  : Updating port to 8081
2024-05-20 12:18:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 12:18:11 [restartedMain] INFO  : Started FinalProjectApplication in 3.689 seconds (JVM running for 4.543)
2024-05-20 12:18:15 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:441}] to localhost:27017
2024-05-20 12:18:15 [nioEventLoopGroup-3-3] ERROR : [c4ad1a0e-1]  500 Server Error for HTTP GET "/accounts/all"
java.lang.UnsupportedOperationException: DBRef resolution is not supported!
	at org.springframework.data.mongodb.core.convert.NoOpDbRefResolver.handle(NoOpDbRefResolver.java:71)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler project.application.controller.BankAccountController#getAllBankAccounts() [DispatcherHandler]
	*__checkpoint ⇢ HTTP GET "/accounts/all" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.data.mongodb.core.convert.NoOpDbRefResolver.handle(NoOpDbRefResolver.java:71)
		at org.springframework.data.mongodb.core.convert.NoOpDbRefResolver.bulkFetch(NoOpDbRefResolver.java:67)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.bulkReadRefs(MappingMongoConverter.java:1782)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.bulkReadAndConvertDBRefs(MappingMongoConverter.java:1718)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readCollectionOrArray(MappingMongoConverter.java:1416)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$DefaultConversionContext.convert(MappingMongoConverter.java:2342)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$ConversionContext.convert(MappingMongoConverter.java:2174)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$MongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:1936)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readProperties(MappingMongoConverter.java:638)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.populateProperties(MappingMongoConverter.java:549)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:527)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readDocument(MappingMongoConverter.java:491)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:427)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:423)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:120)
		at org.springframework.data.mongodb.core.ReactiveMongoTemplate$ReadDocumentCallback.doWith(ReactiveMongoTemplate.java:3300)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:376)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:251)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:878)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:803)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:161)
		at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.lambda$recurseCursor$4(BatchCursorFlux.java:94)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:171)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
		at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:549)
		at com.mongodb.internal.operation.AsyncQueryBatchCursor.next(AsyncQueryBatchCursor.java:174)
		at com.mongodb.reactivestreams.client.internal.BatchCursor.lambda$next$0(BatchCursor.java:35)
		at reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:58)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.Mono.subscribeWith(Mono.java:4605)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4318)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.recurseCursor(BatchCursorFlux.java:104)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.lambda$subscribe$0(BatchCursorFlux.java:56)
		at reactor.core.publisher.LambdaMonoSubscriber.onNext(LambdaMonoSubscriber.java:171)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
		at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:549)
		at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$2(OperationExecutorImpl.java:92)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
		at com.mongodb.internal.async.function.RetryingAsyncCallbackSupplier$RetryingCallback.onResult(RetryingAsyncCallbackSupplier.java:114)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
		at com.mongodb.internal.operation.FindOperation$2.onResult(FindOperation.java:792)
		at com.mongodb.internal.operation.CommandOperationHelper.lambda$transformingReadCallback$10(CommandOperationHelper.java:331)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor$2.onResult(DefaultServer.java:276)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.CommandProtocolImpl$1.onResult(CommandProtocolImpl.java:84)
		at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection$1.onResult(DefaultConnectionPool.java:684)
		at com.mongodb.internal.connection.UsageTrackingInternalConnection$2.onResult(UsageTrackingInternalConnection.java:159)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:521)
		at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:498)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:821)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:785)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
		at com.mongodb.connection.netty.NettyStream.handleReadResponse(NettyStream.java:347)
		at com.mongodb.connection.netty.NettyStream.access$1100(NettyStream.java:105)
		at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:421)
		at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:418)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:834)
2024-05-20 12:22:07 [nioEventLoopGroup-3-3] ERROR : [c4ad1a0e-2]  500 Server Error for HTTP GET "/accounts/all"
java.lang.UnsupportedOperationException: DBRef resolution is not supported!
	at org.springframework.data.mongodb.core.convert.NoOpDbRefResolver.handle(NoOpDbRefResolver.java:71)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler project.application.controller.BankAccountController#getAllBankAccounts() [DispatcherHandler]
	*__checkpoint ⇢ HTTP GET "/accounts/all" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.data.mongodb.core.convert.NoOpDbRefResolver.handle(NoOpDbRefResolver.java:71)
		at org.springframework.data.mongodb.core.convert.NoOpDbRefResolver.bulkFetch(NoOpDbRefResolver.java:67)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.bulkReadRefs(MappingMongoConverter.java:1782)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.bulkReadAndConvertDBRefs(MappingMongoConverter.java:1718)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readCollectionOrArray(MappingMongoConverter.java:1416)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$DefaultConversionContext.convert(MappingMongoConverter.java:2342)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$ConversionContext.convert(MappingMongoConverter.java:2174)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$MongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:1936)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readProperties(MappingMongoConverter.java:638)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.populateProperties(MappingMongoConverter.java:549)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:527)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readDocument(MappingMongoConverter.java:491)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:427)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:423)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:120)
		at org.springframework.data.mongodb.core.ReactiveMongoTemplate$ReadDocumentCallback.doWith(ReactiveMongoTemplate.java:3300)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:376)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:251)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:878)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:803)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:161)
		at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.lambda$recurseCursor$4(BatchCursorFlux.java:94)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:171)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
		at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:549)
		at com.mongodb.internal.operation.AsyncQueryBatchCursor.next(AsyncQueryBatchCursor.java:174)
		at com.mongodb.reactivestreams.client.internal.BatchCursor.lambda$next$0(BatchCursor.java:35)
		at reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:58)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.Mono.subscribeWith(Mono.java:4605)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4318)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.recurseCursor(BatchCursorFlux.java:104)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.lambda$subscribe$0(BatchCursorFlux.java:56)
		at reactor.core.publisher.LambdaMonoSubscriber.onNext(LambdaMonoSubscriber.java:171)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
		at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:549)
		at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$2(OperationExecutorImpl.java:92)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
		at com.mongodb.internal.async.function.RetryingAsyncCallbackSupplier$RetryingCallback.onResult(RetryingAsyncCallbackSupplier.java:114)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
		at com.mongodb.internal.operation.FindOperation$2.onResult(FindOperation.java:792)
		at com.mongodb.internal.operation.CommandOperationHelper.lambda$transformingReadCallback$10(CommandOperationHelper.java:331)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor$2.onResult(DefaultServer.java:276)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.CommandProtocolImpl$1.onResult(CommandProtocolImpl.java:84)
		at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection$1.onResult(DefaultConnectionPool.java:684)
		at com.mongodb.internal.connection.UsageTrackingInternalConnection$2.onResult(UsageTrackingInternalConnection.java:159)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:521)
		at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:498)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:821)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:785)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:266)
		at com.mongodb.internal.connection.InternalStreamConnection.readAsync(InternalStreamConnection.java:642)
		at com.mongodb.internal.connection.InternalStreamConnection.access$600(InternalStreamConnection.java:86)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:775)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:760)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
		at com.mongodb.connection.netty.NettyStream.handleReadResponse(NettyStream.java:347)
		at com.mongodb.connection.netty.NettyStream.access$1100(NettyStream.java:105)
		at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:421)
		at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:418)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:834)
2024-05-20 12:22:12 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 12:22:12 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716225732323, current=DOWN, previous=UP]
2024-05-20 12:22:12 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 12:22:12 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 12:22:14 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 12:22:17 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 12:22:17 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 12:22:17 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 12:22:22 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 32304 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 12:22:22 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 12:22:22 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 12:22:22 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 12:22:22 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 12:22:22 [restartedMain] INFO  : Finished Spring Data repository scanning in 69 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 12:22:22 [restartedMain] INFO  : BeanFactory id=a4c1e8b9-a0a5-3fed-b7ed-d6c0b55e070b
2024-05-20 12:22:23 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:22:23 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:22:23 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:22:23 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@4662c8d6, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@67a0c612]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 12:22:23 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 12:22:23 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 12:22:23 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 12:22:23 [cluster-rtt-ClusterId{value='664b86cf06f8d70d4fcdbb3a', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:443}] to localhost:27017
2024-05-20 12:22:23 [cluster-ClusterId{value='664b86cf06f8d70d4fcdbb3a', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:442}] to localhost:27017
2024-05-20 12:22:23 [cluster-ClusterId{value='664b86cf06f8d70d4fcdbb3a', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=75999600}
2024-05-20 12:22:24 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 12:22:25 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 12:22:25 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 12:22:25 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 12:22:25 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 12:22:25 [restartedMain] INFO  : Disable delta property : false
2024-05-20 12:22:25 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 12:22:25 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 12:22:25 [restartedMain] INFO  : Application is null : false
2024-05-20 12:22:25 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 12:22:25 [restartedMain] INFO  : Application version is -1: true
2024-05-20 12:22:25 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 12:22:26 [restartedMain] INFO  : The response status is 200
2024-05-20 12:22:26 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 12:22:26 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 12:22:26 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716225746196 with initial instances count: 1
2024-05-20 12:22:26 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 12:22:26 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716225746199, current=UP, previous=STARTING]
2024-05-20 12:22:26 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 12:22:26 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 12:22:26 [restartedMain] INFO  : Updating port to 8081
2024-05-20 12:22:26 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 12:22:26 [restartedMain] INFO  : Started FinalProjectApplication in 5.563 seconds (JVM running for 6.707)
2024-05-20 12:22:46 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:444}] to localhost:27017
2024-05-20 12:23:13 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:446}] to localhost:27017
2024-05-20 12:23:13 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:445}] to localhost:27017
2024-05-20 12:27:18 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 12:27:18 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716226038666, current=DOWN, previous=UP]
2024-05-20 12:27:18 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 12:27:18 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 12:27:20 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 12:27:23 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 12:27:23 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 12:27:23 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 12:27:29 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 27440 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 12:27:29 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 12:27:29 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 12:27:29 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 12:27:29 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 12:27:29 [restartedMain] INFO  : Finished Spring Data repository scanning in 52 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 12:27:29 [restartedMain] INFO  : BeanFactory id=a4c1e8b9-a0a5-3fed-b7ed-d6c0b55e070b
2024-05-20 12:27:29 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:27:29 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:27:29 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:27:30 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@2d6be140, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6d7be6b4]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 12:27:30 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 12:27:30 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 12:27:30 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 12:27:30 [cluster-ClusterId{value='664b88022d49aa10f53ce99f', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:447}] to localhost:27017
2024-05-20 12:27:30 [cluster-rtt-ClusterId{value='664b88022d49aa10f53ce99f', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:448}] to localhost:27017
2024-05-20 12:27:30 [cluster-ClusterId{value='664b88022d49aa10f53ce99f', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=42951600}
2024-05-20 12:27:31 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 12:27:31 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 12:27:31 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 12:27:31 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 12:27:31 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 12:27:31 [restartedMain] INFO  : Disable delta property : false
2024-05-20 12:27:31 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 12:27:31 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 12:27:31 [restartedMain] INFO  : Application is null : false
2024-05-20 12:27:31 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 12:27:31 [restartedMain] INFO  : Application version is -1: true
2024-05-20 12:27:31 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 12:27:32 [restartedMain] INFO  : The response status is 200
2024-05-20 12:27:32 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 12:27:32 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 12:27:32 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716226052155 with initial instances count: 1
2024-05-20 12:27:32 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 12:27:32 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716226052157, current=UP, previous=STARTING]
2024-05-20 12:27:32 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 12:27:32 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 12:27:32 [restartedMain] INFO  : Updating port to 8081
2024-05-20 12:27:32 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 12:27:32 [restartedMain] INFO  : Started FinalProjectApplication in 4.168 seconds (JVM running for 5.056)
2024-05-20 12:27:38 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:449}] to localhost:27017
2024-05-20 12:27:45 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:450}] to localhost:27017
2024-05-20 12:27:45 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:451}] to localhost:27017
2024-05-20 12:28:56 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 12:28:56 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716226136918, current=DOWN, previous=UP]
2024-05-20 12:28:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 12:28:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 12:28:59 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 12:29:02 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 12:29:02 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 12:29:02 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 12:29:07 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 34096 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 12:29:07 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 12:29:07 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 12:29:07 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 12:29:07 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 12:29:07 [restartedMain] INFO  : Finished Spring Data repository scanning in 63 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 12:29:07 [restartedMain] INFO  : BeanFactory id=a4c1e8b9-a0a5-3fed-b7ed-d6c0b55e070b
2024-05-20 12:29:08 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:29:08 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:29:08 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:29:08 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@2580b3a6, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3f98a0be]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 12:29:08 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 12:29:08 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 12:29:08 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 12:29:08 [cluster-ClusterId{value='664b88643f7feb562a085915', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:452}] to localhost:27017
2024-05-20 12:29:08 [cluster-rtt-ClusterId{value='664b88643f7feb562a085915', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:453}] to localhost:27017
2024-05-20 12:29:08 [cluster-ClusterId{value='664b88643f7feb562a085915', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=44104100}
2024-05-20 12:29:09 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 12:29:09 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 12:29:09 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 12:29:09 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 12:29:09 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 12:29:09 [restartedMain] INFO  : Disable delta property : false
2024-05-20 12:29:09 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 12:29:09 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 12:29:09 [restartedMain] INFO  : Application is null : false
2024-05-20 12:29:09 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 12:29:09 [restartedMain] INFO  : Application version is -1: true
2024-05-20 12:29:09 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 12:29:10 [restartedMain] INFO  : The response status is 200
2024-05-20 12:29:10 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 12:29:10 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 12:29:10 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716226150055 with initial instances count: 2
2024-05-20 12:29:10 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 12:29:10 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716226150058, current=UP, previous=STARTING]
2024-05-20 12:29:10 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 12:29:10 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 12:29:10 [restartedMain] INFO  : Updating port to 8081
2024-05-20 12:29:10 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 12:29:10 [restartedMain] INFO  : Started FinalProjectApplication in 3.984 seconds (JVM running for 4.847)
2024-05-20 12:29:23 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:455}] to localhost:27017
2024-05-20 12:29:23 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:454}] to localhost:27017
2024-05-20 12:29:23 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:456}] to localhost:27017
2024-05-20 12:31:01 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 12:31:01 [Thread-1] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 12:31:01 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716226261124, current=DOWN, previous=UP]
2024-05-20 12:31:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 12:31:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 12:31:03 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 12:31:06 [Thread-1] INFO  : Unregistering ...
2024-05-20 12:31:06 [Thread-1] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 12:31:06 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 12:31:07 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 34096 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 12:31:07 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 12:31:07 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 12:31:07 [restartedMain] INFO  : Finished Spring Data repository scanning in 60 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 12:31:07 [restartedMain] INFO  : BeanFactory id=46678ab8-6b5f-3155-a5c5-24ec205a338f
2024-05-20 12:31:07 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:31:07 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:31:07 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:31:08 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'project.application.service.BankAccountService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2024-05-20 12:31:08 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-20 12:31:08 [restartedMain] ERROR : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in project.application.controller.BankAccountController required a bean of type 'project.application.service.BankAccountService' that could not be found.


Action:

Consider defining a bean of type 'project.application.service.BankAccountService' in your configuration.

2024-05-20 12:31:10 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 34096 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 12:31:10 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 12:31:10 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 12:31:10 [restartedMain] INFO  : Finished Spring Data repository scanning in 48 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 12:31:10 [restartedMain] INFO  : BeanFactory id=46678ab8-6b5f-3155-a5c5-24ec205a338f
2024-05-20 12:31:10 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:31:10 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:31:10 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:31:10 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'project.application.service.BankAccountService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2024-05-20 12:31:10 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-20 12:31:10 [restartedMain] ERROR : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in project.application.controller.BankAccountController required a bean of type 'project.application.service.BankAccountService' that could not be found.


Action:

Consider defining a bean of type 'project.application.service.BankAccountService' in your configuration.

2024-05-20 12:33:36 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 34096 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 12:33:36 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 12:33:36 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 12:33:36 [restartedMain] INFO  : Finished Spring Data repository scanning in 39 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 12:33:37 [restartedMain] INFO  : BeanFactory id=5ef2e09d-0f29-3a37-a269-6defb3a619bd
2024-05-20 12:33:37 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:33:37 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:33:37 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:33:37 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'project.application.service.BankAccountService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2024-05-20 12:33:37 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-20 12:33:37 [restartedMain] ERROR : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in project.application.controller.BankAccountController required a bean of type 'project.application.service.BankAccountService' that could not be found.


Action:

Consider defining a bean of type 'project.application.service.BankAccountService' in your configuration.

2024-05-20 12:33:40 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 34096 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 12:33:40 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 12:33:40 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 12:33:40 [restartedMain] INFO  : Finished Spring Data repository scanning in 24 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 12:33:40 [restartedMain] INFO  : BeanFactory id=46678ab8-6b5f-3155-a5c5-24ec205a338f
2024-05-20 12:33:40 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:33:40 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:33:40 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:33:40 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'project.application.service.BankAccountService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2024-05-20 12:33:40 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-20 12:33:40 [restartedMain] ERROR : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in project.application.controller.BankAccountController required a bean of type 'project.application.service.BankAccountService' that could not be found.


Action:

Consider defining a bean of type 'project.application.service.BankAccountService' in your configuration.

2024-05-20 12:35:12 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 24544 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 12:35:12 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 12:35:13 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 12:35:13 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 12:35:13 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 12:35:13 [restartedMain] INFO  : Finished Spring Data repository scanning in 53 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 12:35:13 [restartedMain] INFO  : BeanFactory id=a4c1e8b9-a0a5-3fed-b7ed-d6c0b55e070b
2024-05-20 12:35:13 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:35:13 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:35:13 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:35:14 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@5c64e8f6, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5d7ee615]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 12:35:14 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 12:35:14 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 12:35:14 [cluster-ClusterId{value='664b89d2e1ecfe463b0be8f1', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:457}] to localhost:27017
2024-05-20 12:35:14 [cluster-rtt-ClusterId{value='664b89d2e1ecfe463b0be8f1', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:458}] to localhost:27017
2024-05-20 12:35:14 [cluster-ClusterId{value='664b89d2e1ecfe463b0be8f1', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=43921200}
2024-05-20 12:35:14 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 12:35:15 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 12:35:15 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 12:35:15 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 12:35:15 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 12:35:15 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 12:35:15 [restartedMain] INFO  : Disable delta property : false
2024-05-20 12:35:15 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 12:35:15 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 12:35:15 [restartedMain] INFO  : Application is null : false
2024-05-20 12:35:15 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 12:35:15 [restartedMain] INFO  : Application version is -1: true
2024-05-20 12:35:15 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 12:35:16 [restartedMain] INFO  : The response status is 200
2024-05-20 12:35:16 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 12:35:16 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 12:35:16 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716226516516 with initial instances count: 1
2024-05-20 12:35:16 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 12:35:16 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716226516520, current=UP, previous=STARTING]
2024-05-20 12:35:16 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 12:35:16 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 12:35:16 [restartedMain] INFO  : Updating port to 8081
2024-05-20 12:35:16 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 12:35:17 [restartedMain] INFO  : Started FinalProjectApplication in 4.971 seconds (JVM running for 6.263)
2024-05-20 12:35:21 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:459}] to localhost:27017
2024-05-20 12:35:21 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:460}] to localhost:27017
2024-05-20 12:35:21 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:461}] to localhost:27017
2024-05-20 12:37:14 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 12:37:14 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716226634543, current=DOWN, previous=UP]
2024-05-20 12:37:14 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 12:37:14 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 12:37:16 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 12:37:19 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 12:37:19 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 12:37:19 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 12:37:59 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 25480 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 12:37:59 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 12:37:59 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 12:37:59 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 12:38:00 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 12:38:00 [restartedMain] INFO  : Finished Spring Data repository scanning in 56 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 12:38:00 [restartedMain] INFO  : BeanFactory id=a4c1e8b9-a0a5-3fed-b7ed-d6c0b55e070b
2024-05-20 12:38:00 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:38:00 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:38:00 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:38:00 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@68bbabf6, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@56ae47d8]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 12:38:00 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 12:38:00 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 12:38:00 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 12:38:00 [cluster-rtt-ClusterId{value='664b8a783da8fc74e35adc95', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:462}] to localhost:27017
2024-05-20 12:38:00 [cluster-ClusterId{value='664b8a783da8fc74e35adc95', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:463}] to localhost:27017
2024-05-20 12:38:00 [cluster-ClusterId{value='664b8a783da8fc74e35adc95', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=41167700}
2024-05-20 12:38:01 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 12:38:01 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 12:38:01 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 12:38:01 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 12:38:01 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 12:38:01 [restartedMain] INFO  : Disable delta property : false
2024-05-20 12:38:01 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 12:38:01 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 12:38:01 [restartedMain] INFO  : Application is null : false
2024-05-20 12:38:01 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 12:38:01 [restartedMain] INFO  : Application version is -1: true
2024-05-20 12:38:01 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 12:38:02 [restartedMain] INFO  : The response status is 200
2024-05-20 12:38:02 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 12:38:02 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 12:38:02 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716226682298 with initial instances count: 1
2024-05-20 12:38:02 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 12:38:02 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716226682300, current=UP, previous=STARTING]
2024-05-20 12:38:02 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 12:38:02 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 12:38:02 [restartedMain] INFO  : Updating port to 8081
2024-05-20 12:38:02 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 12:38:02 [restartedMain] INFO  : Started FinalProjectApplication in 3.886 seconds (JVM running for 4.769)
2024-05-20 12:41:57 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 12:41:57 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716226917771, current=DOWN, previous=UP]
2024-05-20 12:41:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 12:41:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 12:41:59 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 12:42:02 [DiscoveryClient-0] WARN  : task supervisor shutting down, can't accept the task
2024-05-20 12:42:02 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 12:42:02 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 12:42:02 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 12:42:09 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 6996 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 12:42:09 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 12:42:09 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 12:42:09 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 12:42:10 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 12:42:10 [restartedMain] INFO  : Finished Spring Data repository scanning in 55 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 12:42:10 [restartedMain] INFO  : BeanFactory id=a4c1e8b9-a0a5-3fed-b7ed-d6c0b55e070b
2024-05-20 12:42:10 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:42:10 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:42:10 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:42:10 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3f18ef4c, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@285c162]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 12:42:10 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 12:42:10 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 12:42:10 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 12:42:11 [cluster-rtt-ClusterId{value='664b8b72a79d164e49c8fe39', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:465}] to localhost:27017
2024-05-20 12:42:11 [cluster-ClusterId{value='664b8b72a79d164e49c8fe39', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:464}] to localhost:27017
2024-05-20 12:42:11 [cluster-ClusterId{value='664b8b72a79d164e49c8fe39', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=45932600}
2024-05-20 12:42:11 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 12:42:11 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 12:42:12 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 12:42:12 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 12:42:12 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 12:42:12 [restartedMain] INFO  : Disable delta property : false
2024-05-20 12:42:12 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 12:42:12 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 12:42:12 [restartedMain] INFO  : Application is null : false
2024-05-20 12:42:12 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 12:42:12 [restartedMain] INFO  : Application version is -1: true
2024-05-20 12:42:12 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 12:42:12 [restartedMain] INFO  : The response status is 200
2024-05-20 12:42:12 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 12:42:12 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 12:42:12 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716226932439 with initial instances count: 2
2024-05-20 12:42:12 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 12:42:12 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716226932440, current=UP, previous=STARTING]
2024-05-20 12:42:12 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 12:42:12 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 12:42:12 [restartedMain] INFO  : Updating port to 8081
2024-05-20 12:42:12 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 12:42:12 [restartedMain] INFO  : Started FinalProjectApplication in 4.025 seconds (JVM running for 5.013)
2024-05-20 12:42:16 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:466}] to localhost:27017
2024-05-20 12:42:16 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:467}] to localhost:27017
2024-05-20 12:42:16 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:468}] to localhost:27017
2024-05-20 12:42:30 [nioEventLoopGroup-3-5] ERROR : [2b88eb85-3]  500 Server Error for HTTP GET "/accounts/all"
java.lang.NullPointerException: null
	at project.infrastructure.mapper.GenericMapper.mapToSpecificClass(GenericMapper.java:14)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler project.application.controller.BankAccountController#getAllBankAccounts() [DispatcherHandler]
	*__checkpoint ⇢ HTTP GET "/accounts/all" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at project.infrastructure.mapper.GenericMapper.mapToSpecificClass(GenericMapper.java:14)
		at project.infrastructure.adapters.GenericAccAdapter.lambda$findAll$0(GenericAccAdapter.java:32)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:345)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext(MonoFlatMapMany.java:250)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:431)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:251)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:878)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:803)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:161)
		at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.lambda$recurseCursor$4(BatchCursorFlux.java:94)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:171)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
		at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:549)
		at com.mongodb.internal.operation.AsyncQueryBatchCursor.next(AsyncQueryBatchCursor.java:174)
		at com.mongodb.reactivestreams.client.internal.BatchCursor.lambda$next$0(BatchCursor.java:35)
		at reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:58)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.Mono.subscribeWith(Mono.java:4605)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4318)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.recurseCursor(BatchCursorFlux.java:104)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.lambda$subscribe$0(BatchCursorFlux.java:56)
		at reactor.core.publisher.LambdaMonoSubscriber.onNext(LambdaMonoSubscriber.java:171)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
		at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:549)
		at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$2(OperationExecutorImpl.java:92)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
		at com.mongodb.internal.async.function.RetryingAsyncCallbackSupplier$RetryingCallback.onResult(RetryingAsyncCallbackSupplier.java:114)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
		at com.mongodb.internal.operation.FindOperation$2.onResult(FindOperation.java:792)
		at com.mongodb.internal.operation.CommandOperationHelper.lambda$transformingReadCallback$10(CommandOperationHelper.java:331)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor$2.onResult(DefaultServer.java:276)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.CommandProtocolImpl$1.onResult(CommandProtocolImpl.java:84)
		at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection$1.onResult(DefaultConnectionPool.java:684)
		at com.mongodb.internal.connection.UsageTrackingInternalConnection$2.onResult(UsageTrackingInternalConnection.java:159)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:521)
		at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:498)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:821)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:785)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:266)
		at com.mongodb.internal.connection.InternalStreamConnection.readAsync(InternalStreamConnection.java:642)
		at com.mongodb.internal.connection.InternalStreamConnection.access$600(InternalStreamConnection.java:86)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:775)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:760)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
		at com.mongodb.connection.netty.NettyStream.handleReadResponse(NettyStream.java:347)
		at com.mongodb.connection.netty.NettyStream.access$1100(NettyStream.java:105)
		at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:421)
		at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:418)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:834)
2024-05-20 12:42:54 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 12:42:54 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716226974827, current=DOWN, previous=UP]
2024-05-20 12:42:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 12:42:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 12:42:56 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 12:42:59 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 12:42:59 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 12:42:59 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 12:43:04 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 18112 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 12:43:04 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 12:43:04 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 12:43:04 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 12:43:05 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 12:43:05 [restartedMain] INFO  : Finished Spring Data repository scanning in 51 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 12:43:05 [restartedMain] INFO  : BeanFactory id=a4c1e8b9-a0a5-3fed-b7ed-d6c0b55e070b
2024-05-20 12:43:05 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:43:05 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:43:05 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:43:06 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3a574c41, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@12e00c2]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 12:43:06 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 12:43:06 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 12:43:06 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 12:43:06 [cluster-ClusterId{value='664b8ba96d81061c943872f3', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:470}] to localhost:27017
2024-05-20 12:43:06 [cluster-rtt-ClusterId{value='664b8ba96d81061c943872f3', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:469}] to localhost:27017
2024-05-20 12:43:06 [cluster-ClusterId{value='664b8ba96d81061c943872f3', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=43032400}
2024-05-20 12:43:06 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 12:43:07 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 12:43:07 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 12:43:07 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 12:43:07 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 12:43:07 [restartedMain] INFO  : Disable delta property : false
2024-05-20 12:43:07 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 12:43:07 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 12:43:07 [restartedMain] INFO  : Application is null : false
2024-05-20 12:43:07 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 12:43:07 [restartedMain] INFO  : Application version is -1: true
2024-05-20 12:43:07 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 12:43:07 [restartedMain] INFO  : The response status is 200
2024-05-20 12:43:07 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 12:43:07 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 12:43:07 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716226987554 with initial instances count: 2
2024-05-20 12:43:07 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 12:43:07 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716226987556, current=UP, previous=STARTING]
2024-05-20 12:43:07 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 12:43:07 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 12:43:07 [restartedMain] INFO  : Updating port to 8081
2024-05-20 12:43:07 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 12:43:07 [restartedMain] INFO  : Started FinalProjectApplication in 3.698 seconds (JVM running for 4.563)
2024-05-20 12:43:20 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:471}] to localhost:27017
2024-05-20 12:43:20 [nioEventLoopGroup-3-3] ERROR : [9c2b9626-1]  500 Server Error for HTTP GET "/accounts/all"
java.lang.NullPointerException: null
	at project.infrastructure.mapper.GenericMapper.mapToSpecificClass(GenericMapper.java:14)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler project.application.controller.BankAccountController#getAllBankAccounts() [DispatcherHandler]
	*__checkpoint ⇢ HTTP GET "/accounts/all" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at project.infrastructure.mapper.GenericMapper.mapToSpecificClass(GenericMapper.java:14)
		at project.infrastructure.adapters.GenericAccAdapter.lambda$findAll$0(GenericAccAdapter.java:32)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:345)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext(MonoFlatMapMany.java:250)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:431)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:251)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:878)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:803)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:161)
		at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.lambda$recurseCursor$4(BatchCursorFlux.java:94)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:171)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
		at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:549)
		at com.mongodb.internal.operation.AsyncQueryBatchCursor.next(AsyncQueryBatchCursor.java:174)
		at com.mongodb.reactivestreams.client.internal.BatchCursor.lambda$next$0(BatchCursor.java:35)
		at reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:58)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.Mono.subscribeWith(Mono.java:4605)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4318)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.recurseCursor(BatchCursorFlux.java:104)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.lambda$subscribe$0(BatchCursorFlux.java:56)
		at reactor.core.publisher.LambdaMonoSubscriber.onNext(LambdaMonoSubscriber.java:171)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
		at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:549)
		at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$2(OperationExecutorImpl.java:92)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
		at com.mongodb.internal.async.function.RetryingAsyncCallbackSupplier$RetryingCallback.onResult(RetryingAsyncCallbackSupplier.java:114)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
		at com.mongodb.internal.operation.FindOperation$2.onResult(FindOperation.java:792)
		at com.mongodb.internal.operation.CommandOperationHelper.lambda$transformingReadCallback$10(CommandOperationHelper.java:331)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor$2.onResult(DefaultServer.java:276)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.CommandProtocolImpl$1.onResult(CommandProtocolImpl.java:84)
		at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection$1.onResult(DefaultConnectionPool.java:684)
		at com.mongodb.internal.connection.UsageTrackingInternalConnection$2.onResult(UsageTrackingInternalConnection.java:159)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:521)
		at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:498)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:821)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:785)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:266)
		at com.mongodb.internal.connection.InternalStreamConnection.readAsync(InternalStreamConnection.java:642)
		at com.mongodb.internal.connection.InternalStreamConnection.access$600(InternalStreamConnection.java:86)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:775)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:760)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
		at com.mongodb.connection.netty.NettyStream.handleReadResponse(NettyStream.java:347)
		at com.mongodb.connection.netty.NettyStream.access$1100(NettyStream.java:105)
		at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:421)
		at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:418)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:834)
2024-05-20 12:43:37 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 12:43:37 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716227017321, current=DOWN, previous=UP]
2024-05-20 12:43:37 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 12:43:37 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 12:43:39 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 12:43:42 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 12:43:42 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 12:43:42 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 12:43:46 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 19376 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 12:43:46 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 12:43:47 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 12:43:47 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 12:43:47 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 12:43:47 [restartedMain] INFO  : Finished Spring Data repository scanning in 51 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 12:43:47 [restartedMain] INFO  : BeanFactory id=a4c1e8b9-a0a5-3fed-b7ed-d6c0b55e070b
2024-05-20 12:43:47 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:43:47 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:43:47 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:43:48 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@4c2e7864, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@30ba8732]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 12:43:48 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 12:43:48 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 12:43:48 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 12:43:48 [cluster-ClusterId{value='664b8bd49ca0975d17408fe6', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:472}] to localhost:27017
2024-05-20 12:43:48 [cluster-rtt-ClusterId{value='664b8bd49ca0975d17408fe6', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:473}] to localhost:27017
2024-05-20 12:43:48 [cluster-ClusterId{value='664b8bd49ca0975d17408fe6', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=41884100}
2024-05-20 12:43:48 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 12:43:49 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 12:43:49 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 12:43:49 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 12:43:49 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 12:43:49 [restartedMain] INFO  : Disable delta property : false
2024-05-20 12:43:49 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 12:43:49 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 12:43:49 [restartedMain] INFO  : Application is null : false
2024-05-20 12:43:49 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 12:43:49 [restartedMain] INFO  : Application version is -1: true
2024-05-20 12:43:49 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 12:43:49 [restartedMain] INFO  : The response status is 200
2024-05-20 12:43:49 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 12:43:49 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 12:43:49 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716227029781 with initial instances count: 2
2024-05-20 12:43:49 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 12:43:49 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716227029783, current=UP, previous=STARTING]
2024-05-20 12:43:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 12:43:49 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 12:43:49 [restartedMain] INFO  : Updating port to 8081
2024-05-20 12:43:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 12:43:50 [restartedMain] INFO  : Started FinalProjectApplication in 3.907 seconds (JVM running for 4.763)
2024-05-20 12:43:53 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:474}] to localhost:27017
2024-05-20 12:43:53 [nioEventLoopGroup-3-3] ERROR : [4a62a9fe-1]  500 Server Error for HTTP GET "/accounts/all"
java.lang.NullPointerException: null
	at project.infrastructure.mapper.GenericMapper.mapToSpecificClass(GenericMapper.java:14)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler project.application.controller.BankAccountController#getAllBankAccounts() [DispatcherHandler]
	*__checkpoint ⇢ HTTP GET "/accounts/all" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at project.infrastructure.mapper.GenericMapper.mapToSpecificClass(GenericMapper.java:14)
		at project.infrastructure.adapters.GenericAccAdapter.lambda$findAll$0(GenericAccAdapter.java:32)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:345)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext(MonoFlatMapMany.java:250)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:431)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:251)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:878)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:803)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:161)
		at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.lambda$recurseCursor$4(BatchCursorFlux.java:94)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:171)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
		at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:549)
		at com.mongodb.internal.operation.AsyncQueryBatchCursor.next(AsyncQueryBatchCursor.java:174)
		at com.mongodb.reactivestreams.client.internal.BatchCursor.lambda$next$0(BatchCursor.java:35)
		at reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:58)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.Mono.subscribeWith(Mono.java:4605)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4318)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.recurseCursor(BatchCursorFlux.java:104)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.lambda$subscribe$0(BatchCursorFlux.java:56)
		at reactor.core.publisher.LambdaMonoSubscriber.onNext(LambdaMonoSubscriber.java:171)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
		at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:549)
		at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$2(OperationExecutorImpl.java:92)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
		at com.mongodb.internal.async.function.RetryingAsyncCallbackSupplier$RetryingCallback.onResult(RetryingAsyncCallbackSupplier.java:114)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
		at com.mongodb.internal.operation.FindOperation$2.onResult(FindOperation.java:792)
		at com.mongodb.internal.operation.CommandOperationHelper.lambda$transformingReadCallback$10(CommandOperationHelper.java:331)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor$2.onResult(DefaultServer.java:276)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.CommandProtocolImpl$1.onResult(CommandProtocolImpl.java:84)
		at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection$1.onResult(DefaultConnectionPool.java:684)
		at com.mongodb.internal.connection.UsageTrackingInternalConnection$2.onResult(UsageTrackingInternalConnection.java:159)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:521)
		at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:498)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:821)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:785)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:266)
		at com.mongodb.internal.connection.InternalStreamConnection.readAsync(InternalStreamConnection.java:642)
		at com.mongodb.internal.connection.InternalStreamConnection.access$600(InternalStreamConnection.java:86)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:775)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:760)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
		at com.mongodb.connection.netty.NettyStream.handleReadResponse(NettyStream.java:347)
		at com.mongodb.connection.netty.NettyStream.access$1100(NettyStream.java:105)
		at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:421)
		at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:418)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:834)
2024-05-20 12:44:12 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 12:44:12 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716227052160, current=DOWN, previous=UP]
2024-05-20 12:44:12 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 12:44:12 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 12:44:14 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 12:44:17 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 12:44:17 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 12:44:17 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 12:44:21 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 16800 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 12:44:21 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 12:44:21 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 12:44:21 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 12:44:22 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 12:44:22 [restartedMain] INFO  : Finished Spring Data repository scanning in 52 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 12:44:22 [restartedMain] INFO  : BeanFactory id=a4c1e8b9-a0a5-3fed-b7ed-d6c0b55e070b
2024-05-20 12:44:22 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:44:22 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:44:22 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:44:22 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@6386a334, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@131951cc]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 12:44:22 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 12:44:22 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 12:44:22 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 12:44:22 [cluster-ClusterId{value='664b8bf68ea5b5171d88b4d9', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:476}] to localhost:27017
2024-05-20 12:44:22 [cluster-rtt-ClusterId{value='664b8bf68ea5b5171d88b4d9', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:475}] to localhost:27017
2024-05-20 12:44:22 [cluster-ClusterId{value='664b8bf68ea5b5171d88b4d9', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=43747700}
2024-05-20 12:44:23 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 12:44:23 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 12:44:24 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 12:44:24 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 12:44:24 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 12:44:24 [restartedMain] INFO  : Disable delta property : false
2024-05-20 12:44:24 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 12:44:24 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 12:44:24 [restartedMain] INFO  : Application is null : false
2024-05-20 12:44:24 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 12:44:24 [restartedMain] INFO  : Application version is -1: true
2024-05-20 12:44:24 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 12:44:24 [restartedMain] INFO  : The response status is 200
2024-05-20 12:44:24 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 12:44:24 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 12:44:24 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716227064343 with initial instances count: 2
2024-05-20 12:44:24 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 12:44:24 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716227064344, current=UP, previous=STARTING]
2024-05-20 12:44:24 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 12:44:24 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 12:44:24 [restartedMain] INFO  : Updating port to 8081
2024-05-20 12:44:24 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 12:44:24 [restartedMain] INFO  : Started FinalProjectApplication in 3.786 seconds (JVM running for 4.655)
2024-05-20 12:44:36 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:477}] to localhost:27017
2024-05-20 12:44:55 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 12:44:55 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716227095767, current=DOWN, previous=UP]
2024-05-20 12:44:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 12:44:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 12:44:57 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 12:45:00 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 12:45:00 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 12:45:00 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 12:45:05 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 5708 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 12:45:05 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 12:45:05 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 12:45:05 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 12:45:05 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 12:45:05 [restartedMain] INFO  : Finished Spring Data repository scanning in 51 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 12:45:06 [restartedMain] INFO  : BeanFactory id=a4c1e8b9-a0a5-3fed-b7ed-d6c0b55e070b
2024-05-20 12:45:06 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:45:06 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:45:06 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 12:45:06 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@380c06b2, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2f2a269]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 12:45:06 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 12:45:06 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 12:45:06 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 12:45:06 [cluster-ClusterId{value='664b8c22c833a20a46c2d9b0', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:478}] to localhost:27017
2024-05-20 12:45:06 [cluster-rtt-ClusterId{value='664b8c22c833a20a46c2d9b0', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:479}] to localhost:27017
2024-05-20 12:45:06 [cluster-ClusterId{value='664b8c22c833a20a46c2d9b0', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=43376500}
2024-05-20 12:45:07 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 12:45:07 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 12:45:07 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 12:45:07 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 12:45:07 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 12:45:07 [restartedMain] INFO  : Disable delta property : false
2024-05-20 12:45:07 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 12:45:07 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 12:45:07 [restartedMain] INFO  : Application is null : false
2024-05-20 12:45:07 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 12:45:07 [restartedMain] INFO  : Application version is -1: true
2024-05-20 12:45:07 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 12:45:08 [restartedMain] INFO  : The response status is 200
2024-05-20 12:45:08 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 12:45:08 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 12:45:08 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716227108113 with initial instances count: 2
2024-05-20 12:45:08 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 12:45:08 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716227108115, current=UP, previous=STARTING]
2024-05-20 12:45:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 12:45:08 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 12:45:08 [restartedMain] INFO  : Updating port to 8081
2024-05-20 12:45:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 12:45:08 [restartedMain] INFO  : Started FinalProjectApplication in 3.921 seconds (JVM running for 4.775)
2024-05-20 12:45:11 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:480}] to localhost:27017
2024-05-20 12:45:41 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:481}] to localhost:27017
2024-05-20 12:45:41 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:482}] to localhost:27017
2024-05-20 12:50:07 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 12:55:07 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 13:00:07 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 13:05:07 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 13:10:07 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 13:13:28 [File Watcher] INFO  : Restarting due to 5 class path changes (0 additions, 5 deletions, 0 modifications)
2024-05-20 13:13:28 [Thread-1] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 13:13:28 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716228808866, current=DOWN, previous=UP]
2024-05-20 13:13:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 13:13:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 13:13:31 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 13:13:34 [Thread-1] INFO  : Unregistering ...
2024-05-20 13:13:34 [Thread-1] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 13:13:34 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 13:13:34 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 5708 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 13:13:34 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 13:13:35 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 13:13:35 [restartedMain] INFO  : Finished Spring Data repository scanning in 54 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 13:13:35 [restartedMain] INFO  : BeanFactory id=d3b660b7-c4c6-304e-b00d-dc1a78da0386
2024-05-20 13:13:35 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 13:13:35 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 13:13:35 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 13:13:35 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'domainBAccountService': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [project.application.service.domainService.DomainBAccountService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@5f46dc1]
2024-05-20 13:13:35 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-20 13:13:35 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'domainBAccountService': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [project.application.service.domainService.DomainBAccountService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@5f46dc1]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'domainBAccountService': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [project.application.service.domainService.DomainBAccountService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@5f46dc1]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:298)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 24 common frames omitted
Caused by: java.lang.IllegalStateException: Failed to introspect Class [project.application.service.domainService.DomainBAccountService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@5f46dc1]
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:485)
	at org.springframework.util.ReflectionUtils.doWithLocalMethods(ReflectionUtils.java:321)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:276)
	... 37 common frames omitted
Caused by: java.lang.NoClassDefFoundError: project/domain/ports/BAccountPort
	at java.base/java.lang.Class.getDeclaredMethods0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3166)
	at java.base/java.lang.Class.getDeclaredMethods(Class.java:2309)
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:467)
	... 39 common frames omitted
Caused by: java.lang.ClassNotFoundException: project.domain.ports.BAccountPort
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:398)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 43 common frames omitted
2024-05-20 13:34:37 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 18740 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 13:34:37 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 13:34:37 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 13:34:37 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 13:34:37 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 13:34:37 [restartedMain] INFO  : Finished Spring Data repository scanning in 79 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 13:34:38 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 13:34:38 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 13:34:38 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 13:34:38 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 13:34:39 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@5dae6187, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@4e0b91b6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 13:34:39 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 13:34:39 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 13:34:39 [cluster-rtt-ClusterId{value='664b97bf9e2d09625fbe0953', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:483}] to localhost:27017
2024-05-20 13:34:39 [cluster-ClusterId{value='664b97bf9e2d09625fbe0953', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:484}] to localhost:27017
2024-05-20 13:34:39 [cluster-ClusterId{value='664b97bf9e2d09625fbe0953', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=71265300}
2024-05-20 13:34:39 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 13:34:40 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 13:34:40 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 13:34:40 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 13:34:40 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 13:34:40 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 13:34:40 [restartedMain] INFO  : Disable delta property : false
2024-05-20 13:34:40 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 13:34:40 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 13:34:40 [restartedMain] INFO  : Application is null : false
2024-05-20 13:34:40 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 13:34:40 [restartedMain] INFO  : Application version is -1: true
2024-05-20 13:34:40 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 13:34:41 [restartedMain] INFO  : The response status is 200
2024-05-20 13:34:41 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 13:34:41 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 13:34:41 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716230081220 with initial instances count: 1
2024-05-20 13:34:41 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 13:34:41 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716230081223, current=UP, previous=STARTING]
2024-05-20 13:34:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 13:34:41 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 13:34:41 [restartedMain] INFO  : Updating port to 8081
2024-05-20 13:34:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 13:34:41 [restartedMain] INFO  : Started FinalProjectApplication in 5.702 seconds (JVM running for 6.877)
2024-05-20 13:39:40 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 13:44:40 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 13:52:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 13:55:48 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 13:55:48 [Thread-1] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 13:55:48 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716231348185, current=DOWN, previous=UP]
2024-05-20 13:55:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 13:55:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 13:55:50 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 13:55:53 [Thread-1] INFO  : Unregistering ...
2024-05-20 13:55:53 [Thread-1] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 13:55:53 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 13:55:53 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 18740 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 13:55:53 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 13:55:53 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 13:55:53 [restartedMain] INFO  : Finished Spring Data repository scanning in 33 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 13:55:54 [restartedMain] INFO  : BeanFactory id=01a8c265-dcd5-39e9-be4b-747f2d55bea1
2024-05-20 13:55:54 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 13:55:54 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 13:55:54 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 13:55:54 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'project.application.service.BankAccountService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2024-05-20 13:55:54 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-20 13:55:54 [restartedMain] ERROR : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in project.application.controller.BankAccountController required a bean of type 'project.application.service.BankAccountService' that could not be found.


Action:

Consider defining a bean of type 'project.application.service.BankAccountService' in your configuration.

2024-05-20 14:01:31 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 29224 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 14:01:31 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 14:01:31 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 14:01:31 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 14:01:31 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 14:01:31 [restartedMain] INFO  : Finished Spring Data repository scanning in 61 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 14:01:31 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 14:01:31 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:01:31 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:01:31 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:01:32 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@59c4772a, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@c134f87]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 14:01:32 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 14:01:32 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 14:01:32 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 14:01:32 [cluster-ClusterId{value='664b9e0c24675a7acd8166c6', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:486}] to localhost:27017
2024-05-20 14:01:32 [cluster-rtt-ClusterId{value='664b9e0c24675a7acd8166c6', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:487}] to localhost:27017
2024-05-20 14:01:32 [cluster-ClusterId{value='664b9e0c24675a7acd8166c6', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=44695500}
2024-05-20 14:01:33 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 14:01:33 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 14:01:33 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 14:01:33 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 14:01:33 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 14:01:33 [restartedMain] INFO  : Disable delta property : false
2024-05-20 14:01:33 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 14:01:33 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 14:01:33 [restartedMain] INFO  : Application is null : false
2024-05-20 14:01:33 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 14:01:33 [restartedMain] INFO  : Application version is -1: true
2024-05-20 14:01:33 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 14:01:33 [restartedMain] INFO  : The response status is 200
2024-05-20 14:01:33 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 14:01:33 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 14:01:33 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716231693885 with initial instances count: 1
2024-05-20 14:01:33 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 14:01:33 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716231693887, current=UP, previous=STARTING]
2024-05-20 14:01:33 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 14:01:33 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 14:01:33 [restartedMain] INFO  : Updating port to 8081
2024-05-20 14:01:33 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 14:01:34 [restartedMain] INFO  : Started FinalProjectApplication in 4.018 seconds (JVM running for 4.907)
2024-05-20 14:03:40 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 14:03:40 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716231820590, current=DOWN, previous=UP]
2024-05-20 14:03:40 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 14:03:40 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 14:03:42 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 14:03:45 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 14:03:45 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 14:03:45 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 14:03:51 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 17628 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 14:03:51 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 14:03:51 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 14:03:51 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 14:03:51 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 14:03:51 [restartedMain] INFO  : Finished Spring Data repository scanning in 65 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 14:03:52 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 14:03:52 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:03:52 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:03:52 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:03:52 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1a43d5b7, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@4179a857]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 14:03:52 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 14:03:52 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 14:03:52 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 14:03:52 [cluster-ClusterId{value='664b9e9843696928b96aa891', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:489}] to localhost:27017
2024-05-20 14:03:52 [cluster-rtt-ClusterId{value='664b9e9843696928b96aa891', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:488}] to localhost:27017
2024-05-20 14:03:52 [cluster-ClusterId{value='664b9e9843696928b96aa891', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=42239400}
2024-05-20 14:03:53 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 14:03:53 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 14:03:53 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 14:03:53 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 14:03:53 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 14:03:53 [restartedMain] INFO  : Disable delta property : false
2024-05-20 14:03:53 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 14:03:53 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 14:03:53 [restartedMain] INFO  : Application is null : false
2024-05-20 14:03:53 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 14:03:53 [restartedMain] INFO  : Application version is -1: true
2024-05-20 14:03:53 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 14:03:54 [restartedMain] INFO  : The response status is 200
2024-05-20 14:03:54 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 14:03:54 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 14:03:54 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716231834095 with initial instances count: 1
2024-05-20 14:03:54 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 14:03:54 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716231834097, current=UP, previous=STARTING]
2024-05-20 14:03:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 14:03:54 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 14:03:54 [restartedMain] INFO  : Updating port to 8081
2024-05-20 14:03:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 14:03:54 [restartedMain] INFO  : Started FinalProjectApplication in 4.282 seconds (JVM running for 5.396)
2024-05-20 14:05:05 [reactor-http-nio-3] ERROR : [e18ea9a5-1]  500 Server Error for HTTP PUT "/accounts/update/6270341714549800"
java.lang.NullPointerException: null
	at project.infrastructure.factory.BARepoFactory.getAdapter(BARepoFactory.java:23)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ HTTP PUT "/accounts/update/6270341714549800" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at project.infrastructure.factory.BARepoFactory.getAdapter(BARepoFactory.java:23)
		at project.application.service.domainService.DomainBAccountService.setStrategy(DomainBAccountService.java:38)
		at project.application.service.domainService.DomainBAccountService.updateBankAccount(DomainBAccountService.java:92)
		at project.application.controller.BankAccountController.updateBankAccount(BankAccountController.java:51)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:145)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:258)
		at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:347)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:101)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:439)
		at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:656)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:276)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:834)
2024-05-20 14:08:53 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 14:09:31 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 14:09:31 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716232171824, current=DOWN, previous=UP]
2024-05-20 14:09:31 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 14:09:31 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 14:09:33 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 14:09:36 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 14:09:36 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 14:09:36 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 14:09:41 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 28440 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 14:09:41 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 14:09:41 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 14:09:41 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 14:09:42 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 14:09:42 [restartedMain] INFO  : Finished Spring Data repository scanning in 60 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 14:09:42 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 14:09:42 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:09:42 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:09:42 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:09:43 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@51e2442e, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@71e4b12d]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 14:09:43 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 14:09:43 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 14:09:43 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 14:09:43 [cluster-ClusterId{value='664b9ff6a6466a677dcbb8cb', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:490}] to localhost:27017
2024-05-20 14:09:43 [cluster-rtt-ClusterId{value='664b9ff6a6466a677dcbb8cb', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:491}] to localhost:27017
2024-05-20 14:09:43 [cluster-ClusterId{value='664b9ff6a6466a677dcbb8cb', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=45282700}
2024-05-20 14:09:43 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 14:09:44 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 14:09:44 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 14:09:44 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 14:09:44 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 14:09:44 [restartedMain] INFO  : Disable delta property : false
2024-05-20 14:09:44 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 14:09:44 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 14:09:44 [restartedMain] INFO  : Application is null : false
2024-05-20 14:09:44 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 14:09:44 [restartedMain] INFO  : Application version is -1: true
2024-05-20 14:09:44 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 14:09:44 [restartedMain] INFO  : The response status is 200
2024-05-20 14:09:44 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 14:09:44 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 14:09:44 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716232184735 with initial instances count: 2
2024-05-20 14:09:44 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 14:09:44 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716232184737, current=UP, previous=STARTING]
2024-05-20 14:09:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 14:09:44 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 14:09:44 [restartedMain] INFO  : Updating port to 8081
2024-05-20 14:09:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 14:09:45 [restartedMain] INFO  : Started FinalProjectApplication in 4.021 seconds (JVM running for 4.911)
2024-05-20 14:09:50 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:493}] to localhost:27017
2024-05-20 14:09:50 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:492}] to localhost:27017
2024-05-20 14:09:50 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:494}] to localhost:27017
2024-05-20 14:13:06 [File Watcher] INFO  : Restarting due to 2 class path changes (0 additions, 2 deletions, 0 modifications)
2024-05-20 14:13:06 [Thread-1] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 14:13:06 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716232386243, current=DOWN, previous=UP]
2024-05-20 14:13:06 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 14:13:06 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 14:13:08 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 14:13:11 [Thread-1] INFO  : Unregistering ...
2024-05-20 14:13:11 [Thread-1] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 14:13:11 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 14:13:11 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 28440 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 14:13:11 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 14:13:11 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 14:13:11 [restartedMain] INFO  : Finished Spring Data repository scanning in 35 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 14:13:12 [restartedMain] INFO  : BeanFactory id=4ff0e5e2-1ac9-3da8-92ec-1e7a4b2e9977
2024-05-20 14:13:12 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:13:12 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:13:12 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:13:12 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1e3b3fe6] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/SavingsAccAdapter
2024-05-20 14:13:12 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-20 14:13:12 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1e3b3fe6] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/SavingsAccAdapter
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1e3b3fe6] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/SavingsAccAdapter
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1e3b3fe6] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/SavingsAccAdapter
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 38 common frames omitted
Caused by: java.lang.NoClassDefFoundError: project/infrastructure/adapters/SavingsAccAdapter
	at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3137)
	at java.base/java.lang.Class.getDeclaredConstructors(Class.java:2357)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:313)
	... 51 common frames omitted
Caused by: java.lang.ClassNotFoundException: project.infrastructure.adapters.SavingsAccAdapter
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:398)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 55 common frames omitted
2024-05-20 14:13:13 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 28440 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 14:13:13 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 14:13:14 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 14:13:14 [restartedMain] INFO  : Finished Spring Data repository scanning in 37 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 14:13:14 [restartedMain] INFO  : BeanFactory id=4ff0e5e2-1ac9-3da8-92ec-1e7a4b2e9977
2024-05-20 14:13:14 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:13:14 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:13:14 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:13:14 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@6674d33a] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/SavingsAccAdapter
2024-05-20 14:13:14 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-20 14:13:14 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@6674d33a] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/SavingsAccAdapter
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@6674d33a] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/SavingsAccAdapter
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@6674d33a] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/SavingsAccAdapter
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 38 common frames omitted
Caused by: java.lang.NoClassDefFoundError: project/infrastructure/adapters/SavingsAccAdapter
	at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3137)
	at java.base/java.lang.Class.getDeclaredConstructors(Class.java:2357)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:313)
	... 51 common frames omitted
Caused by: java.lang.ClassNotFoundException: project.infrastructure.adapters.SavingsAccAdapter
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:398)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 55 common frames omitted
2024-05-20 14:17:08 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 28440 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 14:17:08 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 14:17:08 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 14:17:08 [restartedMain] INFO  : Finished Spring Data repository scanning in 21 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 14:17:08 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 14:17:08 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:17:08 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:17:08 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:17:08 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3779637c, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@71e4b12d]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 14:17:08 [cluster-ClusterId{value='664ba1b4a6466a677dcbb8cd', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:496}] to localhost:27017
2024-05-20 14:17:08 [cluster-rtt-ClusterId{value='664ba1b4a6466a677dcbb8cd', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:495}] to localhost:27017
2024-05-20 14:17:08 [cluster-ClusterId{value='664ba1b4a6466a677dcbb8cd', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2471100}
2024-05-20 14:17:08 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 14:17:09 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 14:17:09 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 14:17:09 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'BARepoFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\factory\BARepoFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'savingsAccAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\adapters\SavingsAccAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsRepo' defined in project.infrastructure.adapters.MongoRepo.SavingsRepo defined in @EnableReactiveMongoRepositories declared on FinalProjectApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.updateByAccountNumber(java.lang.String,project.domain.model.Account.SavingsAccount); Reason: No property 'updateByAccountNumber' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'updateByAccountNumber' found for type 'SavingsAccount'
2024-05-20 14:17:11 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-20 14:17:11 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'BARepoFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\factory\BARepoFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'savingsAccAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\adapters\SavingsAccAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsRepo' defined in project.infrastructure.adapters.MongoRepo.SavingsRepo defined in @EnableReactiveMongoRepositories declared on FinalProjectApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.updateByAccountNumber(java.lang.String,project.domain.model.Account.SavingsAccount); Reason: No property 'updateByAccountNumber' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'updateByAccountNumber' found for type 'SavingsAccount'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'BARepoFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\factory\BARepoFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'savingsAccAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\adapters\SavingsAccAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsRepo' defined in project.infrastructure.adapters.MongoRepo.SavingsRepo defined in @EnableReactiveMongoRepositories declared on FinalProjectApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.updateByAccountNumber(java.lang.String,project.domain.model.Account.SavingsAccount); Reason: No property 'updateByAccountNumber' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'updateByAccountNumber' found for type 'SavingsAccount'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'BARepoFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\factory\BARepoFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'savingsAccAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\adapters\SavingsAccAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsRepo' defined in project.infrastructure.adapters.MongoRepo.SavingsRepo defined in @EnableReactiveMongoRepositories declared on FinalProjectApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.updateByAccountNumber(java.lang.String,project.domain.model.Account.SavingsAccount); Reason: No property 'updateByAccountNumber' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'updateByAccountNumber' found for type 'SavingsAccount'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 38 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'savingsAccAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\adapters\SavingsAccAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsRepo' defined in project.infrastructure.adapters.MongoRepo.SavingsRepo defined in @EnableReactiveMongoRepositories declared on FinalProjectApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.updateByAccountNumber(java.lang.String,project.domain.model.Account.SavingsAccount); Reason: No property 'updateByAccountNumber' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'updateByAccountNumber' found for type 'SavingsAccount'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 52 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsRepo' defined in project.infrastructure.adapters.MongoRepo.SavingsRepo defined in @EnableReactiveMongoRepositories declared on FinalProjectApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.updateByAccountNumber(java.lang.String,project.domain.model.Account.SavingsAccount); Reason: No property 'updateByAccountNumber' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'updateByAccountNumber' found for type 'SavingsAccount'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 66 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.updateByAccountNumber(java.lang.String,project.domain.model.Account.SavingsAccount); Reason: No property 'updateByAccountNumber' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'updateByAccountNumber' found for type 'SavingsAccount'
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:107)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:95)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1054)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:97)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:87)
	at java.base/java.util.Optional.map(Optional.java:265)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:87)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:365)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.mongodb.repository.support.ReactiveMongoRepositoryFactoryBean.afterPropertiesSet(ReactiveMongoRepositoryFactoryBean.java:133)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 77 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property 'updateByAccountNumber' found for type 'SavingsAccount'
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:91)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:438)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:414)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:367)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:349)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:332)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:250)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:251)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:384)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:385)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:93)
	at org.springframework.data.mongodb.repository.query.ReactivePartTreeMongoQuery.<init>(ReactivePartTreeMongoQuery.java:66)
	at org.springframework.data.mongodb.repository.support.ReactiveMongoRepositoryFactory$MongoQueryLookupStrategy.resolveQuery(ReactiveMongoRepositoryFactory.java:206)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:103)
	... 99 common frames omitted
2024-05-20 14:21:00 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 34728 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 14:21:00 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 14:21:00 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 14:21:00 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 14:21:01 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 14:21:01 [restartedMain] INFO  : Finished Spring Data repository scanning in 76 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 14:21:01 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 14:21:02 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:21:02 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:21:02 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:21:02 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@2cb06645, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@9bcbf86]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 14:21:02 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 14:21:02 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 14:21:02 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 14:21:02 [cluster-rtt-ClusterId{value='664ba29e0d36562ed562059d', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:497}] to localhost:27017
2024-05-20 14:21:02 [cluster-ClusterId{value='664ba29e0d36562ed562059d', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:498}] to localhost:27017
2024-05-20 14:21:02 [cluster-ClusterId{value='664ba29e0d36562ed562059d', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=55412600}
2024-05-20 14:21:02 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'BARepoFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\factory\BARepoFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'savingsAccAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\adapters\SavingsAccAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsRepo' defined in project.infrastructure.adapters.MongoRepo.SavingsRepo defined in @EnableReactiveMongoRepositories declared on FinalProjectApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.updateByAccountNumber(java.lang.String,project.domain.model.Account.SavingsAccount); Reason: No property 'updateByAccountNumber' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'updateByAccountNumber' found for type 'SavingsAccount'
2024-05-20 14:21:05 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-20 14:21:05 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'BARepoFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\factory\BARepoFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'savingsAccAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\adapters\SavingsAccAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsRepo' defined in project.infrastructure.adapters.MongoRepo.SavingsRepo defined in @EnableReactiveMongoRepositories declared on FinalProjectApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.updateByAccountNumber(java.lang.String,project.domain.model.Account.SavingsAccount); Reason: No property 'updateByAccountNumber' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'updateByAccountNumber' found for type 'SavingsAccount'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'BARepoFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\factory\BARepoFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'savingsAccAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\adapters\SavingsAccAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsRepo' defined in project.infrastructure.adapters.MongoRepo.SavingsRepo defined in @EnableReactiveMongoRepositories declared on FinalProjectApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.updateByAccountNumber(java.lang.String,project.domain.model.Account.SavingsAccount); Reason: No property 'updateByAccountNumber' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'updateByAccountNumber' found for type 'SavingsAccount'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'BARepoFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\factory\BARepoFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'savingsAccAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\adapters\SavingsAccAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsRepo' defined in project.infrastructure.adapters.MongoRepo.SavingsRepo defined in @EnableReactiveMongoRepositories declared on FinalProjectApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.updateByAccountNumber(java.lang.String,project.domain.model.Account.SavingsAccount); Reason: No property 'updateByAccountNumber' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'updateByAccountNumber' found for type 'SavingsAccount'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 38 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'savingsAccAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\adapters\SavingsAccAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsRepo' defined in project.infrastructure.adapters.MongoRepo.SavingsRepo defined in @EnableReactiveMongoRepositories declared on FinalProjectApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.updateByAccountNumber(java.lang.String,project.domain.model.Account.SavingsAccount); Reason: No property 'updateByAccountNumber' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'updateByAccountNumber' found for type 'SavingsAccount'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 52 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsRepo' defined in project.infrastructure.adapters.MongoRepo.SavingsRepo defined in @EnableReactiveMongoRepositories declared on FinalProjectApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.updateByAccountNumber(java.lang.String,project.domain.model.Account.SavingsAccount); Reason: No property 'updateByAccountNumber' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'updateByAccountNumber' found for type 'SavingsAccount'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 66 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract reactor.core.publisher.Mono project.infrastructure.adapters.MongoRepo.SavingsRepo.updateByAccountNumber(java.lang.String,project.domain.model.Account.SavingsAccount); Reason: No property 'updateByAccountNumber' found for type 'SavingsAccount'; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property 'updateByAccountNumber' found for type 'SavingsAccount'
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:107)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:95)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1054)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:97)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:87)
	at java.base/java.util.Optional.map(Optional.java:265)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:87)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:365)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.mongodb.repository.support.ReactiveMongoRepositoryFactoryBean.afterPropertiesSet(ReactiveMongoRepositoryFactoryBean.java:133)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 77 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property 'updateByAccountNumber' found for type 'SavingsAccount'
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:91)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:438)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:414)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:367)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:349)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:332)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:250)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:251)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:384)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:385)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:93)
	at org.springframework.data.mongodb.repository.query.ReactivePartTreeMongoQuery.<init>(ReactivePartTreeMongoQuery.java:66)
	at org.springframework.data.mongodb.repository.support.ReactiveMongoRepositoryFactory$MongoQueryLookupStrategy.resolveQuery(ReactiveMongoRepositoryFactory.java:206)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:103)
	... 99 common frames omitted
2024-05-20 14:22:01 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 17864 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 14:22:01 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 14:22:01 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 14:22:01 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 14:22:01 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 14:22:01 [restartedMain] INFO  : Finished Spring Data repository scanning in 56 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 14:22:02 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 14:22:02 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:22:02 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:22:02 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:22:02 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@23616083, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@116366ae]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 14:22:02 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 14:22:02 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 14:22:02 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 14:22:02 [cluster-ClusterId{value='664ba2da01ec8724010697f7', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:499}] to localhost:27017
2024-05-20 14:22:02 [cluster-rtt-ClusterId{value='664ba2da01ec8724010697f7', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:500}] to localhost:27017
2024-05-20 14:22:02 [cluster-ClusterId{value='664ba2da01ec8724010697f7', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=39033200}
2024-05-20 14:22:03 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 14:22:03 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 14:22:03 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 14:22:03 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 14:22:03 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 14:22:03 [restartedMain] INFO  : Disable delta property : false
2024-05-20 14:22:03 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 14:22:03 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 14:22:03 [restartedMain] INFO  : Application is null : false
2024-05-20 14:22:03 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 14:22:03 [restartedMain] INFO  : Application version is -1: true
2024-05-20 14:22:03 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 14:22:04 [restartedMain] INFO  : The response status is 200
2024-05-20 14:22:04 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 14:22:04 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 14:22:04 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716232924058 with initial instances count: 1
2024-05-20 14:22:04 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 14:22:04 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716232924061, current=UP, previous=STARTING]
2024-05-20 14:22:04 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 14:22:04 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 14:22:04 [restartedMain] INFO  : Updating port to 8081
2024-05-20 14:22:04 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 14:22:04 [restartedMain] INFO  : Started FinalProjectApplication in 3.748 seconds (JVM running for 4.584)
2024-05-20 14:22:37 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:502}] to localhost:27017
2024-05-20 14:22:37 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:501}] to localhost:27017
2024-05-20 14:22:37 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:503}] to localhost:27017
2024-05-20 14:50:23 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 14:50:23 [Thread-1] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 14:50:23 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716234623520, current=DOWN, previous=UP]
2024-05-20 14:50:23 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 14:50:23 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 14:50:25 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 14:50:28 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 14:50:28 [DiscoveryClient-0] WARN  : task supervisor shutting down, can't accept the task
2024-05-20 14:50:28 [Thread-1] INFO  : Unregistering ...
2024-05-20 14:50:28 [Thread-1] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 14:50:28 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 14:50:29 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 17864 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 14:50:29 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 14:50:29 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 14:50:29 [restartedMain] INFO  : Finished Spring Data repository scanning in 29 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 14:50:29 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 14:50:29 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:50:29 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:50:29 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:50:29 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@4b4e468e, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@116366ae]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 14:50:29 [cluster-rtt-ClusterId{value='664ba98501ec8724010697f9', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:504}] to localhost:27017
2024-05-20 14:50:29 [cluster-ClusterId{value='664ba98501ec8724010697f9', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:505}] to localhost:27017
2024-05-20 14:50:29 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 14:50:29 [cluster-ClusterId{value='664ba98501ec8724010697f9', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2275700}
2024-05-20 14:50:29 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 14:50:29 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 14:50:29 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 14:50:30 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 14:50:30 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 14:50:30 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 14:50:30 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 14:50:30 [restartedMain] INFO  : Disable delta property : false
2024-05-20 14:50:30 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 14:50:30 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 14:50:30 [restartedMain] INFO  : Application is null : false
2024-05-20 14:50:30 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 14:50:30 [restartedMain] INFO  : Application version is -1: true
2024-05-20 14:50:30 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 14:50:30 [restartedMain] INFO  : The response status is 200
2024-05-20 14:50:30 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 14:50:30 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 14:50:30 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716234630328 with initial instances count: 2
2024-05-20 14:50:30 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 14:50:30 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716234630329, current=UP, previous=STARTING]
2024-05-20 14:50:30 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 14:50:30 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 14:50:30 [restartedMain] INFO  : Updating port to 8081
2024-05-20 14:50:30 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 14:50:30 [restartedMain] INFO  : Started FinalProjectApplication in 1.985 seconds (JVM running for 1710.823)
2024-05-20 14:50:30 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 14:50:31 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 14:50:31 [Thread-10] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 14:50:31 [Thread-10] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716234631153, current=DOWN, previous=UP]
2024-05-20 14:50:31 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 14:50:31 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 14:50:33 [Thread-10] INFO  : Shutting down DiscoveryClient ...
2024-05-20 14:50:36 [Thread-10] INFO  : Unregistering ...
2024-05-20 14:50:36 [Thread-10] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 14:50:36 [Thread-10] INFO  : Completed shut down of DiscoveryClient
2024-05-20 14:50:36 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 17864 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 14:50:36 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 14:50:36 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 14:50:36 [restartedMain] INFO  : Finished Spring Data repository scanning in 30 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 14:50:36 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 14:50:36 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:50:36 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:50:36 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:50:36 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@26906cd3, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@116366ae]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 14:50:36 [cluster-ClusterId{value='664ba98c01ec8724010697fa', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:8, serverValue:507}] to localhost:27017
2024-05-20 14:50:36 [cluster-rtt-ClusterId{value='664ba98c01ec8724010697fa', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:9, serverValue:506}] to localhost:27017
2024-05-20 14:50:36 [cluster-ClusterId{value='664ba98c01ec8724010697fa', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1859200}
2024-05-20 14:50:36 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 14:50:36 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 14:50:36 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 14:50:37 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 14:50:37 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 14:50:37 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 14:50:37 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 14:50:37 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 14:50:37 [restartedMain] INFO  : Disable delta property : false
2024-05-20 14:50:37 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 14:50:37 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 14:50:37 [restartedMain] INFO  : Application is null : false
2024-05-20 14:50:37 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 14:50:37 [restartedMain] INFO  : Application version is -1: true
2024-05-20 14:50:37 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 14:50:37 [restartedMain] INFO  : The response status is 200
2024-05-20 14:50:37 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 14:50:37 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 14:50:37 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716234637684 with initial instances count: 2
2024-05-20 14:50:37 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 14:50:37 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716234637685, current=UP, previous=STARTING]
2024-05-20 14:50:37 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 14:50:37 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 14:50:37 [restartedMain] INFO  : Updating port to 8081
2024-05-20 14:50:37 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 14:50:38 [restartedMain] INFO  : Started FinalProjectApplication in 1.747 seconds (JVM running for 1718.168)
2024-05-20 14:50:38 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 14:50:46 [nioEventLoopGroup-7-3] INFO  : Opened connection [connectionId{localValue:10, serverValue:508}] to localhost:27017
2024-05-20 14:50:46 [nioEventLoopGroup-7-4] INFO  : Opened connection [connectionId{localValue:11, serverValue:509}] to localhost:27017
2024-05-20 14:50:46 [nioEventLoopGroup-7-5] INFO  : Opened connection [connectionId{localValue:12, serverValue:510}] to localhost:27017
2024-05-20 14:55:37 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 14:59:45 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 14:59:45 [Thread-22] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 14:59:45 [Thread-22] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716235185701, current=DOWN, previous=UP]
2024-05-20 14:59:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 14:59:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 14:59:47 [Thread-22] INFO  : Shutting down DiscoveryClient ...
2024-05-20 14:59:50 [Thread-22] INFO  : Unregistering ...
2024-05-20 14:59:50 [Thread-22] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 14:59:50 [Thread-22] INFO  : Completed shut down of DiscoveryClient
2024-05-20 14:59:51 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 17864 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 14:59:51 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 14:59:51 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 14:59:51 [restartedMain] INFO  : Finished Spring Data repository scanning in 36 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 14:59:51 [restartedMain] INFO  : BeanFactory id=4ff0e5e2-1ac9-3da8-92ec-1e7a4b2e9977
2024-05-20 14:59:51 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:59:51 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:59:51 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 14:59:51 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4ab8393b] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/SavingsAccAdapter
2024-05-20 14:59:51 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-20 14:59:51 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4ab8393b] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/SavingsAccAdapter
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4ab8393b] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/SavingsAccAdapter
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4ab8393b] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/SavingsAccAdapter
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 38 common frames omitted
Caused by: java.lang.NoClassDefFoundError: project/infrastructure/adapters/SavingsAccAdapter
	at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3137)
	at java.base/java.lang.Class.getDeclaredConstructors(Class.java:2357)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:313)
	... 51 common frames omitted
Caused by: java.lang.ClassNotFoundException: project.infrastructure.adapters.SavingsAccAdapter
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:398)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 55 common frames omitted
2024-05-20 15:17:35 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 17956 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 15:17:35 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 15:17:35 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 15:17:35 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 15:17:36 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 15:17:36 [restartedMain] INFO  : Finished Spring Data repository scanning in 70 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 15:17:36 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 15:17:36 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:17:36 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:17:36 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:17:36 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1d6c7b51, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@602ed138]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 15:17:36 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:17:37 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 15:17:37 [cluster-rtt-ClusterId{value='664bafe081e620779773f13f', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:512}] to localhost:27017
2024-05-20 15:17:37 [cluster-ClusterId{value='664bafe081e620779773f13f', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:511}] to localhost:27017
2024-05-20 15:17:37 [cluster-ClusterId{value='664bafe081e620779773f13f', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=49241100}
2024-05-20 15:17:37 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:17:37 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 15:17:38 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 15:17:38 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 15:17:38 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 15:17:38 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 15:17:38 [restartedMain] INFO  : Disable delta property : false
2024-05-20 15:17:38 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 15:17:38 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 15:17:38 [restartedMain] INFO  : Application is null : false
2024-05-20 15:17:38 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 15:17:38 [restartedMain] INFO  : Application version is -1: true
2024-05-20 15:17:38 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 15:17:38 [restartedMain] INFO  : The response status is 200
2024-05-20 15:17:38 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 15:17:38 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 15:17:38 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716236258914 with initial instances count: 1
2024-05-20 15:17:38 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 15:17:38 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716236258916, current=UP, previous=STARTING]
2024-05-20 15:17:38 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:17:38 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 15:17:38 [restartedMain] INFO  : Updating port to 8081
2024-05-20 15:17:38 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:17:39 [restartedMain] INFO  : Started FinalProjectApplication in 4.602 seconds (JVM running for 5.621)
2024-05-20 15:18:20 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:514}] to localhost:27017
2024-05-20 15:18:20 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:513}] to localhost:27017
2024-05-20 15:18:20 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:515}] to localhost:27017
2024-05-20 15:19:58 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 15:19:58 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716236398449, current=DOWN, previous=UP]
2024-05-20 15:19:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:19:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:20:00 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 15:20:03 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 15:20:03 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 15:20:03 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 15:20:10 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 13304 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 15:20:10 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 15:20:10 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 15:20:10 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 15:20:11 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 15:20:11 [restartedMain] INFO  : Finished Spring Data repository scanning in 58 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 15:20:11 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 15:20:11 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:20:11 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:20:11 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:20:11 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@12b39be7, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@38002700]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 15:20:12 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:20:12 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 15:20:12 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:20:12 [cluster-ClusterId{value='664bb07bc998bc04bed55495', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:517}] to localhost:27017
2024-05-20 15:20:12 [cluster-rtt-ClusterId{value='664bb07bc998bc04bed55495', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:516}] to localhost:27017
2024-05-20 15:20:12 [cluster-ClusterId{value='664bb07bc998bc04bed55495', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=57147000}
2024-05-20 15:20:13 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 15:20:13 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 15:20:13 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 15:20:13 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 15:20:13 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 15:20:13 [restartedMain] INFO  : Disable delta property : false
2024-05-20 15:20:13 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 15:20:13 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 15:20:13 [restartedMain] INFO  : Application is null : false
2024-05-20 15:20:13 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 15:20:13 [restartedMain] INFO  : Application version is -1: true
2024-05-20 15:20:13 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 15:20:14 [restartedMain] INFO  : The response status is 200
2024-05-20 15:20:14 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 15:20:14 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 15:20:14 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716236414229 with initial instances count: 2
2024-05-20 15:20:14 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 15:20:14 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716236414231, current=UP, previous=STARTING]
2024-05-20 15:20:14 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:20:14 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 15:20:14 [restartedMain] INFO  : Updating port to 8081
2024-05-20 15:20:14 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:20:14 [restartedMain] INFO  : Started FinalProjectApplication in 4.77 seconds (JVM running for 5.834)
2024-05-20 15:21:00 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:519}] to localhost:27017
2024-05-20 15:21:00 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:518}] to localhost:27017
2024-05-20 15:21:00 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:520}] to localhost:27017
2024-05-20 15:22:35 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 15:22:35 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716236555910, current=DOWN, previous=UP]
2024-05-20 15:22:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:22:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:22:38 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 15:22:41 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 15:22:41 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 15:22:41 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 15:22:45 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 14568 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 15:22:45 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 15:22:45 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 15:22:45 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 15:22:46 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 15:22:46 [restartedMain] INFO  : Finished Spring Data repository scanning in 52 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 15:22:46 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 15:22:46 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:22:46 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:22:46 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:22:46 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@381c2246, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@46d9735b]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 15:22:46 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:22:46 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 15:22:46 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:22:47 [cluster-ClusterId{value='664bb1165950602134bb0401', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:522}] to localhost:27017
2024-05-20 15:22:47 [cluster-rtt-ClusterId{value='664bb1165950602134bb0401', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:521}] to localhost:27017
2024-05-20 15:22:47 [cluster-ClusterId{value='664bb1165950602134bb0401', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=41992300}
2024-05-20 15:22:47 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 15:22:47 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 15:22:48 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 15:22:48 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 15:22:48 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 15:22:48 [restartedMain] INFO  : Disable delta property : false
2024-05-20 15:22:48 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 15:22:48 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 15:22:48 [restartedMain] INFO  : Application is null : false
2024-05-20 15:22:48 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 15:22:48 [restartedMain] INFO  : Application version is -1: true
2024-05-20 15:22:48 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 15:22:48 [restartedMain] INFO  : The response status is 200
2024-05-20 15:22:48 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 15:22:48 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 15:22:48 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716236568351 with initial instances count: 1
2024-05-20 15:22:48 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 15:22:48 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716236568353, current=UP, previous=STARTING]
2024-05-20 15:22:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:22:48 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 15:22:48 [restartedMain] INFO  : Updating port to 8081
2024-05-20 15:22:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:22:48 [restartedMain] INFO  : Started FinalProjectApplication in 3.657 seconds (JVM running for 4.464)
2024-05-20 15:22:53 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:523}] to localhost:27017
2024-05-20 15:22:53 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:524}] to localhost:27017
2024-05-20 15:22:53 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:525}] to localhost:27017
2024-05-20 15:24:07 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 15:24:07 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716236647207, current=DOWN, previous=UP]
2024-05-20 15:24:07 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:24:07 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:24:09 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 15:24:12 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 15:24:12 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 15:24:12 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 15:24:16 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 18180 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 15:24:16 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 15:24:16 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 15:24:16 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 15:24:17 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 15:24:17 [restartedMain] INFO  : Finished Spring Data repository scanning in 53 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 15:24:17 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 15:24:17 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:24:17 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:24:17 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:24:17 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3c6c9c03, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@72523754]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 15:24:17 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:24:18 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 15:24:18 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:24:18 [cluster-ClusterId{value='664bb171a95e293b96863e0c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:526}] to localhost:27017
2024-05-20 15:24:18 [cluster-rtt-ClusterId{value='664bb171a95e293b96863e0c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:527}] to localhost:27017
2024-05-20 15:24:18 [cluster-ClusterId{value='664bb171a95e293b96863e0c', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=40740300}
2024-05-20 15:24:18 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 15:24:19 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 15:24:19 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 15:24:19 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 15:24:19 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 15:24:19 [restartedMain] INFO  : Disable delta property : false
2024-05-20 15:24:19 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 15:24:19 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 15:24:19 [restartedMain] INFO  : Application is null : false
2024-05-20 15:24:19 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 15:24:19 [restartedMain] INFO  : Application version is -1: true
2024-05-20 15:24:19 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 15:24:19 [restartedMain] INFO  : The response status is 200
2024-05-20 15:24:19 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 15:24:19 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 15:24:19 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716236659463 with initial instances count: 1
2024-05-20 15:24:19 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 15:24:19 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716236659465, current=UP, previous=STARTING]
2024-05-20 15:24:19 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:24:19 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 15:24:19 [restartedMain] INFO  : Updating port to 8081
2024-05-20 15:24:19 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:24:19 [restartedMain] INFO  : Started FinalProjectApplication in 3.631 seconds (JVM running for 4.434)
2024-05-20 15:24:43 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:529}] to localhost:27017
2024-05-20 15:24:43 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:528}] to localhost:27017
2024-05-20 15:24:43 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:530}] to localhost:27017
2024-05-20 15:25:55 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 15:25:55 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716236755519, current=DOWN, previous=UP]
2024-05-20 15:25:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:25:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:25:57 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 15:26:00 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 15:26:00 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 15:26:00 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 15:26:05 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 23000 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 15:26:05 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 15:26:05 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 15:26:05 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 15:26:05 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 15:26:05 [restartedMain] INFO  : Finished Spring Data repository scanning in 53 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 15:26:06 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 15:26:06 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:26:06 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:26:06 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:26:06 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3dc2c602, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@36e7fca7]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 15:26:06 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:26:06 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 15:26:06 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:26:06 [cluster-rtt-ClusterId{value='664bb1de37e1ba405ea78cde', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:532}] to localhost:27017
2024-05-20 15:26:06 [cluster-ClusterId{value='664bb1de37e1ba405ea78cde', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:531}] to localhost:27017
2024-05-20 15:26:06 [cluster-ClusterId{value='664bb1de37e1ba405ea78cde', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=39896500}
2024-05-20 15:26:07 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 15:26:07 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 15:26:07 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 15:26:07 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 15:26:07 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 15:26:07 [restartedMain] INFO  : Disable delta property : false
2024-05-20 15:26:07 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 15:26:07 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 15:26:07 [restartedMain] INFO  : Application is null : false
2024-05-20 15:26:07 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 15:26:07 [restartedMain] INFO  : Application version is -1: true
2024-05-20 15:26:07 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 15:26:08 [restartedMain] INFO  : The response status is 200
2024-05-20 15:26:08 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 15:26:08 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 15:26:08 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716236768158 with initial instances count: 2
2024-05-20 15:26:08 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 15:26:08 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716236768160, current=UP, previous=STARTING]
2024-05-20 15:26:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:26:08 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 15:26:08 [restartedMain] INFO  : Updating port to 8081
2024-05-20 15:26:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:26:08 [restartedMain] INFO  : Started FinalProjectApplication in 3.847 seconds (JVM running for 4.794)
2024-05-20 15:26:12 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:534}] to localhost:27017
2024-05-20 15:26:12 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:533}] to localhost:27017
2024-05-20 15:26:12 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:535}] to localhost:27017
2024-05-20 15:28:46 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 15:28:46 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716236926480, current=DOWN, previous=UP]
2024-05-20 15:28:46 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:28:46 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:28:48 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 15:28:51 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 15:28:51 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 15:28:51 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 15:28:56 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 22220 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 15:28:56 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 15:28:56 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 15:28:56 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 15:28:56 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 15:28:56 [restartedMain] INFO  : Finished Spring Data repository scanning in 57 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 15:28:56 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 15:28:56 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:28:56 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:28:56 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:28:57 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@722f311a, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@275f064b]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 15:28:57 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:28:57 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 15:28:57 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:28:57 [cluster-ClusterId{value='664bb2895ba50f3a09ced8e1', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:536}] to localhost:27017
2024-05-20 15:28:57 [cluster-rtt-ClusterId{value='664bb2895ba50f3a09ced8e1', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:537}] to localhost:27017
2024-05-20 15:28:57 [cluster-ClusterId{value='664bb2895ba50f3a09ced8e1', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=40522200}
2024-05-20 15:28:57 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 15:28:58 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 15:28:58 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 15:28:58 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 15:28:58 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 15:28:58 [restartedMain] INFO  : Disable delta property : false
2024-05-20 15:28:58 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 15:28:58 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 15:28:58 [restartedMain] INFO  : Application is null : false
2024-05-20 15:28:58 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 15:28:58 [restartedMain] INFO  : Application version is -1: true
2024-05-20 15:28:58 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 15:28:58 [restartedMain] INFO  : The response status is 200
2024-05-20 15:28:58 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 15:28:58 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 15:28:58 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716236938780 with initial instances count: 2
2024-05-20 15:28:58 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 15:28:58 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716236938782, current=UP, previous=STARTING]
2024-05-20 15:28:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:28:58 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 15:28:58 [restartedMain] INFO  : Updating port to 8081
2024-05-20 15:28:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:28:59 [restartedMain] INFO  : Started FinalProjectApplication in 3.706 seconds (JVM running for 4.549)
2024-05-20 15:29:21 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:539}] to localhost:27017
2024-05-20 15:29:21 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:538}] to localhost:27017
2024-05-20 15:29:21 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:540}] to localhost:27017
2024-05-20 15:31:51 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 15:31:51 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716237111143, current=DOWN, previous=UP]
2024-05-20 15:31:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:31:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:31:53 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 15:31:56 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 15:31:56 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 15:31:56 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 15:32:00 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 14060 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 15:32:00 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 15:32:00 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 15:32:00 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 15:32:01 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 15:32:01 [restartedMain] INFO  : Finished Spring Data repository scanning in 53 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 15:32:01 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 15:32:01 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:32:01 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:32:01 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:32:01 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1eada8ea, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3495e889]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 15:32:01 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:32:01 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 15:32:02 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:32:02 [cluster-rtt-ClusterId{value='664bb341200df276094a5d46', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:541}] to localhost:27017
2024-05-20 15:32:02 [cluster-ClusterId{value='664bb341200df276094a5d46', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:542}] to localhost:27017
2024-05-20 15:32:02 [cluster-ClusterId{value='664bb341200df276094a5d46', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=39585600}
2024-05-20 15:32:02 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 15:32:03 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 15:32:03 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 15:32:03 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 15:32:03 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 15:32:03 [restartedMain] INFO  : Disable delta property : false
2024-05-20 15:32:03 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 15:32:03 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 15:32:03 [restartedMain] INFO  : Application is null : false
2024-05-20 15:32:03 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 15:32:03 [restartedMain] INFO  : Application version is -1: true
2024-05-20 15:32:03 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 15:32:03 [restartedMain] INFO  : The response status is 200
2024-05-20 15:32:03 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 15:32:03 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 15:32:03 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716237123385 with initial instances count: 2
2024-05-20 15:32:03 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 15:32:03 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716237123386, current=UP, previous=STARTING]
2024-05-20 15:32:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:32:03 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 15:32:03 [restartedMain] INFO  : Updating port to 8081
2024-05-20 15:32:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:32:03 [restartedMain] INFO  : Started FinalProjectApplication in 3.692 seconds (JVM running for 4.545)
2024-05-20 15:32:06 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:544}] to localhost:27017
2024-05-20 15:32:06 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:543}] to localhost:27017
2024-05-20 15:32:06 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:545}] to localhost:27017
2024-05-20 15:34:26 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 15:34:26 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716237266950, current=DOWN, previous=UP]
2024-05-20 15:34:26 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:34:26 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:34:29 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 15:34:32 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 15:34:32 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 15:34:32 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 15:34:36 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 30520 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 15:34:36 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 15:34:36 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 15:34:36 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 15:34:37 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 15:34:37 [restartedMain] INFO  : Finished Spring Data repository scanning in 52 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 15:34:37 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 15:34:37 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:34:37 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:34:37 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:34:37 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3d23b1e3, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@795c3ac5]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 15:34:37 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:34:38 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 15:34:38 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:34:38 [cluster-rtt-ClusterId{value='664bb3dd66e2d95a090e6bfa', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:547}] to localhost:27017
2024-05-20 15:34:38 [cluster-ClusterId{value='664bb3dd66e2d95a090e6bfa', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:546}] to localhost:27017
2024-05-20 15:34:38 [cluster-ClusterId{value='664bb3dd66e2d95a090e6bfa', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=40102300}
2024-05-20 15:34:38 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 15:34:39 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 15:34:39 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 15:34:39 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 15:34:39 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 15:34:39 [restartedMain] INFO  : Disable delta property : false
2024-05-20 15:34:39 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 15:34:39 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 15:34:39 [restartedMain] INFO  : Application is null : false
2024-05-20 15:34:39 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 15:34:39 [restartedMain] INFO  : Application version is -1: true
2024-05-20 15:34:39 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 15:34:39 [restartedMain] INFO  : The response status is 200
2024-05-20 15:34:39 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 15:34:39 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 15:34:39 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716237279459 with initial instances count: 2
2024-05-20 15:34:39 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 15:34:39 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716237279460, current=UP, previous=STARTING]
2024-05-20 15:34:39 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:34:39 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 15:34:39 [restartedMain] INFO  : Updating port to 8081
2024-05-20 15:34:39 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:34:39 [restartedMain] INFO  : Started FinalProjectApplication in 3.698 seconds (JVM running for 4.535)
2024-05-20 15:34:43 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:549}] to localhost:27017
2024-05-20 15:34:43 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:548}] to localhost:27017
2024-05-20 15:34:43 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:550}] to localhost:27017
2024-05-20 15:36:12 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 15:36:12 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716237372566, current=DOWN, previous=UP]
2024-05-20 15:36:12 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:36:12 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:36:14 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 15:36:17 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 15:36:17 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 15:36:17 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 15:36:26 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 10968 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 15:36:26 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 15:36:26 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 15:36:26 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 15:36:26 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 15:36:26 [restartedMain] INFO  : Finished Spring Data repository scanning in 61 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 15:36:27 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 15:36:27 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:36:27 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:36:27 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:36:27 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3692ef0d, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@53349962]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 15:36:27 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:36:27 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 15:36:27 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:36:27 [cluster-rtt-ClusterId{value='664bb44bb41b4e151e3cdd39', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:551}] to localhost:27017
2024-05-20 15:36:27 [cluster-ClusterId{value='664bb44bb41b4e151e3cdd39', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:552}] to localhost:27017
2024-05-20 15:36:27 [cluster-ClusterId{value='664bb44bb41b4e151e3cdd39', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=43922300}
2024-05-20 15:36:28 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 15:36:28 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 15:36:28 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 15:36:28 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 15:36:28 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 15:36:28 [restartedMain] INFO  : Disable delta property : false
2024-05-20 15:36:28 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 15:36:28 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 15:36:28 [restartedMain] INFO  : Application is null : false
2024-05-20 15:36:28 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 15:36:28 [restartedMain] INFO  : Application version is -1: true
2024-05-20 15:36:28 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 15:36:29 [restartedMain] INFO  : The response status is 200
2024-05-20 15:36:29 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 15:36:29 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 15:36:29 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716237389260 with initial instances count: 2
2024-05-20 15:36:29 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 15:36:29 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716237389262, current=UP, previous=STARTING]
2024-05-20 15:36:29 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:36:29 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 15:36:29 [restartedMain] INFO  : Updating port to 8081
2024-05-20 15:36:29 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:36:29 [restartedMain] INFO  : Started FinalProjectApplication in 4.343 seconds (JVM running for 5.761)
2024-05-20 15:36:56 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:554}] to localhost:27017
2024-05-20 15:36:56 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:553}] to localhost:27017
2024-05-20 15:36:57 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:555}] to localhost:27017
2024-05-20 15:37:42 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 15:37:42 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716237462711, current=DOWN, previous=UP]
2024-05-20 15:37:42 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:37:42 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:37:44 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 15:37:47 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 15:37:47 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 15:37:47 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 15:37:52 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 21148 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 15:37:52 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 15:37:52 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 15:37:52 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 15:37:52 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 15:37:52 [restartedMain] INFO  : Finished Spring Data repository scanning in 57 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 15:37:53 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 15:37:53 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:37:53 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:37:53 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:37:53 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1eada8ea, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3495e889]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 15:37:53 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:37:53 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 15:37:53 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:37:53 [cluster-ClusterId{value='664bb4a1d821a67e6c469987', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:557}] to localhost:27017
2024-05-20 15:37:53 [cluster-rtt-ClusterId{value='664bb4a1d821a67e6c469987', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:556}] to localhost:27017
2024-05-20 15:37:53 [cluster-ClusterId{value='664bb4a1d821a67e6c469987', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=41511000}
2024-05-20 15:37:54 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 15:37:54 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 15:37:54 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 15:37:54 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 15:37:54 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 15:37:54 [restartedMain] INFO  : Disable delta property : false
2024-05-20 15:37:54 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 15:37:54 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 15:37:54 [restartedMain] INFO  : Application is null : false
2024-05-20 15:37:54 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 15:37:54 [restartedMain] INFO  : Application version is -1: true
2024-05-20 15:37:54 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 15:37:55 [restartedMain] INFO  : The response status is 200
2024-05-20 15:37:55 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 15:37:55 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 15:37:55 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716237475060 with initial instances count: 2
2024-05-20 15:37:55 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 15:37:55 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716237475062, current=UP, previous=STARTING]
2024-05-20 15:37:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:37:55 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 15:37:55 [restartedMain] INFO  : Updating port to 8081
2024-05-20 15:37:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:37:55 [restartedMain] INFO  : Started FinalProjectApplication in 3.712 seconds (JVM running for 4.538)
2024-05-20 15:37:59 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:558}] to localhost:27017
2024-05-20 15:37:59 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:559}] to localhost:27017
2024-05-20 15:37:59 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:560}] to localhost:27017
2024-05-20 15:40:23 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 15:40:23 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716237623264, current=DOWN, previous=UP]
2024-05-20 15:40:23 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:40:23 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:40:25 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 15:40:28 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 15:40:28 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 15:40:28 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 15:40:33 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 13220 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 15:40:33 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 15:40:33 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 15:40:33 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 15:40:33 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 15:40:33 [restartedMain] INFO  : Finished Spring Data repository scanning in 55 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 15:40:33 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 15:40:33 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:40:33 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:40:33 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:40:34 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3dde6a30, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@500c5762]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 15:40:34 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:40:34 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 15:40:34 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:40:34 [cluster-rtt-ClusterId{value='664bb5421533f331bde416fd', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:561}] to localhost:27017
2024-05-20 15:40:34 [cluster-ClusterId{value='664bb5421533f331bde416fd', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:562}] to localhost:27017
2024-05-20 15:40:34 [cluster-ClusterId{value='664bb5421533f331bde416fd', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=40584300}
2024-05-20 15:40:34 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 15:40:35 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 15:40:35 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 15:40:35 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 15:40:35 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 15:40:35 [restartedMain] INFO  : Disable delta property : false
2024-05-20 15:40:35 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 15:40:35 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 15:40:35 [restartedMain] INFO  : Application is null : false
2024-05-20 15:40:35 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 15:40:35 [restartedMain] INFO  : Application version is -1: true
2024-05-20 15:40:35 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 15:40:35 [restartedMain] INFO  : The response status is 200
2024-05-20 15:40:35 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 15:40:35 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 15:40:35 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716237635687 with initial instances count: 2
2024-05-20 15:40:35 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 15:40:35 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716237635688, current=UP, previous=STARTING]
2024-05-20 15:40:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:40:35 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 15:40:35 [restartedMain] INFO  : Updating port to 8081
2024-05-20 15:40:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:40:36 [restartedMain] INFO  : Started FinalProjectApplication in 3.758 seconds (JVM running for 4.575)
2024-05-20 15:40:38 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:563}] to localhost:27017
2024-05-20 15:40:38 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:564}] to localhost:27017
2024-05-20 15:40:38 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:565}] to localhost:27017
2024-05-20 15:41:16 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 15:41:16 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716237676188, current=DOWN, previous=UP]
2024-05-20 15:41:16 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:41:16 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:41:18 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 15:41:21 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 15:41:21 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 15:41:21 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 15:41:25 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 8408 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 15:41:25 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 15:41:25 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 15:41:25 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 15:41:26 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 15:41:26 [restartedMain] INFO  : Finished Spring Data repository scanning in 53 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 15:41:26 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 15:41:26 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:41:26 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:41:26 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:41:26 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@2c0d7e8a, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2ff2bf2d]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 15:41:26 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:41:27 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 15:41:27 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:41:27 [cluster-rtt-ClusterId{value='664bb5760257517406b2540b', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:567}] to localhost:27017
2024-05-20 15:41:27 [cluster-ClusterId{value='664bb5760257517406b2540b', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:566}] to localhost:27017
2024-05-20 15:41:27 [cluster-ClusterId{value='664bb5760257517406b2540b', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=41965200}
2024-05-20 15:41:27 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 15:41:28 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 15:41:28 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 15:41:28 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 15:41:28 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 15:41:28 [restartedMain] INFO  : Disable delta property : false
2024-05-20 15:41:28 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 15:41:28 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 15:41:28 [restartedMain] INFO  : Application is null : false
2024-05-20 15:41:28 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 15:41:28 [restartedMain] INFO  : Application version is -1: true
2024-05-20 15:41:28 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 15:41:28 [restartedMain] INFO  : The response status is 200
2024-05-20 15:41:28 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 15:41:28 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 15:41:28 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716237688470 with initial instances count: 2
2024-05-20 15:41:28 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 15:41:28 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716237688473, current=UP, previous=STARTING]
2024-05-20 15:41:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:41:28 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 15:41:28 [restartedMain] INFO  : Updating port to 8081
2024-05-20 15:41:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:41:28 [restartedMain] INFO  : Started FinalProjectApplication in 3.738 seconds (JVM running for 4.573)
2024-05-20 15:41:37 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:568}] to localhost:27017
2024-05-20 15:41:37 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:569}] to localhost:27017
2024-05-20 15:41:37 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:570}] to localhost:27017
2024-05-20 15:42:07 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 15:42:07 [Thread-1] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 15:42:07 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716237727097, current=DOWN, previous=UP]
2024-05-20 15:42:07 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:42:07 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:42:09 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 15:42:12 [Thread-1] INFO  : Unregistering ...
2024-05-20 15:42:12 [Thread-1] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 15:42:12 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 15:42:12 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 8408 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 15:42:12 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 15:42:12 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 15:42:12 [restartedMain] INFO  : Finished Spring Data repository scanning in 32 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 15:42:13 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 15:42:13 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:42:13 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:42:13 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:42:13 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@50e8f617, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2ff2bf2d]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 15:42:13 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:42:13 [cluster-ClusterId{value='664bb5a50257517406b2540c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:571}] to localhost:27017
2024-05-20 15:42:13 [cluster-rtt-ClusterId{value='664bb5a50257517406b2540c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:572}] to localhost:27017
2024-05-20 15:42:13 [cluster-ClusterId{value='664bb5a50257517406b2540c', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3187700}
2024-05-20 15:42:13 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 15:42:13 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:42:13 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 15:42:14 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 15:42:14 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 15:42:14 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 15:42:14 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 15:42:14 [restartedMain] INFO  : Disable delta property : false
2024-05-20 15:42:14 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 15:42:14 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 15:42:14 [restartedMain] INFO  : Application is null : false
2024-05-20 15:42:14 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 15:42:14 [restartedMain] INFO  : Application version is -1: true
2024-05-20 15:42:14 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 15:42:14 [restartedMain] INFO  : The response status is 200
2024-05-20 15:42:14 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 15:42:14 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 15:42:14 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716237734103 with initial instances count: 2
2024-05-20 15:42:14 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 15:42:14 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716237734104, current=UP, previous=STARTING]
2024-05-20 15:42:14 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:42:14 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 15:42:14 [restartedMain] INFO  : Updating port to 8081
2024-05-20 15:42:14 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:42:14 [restartedMain] INFO  : Started FinalProjectApplication in 2.295 seconds (JVM running for 50.306)
2024-05-20 15:42:14 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 15:42:14 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 15:42:14 [Thread-10] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 15:42:14 [Thread-10] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716237734729, current=DOWN, previous=UP]
2024-05-20 15:42:14 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:42:14 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:42:16 [Thread-10] INFO  : Shutting down DiscoveryClient ...
2024-05-20 15:42:19 [Thread-10] INFO  : Unregistering ...
2024-05-20 15:42:19 [Thread-10] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 15:42:19 [Thread-10] INFO  : Completed shut down of DiscoveryClient
2024-05-20 15:42:20 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 8408 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 15:42:20 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 15:42:20 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 15:42:20 [restartedMain] INFO  : Finished Spring Data repository scanning in 42 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 15:42:20 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 15:42:20 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:42:20 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:42:20 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:42:20 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3a550145, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2ff2bf2d]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 15:42:20 [cluster-rtt-ClusterId{value='664bb5ac0257517406b2540d', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:9, serverValue:574}] to localhost:27017
2024-05-20 15:42:20 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:42:20 [cluster-ClusterId{value='664bb5ac0257517406b2540d', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:8, serverValue:573}] to localhost:27017
2024-05-20 15:42:20 [cluster-ClusterId{value='664bb5ac0257517406b2540d', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=8597100}
2024-05-20 15:42:20 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 15:42:20 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:42:21 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 15:42:21 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 15:42:21 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 15:42:21 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 15:42:21 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 15:42:21 [restartedMain] INFO  : Disable delta property : false
2024-05-20 15:42:21 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 15:42:21 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 15:42:21 [restartedMain] INFO  : Application is null : false
2024-05-20 15:42:21 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 15:42:21 [restartedMain] INFO  : Application version is -1: true
2024-05-20 15:42:21 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 15:42:21 [restartedMain] INFO  : The response status is 200
2024-05-20 15:42:21 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 15:42:21 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 15:42:21 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716237741568 with initial instances count: 2
2024-05-20 15:42:21 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 15:42:21 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716237741569, current=UP, previous=STARTING]
2024-05-20 15:42:21 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:42:21 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 15:42:21 [restartedMain] INFO  : Updating port to 8081
2024-05-20 15:42:21 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:42:22 [restartedMain] INFO  : Started FinalProjectApplication in 2.131 seconds (JVM running for 57.74)
2024-05-20 15:42:22 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 15:42:50 [nioEventLoopGroup-7-3] INFO  : Opened connection [connectionId{localValue:10, serverValue:575}] to localhost:27017
2024-05-20 15:42:50 [nioEventLoopGroup-7-4] INFO  : Opened connection [connectionId{localValue:11, serverValue:576}] to localhost:27017
2024-05-20 15:42:50 [nioEventLoopGroup-7-5] INFO  : Opened connection [connectionId{localValue:12, serverValue:577}] to localhost:27017
2024-05-20 15:43:58 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 15:43:58 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716237838365, current=DOWN, previous=UP]
2024-05-20 15:43:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:43:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:44:00 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 15:44:03 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 15:44:03 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 15:44:03 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 15:44:07 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 33788 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 15:44:07 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 15:44:07 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 15:44:07 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 15:44:08 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 15:44:08 [restartedMain] INFO  : Finished Spring Data repository scanning in 69 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 15:44:08 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 15:44:08 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:44:08 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:44:08 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:44:09 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@2c0d7e8a, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2ff2bf2d]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 15:44:09 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:44:09 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 15:44:09 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:44:09 [cluster-rtt-ClusterId{value='664bb619a193b10e0c5d50f8', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:579}] to localhost:27017
2024-05-20 15:44:09 [cluster-ClusterId{value='664bb619a193b10e0c5d50f8', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:578}] to localhost:27017
2024-05-20 15:44:09 [cluster-ClusterId{value='664bb619a193b10e0c5d50f8', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=40445600}
2024-05-20 15:44:09 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 15:44:10 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 15:44:10 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 15:44:10 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 15:44:10 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 15:44:10 [restartedMain] INFO  : Disable delta property : false
2024-05-20 15:44:10 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 15:44:10 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 15:44:10 [restartedMain] INFO  : Application is null : false
2024-05-20 15:44:10 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 15:44:10 [restartedMain] INFO  : Application version is -1: true
2024-05-20 15:44:10 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 15:44:10 [restartedMain] INFO  : The response status is 200
2024-05-20 15:44:10 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 15:44:10 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 15:44:10 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716237850730 with initial instances count: 2
2024-05-20 15:44:10 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 15:44:10 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716237850732, current=UP, previous=STARTING]
2024-05-20 15:44:10 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:44:10 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 15:44:10 [restartedMain] INFO  : Updating port to 8081
2024-05-20 15:44:10 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:44:11 [restartedMain] INFO  : Started FinalProjectApplication in 3.805 seconds (JVM running for 4.634)
2024-05-20 15:44:14 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:581}] to localhost:27017
2024-05-20 15:44:14 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:580}] to localhost:27017
2024-05-20 15:44:14 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:582}] to localhost:27017
2024-05-20 15:44:29 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 15:44:29 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716237869249, current=DOWN, previous=UP]
2024-05-20 15:44:29 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:44:29 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:44:31 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 15:44:34 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 15:44:34 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 15:44:34 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 15:44:38 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 29464 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 15:44:38 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 15:44:38 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 15:44:38 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 15:44:39 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 15:44:39 [restartedMain] INFO  : Finished Spring Data repository scanning in 52 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 15:44:39 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 15:44:39 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:44:39 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:44:39 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:44:39 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@28dad6b2, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@dc4eba3]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 15:44:39 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:44:40 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 15:44:40 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:44:40 [cluster-rtt-ClusterId{value='664bb6373306097fc50665fc', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:583}] to localhost:27017
2024-05-20 15:44:40 [cluster-ClusterId{value='664bb6373306097fc50665fc', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:584}] to localhost:27017
2024-05-20 15:44:40 [cluster-ClusterId{value='664bb6373306097fc50665fc', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=42219500}
2024-05-20 15:44:40 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 15:44:41 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 15:44:41 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 15:44:41 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 15:44:41 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 15:44:41 [restartedMain] INFO  : Disable delta property : false
2024-05-20 15:44:41 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 15:44:41 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 15:44:41 [restartedMain] INFO  : Application is null : false
2024-05-20 15:44:41 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 15:44:41 [restartedMain] INFO  : Application version is -1: true
2024-05-20 15:44:41 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 15:44:41 [restartedMain] INFO  : The response status is 200
2024-05-20 15:44:41 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 15:44:41 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 15:44:41 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716237881471 with initial instances count: 2
2024-05-20 15:44:41 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 15:44:41 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716237881473, current=UP, previous=STARTING]
2024-05-20 15:44:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:44:41 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 15:44:41 [restartedMain] INFO  : Updating port to 8081
2024-05-20 15:44:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:44:41 [restartedMain] INFO  : Started FinalProjectApplication in 3.652 seconds (JVM running for 4.47)
2024-05-20 15:48:42 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 15:48:42 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716238122523, current=DOWN, previous=UP]
2024-05-20 15:48:42 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:48:42 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:48:44 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 15:48:47 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 15:48:47 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 15:48:47 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 15:48:52 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 4332 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 15:48:52 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 15:48:52 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 15:48:52 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 15:48:52 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 15:48:52 [restartedMain] INFO  : Finished Spring Data repository scanning in 54 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 15:48:53 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 15:48:53 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:48:53 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:48:53 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:48:53 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3495e889, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2c774fa5]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 15:48:53 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:48:53 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 15:48:53 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:48:53 [cluster-ClusterId{value='664bb735d6e8d7610062133b', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:585}] to localhost:27017
2024-05-20 15:48:53 [cluster-rtt-ClusterId{value='664bb735d6e8d7610062133b', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:586}] to localhost:27017
2024-05-20 15:48:53 [cluster-ClusterId{value='664bb735d6e8d7610062133b', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=45744400}
2024-05-20 15:48:54 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 15:48:54 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 15:48:54 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 15:48:54 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 15:48:54 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 15:48:54 [restartedMain] INFO  : Disable delta property : false
2024-05-20 15:48:54 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 15:48:54 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 15:48:54 [restartedMain] INFO  : Application is null : false
2024-05-20 15:48:54 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 15:48:54 [restartedMain] INFO  : Application version is -1: true
2024-05-20 15:48:54 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 15:48:55 [restartedMain] INFO  : The response status is 200
2024-05-20 15:48:55 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 15:48:55 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 15:48:55 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716238135179 with initial instances count: 2
2024-05-20 15:48:55 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 15:48:55 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716238135181, current=UP, previous=STARTING]
2024-05-20 15:48:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:48:55 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 15:48:55 [restartedMain] INFO  : Updating port to 8081
2024-05-20 15:48:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:48:55 [restartedMain] INFO  : Started FinalProjectApplication in 3.851 seconds (JVM running for 4.679)
2024-05-20 15:50:02 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:587}] to localhost:27017
2024-05-20 15:50:02 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:588}] to localhost:27017
2024-05-20 15:50:02 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:589}] to localhost:27017
2024-05-20 15:50:28 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 15:50:28 [Thread-1] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 15:50:28 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716238228146, current=DOWN, previous=UP]
2024-05-20 15:50:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:50:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:50:30 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 15:50:33 [Thread-1] INFO  : Unregistering ...
2024-05-20 15:50:33 [Thread-1] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 15:50:33 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 15:50:33 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 4332 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 15:50:33 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 15:50:33 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 15:50:33 [restartedMain] INFO  : Finished Spring Data repository scanning in 32 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 15:50:34 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 15:50:34 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:50:34 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:50:34 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:50:34 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@58d5f28, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2c774fa5]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 15:50:34 [cluster-ClusterId{value='664bb79ad6e8d7610062133c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:591}] to localhost:27017
2024-05-20 15:50:34 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:50:34 [cluster-ClusterId{value='664bb79ad6e8d7610062133c', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2163900}
2024-05-20 15:50:34 [cluster-rtt-ClusterId{value='664bb79ad6e8d7610062133c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:590}] to localhost:27017
2024-05-20 15:50:34 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 15:50:34 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:50:34 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 15:50:34 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 15:50:34 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 15:50:34 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 15:50:34 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 15:50:34 [restartedMain] INFO  : Disable delta property : false
2024-05-20 15:50:34 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 15:50:34 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 15:50:34 [restartedMain] INFO  : Application is null : false
2024-05-20 15:50:34 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 15:50:34 [restartedMain] INFO  : Application version is -1: true
2024-05-20 15:50:34 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 15:50:34 [restartedMain] INFO  : The response status is 200
2024-05-20 15:50:34 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 15:50:34 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 15:50:34 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716238234970 with initial instances count: 2
2024-05-20 15:50:34 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 15:50:34 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716238234971, current=UP, previous=STARTING]
2024-05-20 15:50:34 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:50:34 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 15:50:34 [restartedMain] INFO  : Updating port to 8081
2024-05-20 15:50:34 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:50:35 [restartedMain] INFO  : Started FinalProjectApplication in 2.041 seconds (JVM running for 104.491)
2024-05-20 15:50:35 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 15:50:35 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 15:50:35 [Thread-10] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 15:50:35 [Thread-10] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716238235735, current=DOWN, previous=UP]
2024-05-20 15:50:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:50:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:50:37 [Thread-10] INFO  : Shutting down DiscoveryClient ...
2024-05-20 15:50:40 [Thread-10] INFO  : Unregistering ...
2024-05-20 15:50:40 [Thread-10] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 15:50:40 [Thread-10] INFO  : Completed shut down of DiscoveryClient
2024-05-20 15:50:41 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 4332 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 15:50:41 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 15:50:41 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 15:50:41 [restartedMain] INFO  : Finished Spring Data repository scanning in 29 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 15:50:41 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 15:50:41 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:50:41 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:50:41 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:50:41 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@6ccc44e4, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2c774fa5]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 15:50:41 [cluster-ClusterId{value='664bb7a1d6e8d7610062133d', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:8, serverValue:593}] to localhost:27017
2024-05-20 15:50:41 [cluster-rtt-ClusterId{value='664bb7a1d6e8d7610062133d', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:9, serverValue:592}] to localhost:27017
2024-05-20 15:50:41 [cluster-ClusterId{value='664bb7a1d6e8d7610062133d', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2362300}
2024-05-20 15:50:41 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:50:41 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 15:50:41 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:50:41 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 15:50:42 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 15:50:42 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 15:50:42 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 15:50:42 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 15:50:42 [restartedMain] INFO  : Disable delta property : false
2024-05-20 15:50:42 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 15:50:42 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 15:50:42 [restartedMain] INFO  : Application is null : false
2024-05-20 15:50:42 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 15:50:42 [restartedMain] INFO  : Application version is -1: true
2024-05-20 15:50:42 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 15:50:42 [restartedMain] INFO  : The response status is 200
2024-05-20 15:50:42 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 15:50:42 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 15:50:42 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716238242379 with initial instances count: 2
2024-05-20 15:50:42 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 15:50:42 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716238242381, current=UP, previous=STARTING]
2024-05-20 15:50:42 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:50:42 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 15:50:42 [restartedMain] INFO  : Updating port to 8081
2024-05-20 15:50:42 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:50:42 [restartedMain] INFO  : Started FinalProjectApplication in 1.883 seconds (JVM running for 111.915)
2024-05-20 15:50:42 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 15:50:46 [nioEventLoopGroup-7-4] INFO  : Opened connection [connectionId{localValue:11, serverValue:595}] to localhost:27017
2024-05-20 15:50:46 [nioEventLoopGroup-7-3] INFO  : Opened connection [connectionId{localValue:10, serverValue:594}] to localhost:27017
2024-05-20 15:50:46 [nioEventLoopGroup-7-5] INFO  : Opened connection [connectionId{localValue:12, serverValue:596}] to localhost:27017
2024-05-20 15:51:19 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 15:51:19 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716238279398, current=DOWN, previous=UP]
2024-05-20 15:51:19 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:51:19 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:51:21 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 15:51:24 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 15:51:24 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 15:51:24 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 15:51:29 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 13400 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 15:51:29 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 15:51:29 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 15:51:29 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 15:51:29 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 15:51:29 [restartedMain] INFO  : Finished Spring Data repository scanning in 60 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 15:51:29 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 15:51:29 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:51:29 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:51:29 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 15:51:30 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@435a450d, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5a7d49f8]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 15:51:30 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:51:30 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 15:51:30 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 15:51:30 [cluster-ClusterId{value='664bb7d29ad8957d93474930', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:598}] to localhost:27017
2024-05-20 15:51:30 [cluster-rtt-ClusterId{value='664bb7d29ad8957d93474930', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:597}] to localhost:27017
2024-05-20 15:51:30 [cluster-ClusterId{value='664bb7d29ad8957d93474930', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=44080800}
2024-05-20 15:51:30 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 15:51:31 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 15:51:31 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 15:51:31 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 15:51:31 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 15:51:31 [restartedMain] INFO  : Disable delta property : false
2024-05-20 15:51:31 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 15:51:31 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 15:51:31 [restartedMain] INFO  : Application is null : false
2024-05-20 15:51:31 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 15:51:31 [restartedMain] INFO  : Application version is -1: true
2024-05-20 15:51:31 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 15:51:31 [restartedMain] INFO  : The response status is 200
2024-05-20 15:51:31 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 15:51:31 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 15:51:31 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716238291752 with initial instances count: 2
2024-05-20 15:51:31 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 15:51:31 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716238291754, current=UP, previous=STARTING]
2024-05-20 15:51:31 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 15:51:31 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 15:51:31 [restartedMain] INFO  : Updating port to 8081
2024-05-20 15:51:31 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 15:51:32 [restartedMain] INFO  : Started FinalProjectApplication in 3.804 seconds (JVM running for 4.66)
2024-05-20 15:54:19 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:599}] to localhost:27017
2024-05-20 15:54:19 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:600}] to localhost:27017
2024-05-20 15:54:19 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:601}] to localhost:27017
2024-05-20 15:56:31 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 16:01:10 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 16:01:10 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716238870220, current=DOWN, previous=UP]
2024-05-20 16:01:10 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 16:01:10 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 16:01:12 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 16:01:15 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 16:01:15 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 16:01:15 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 16:01:20 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 9800 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 16:01:20 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 16:01:20 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 16:01:20 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 16:01:20 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 16:01:20 [restartedMain] INFO  : Finished Spring Data repository scanning in 55 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 16:01:20 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 16:01:20 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:01:20 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:01:20 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:01:21 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3f7a4053, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@139da1f5]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 16:01:21 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 16:01:21 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 16:01:21 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 16:01:21 [cluster-ClusterId{value='664bba21628d7b3fc3563e48', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:603}] to localhost:27017
2024-05-20 16:01:21 [cluster-rtt-ClusterId{value='664bba21628d7b3fc3563e48', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:602}] to localhost:27017
2024-05-20 16:01:21 [cluster-ClusterId{value='664bba21628d7b3fc3563e48', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=38178500}
2024-05-20 16:01:21 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 16:01:22 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 16:01:22 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 16:01:22 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 16:01:22 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 16:01:22 [restartedMain] INFO  : Disable delta property : false
2024-05-20 16:01:22 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 16:01:22 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 16:01:22 [restartedMain] INFO  : Application is null : false
2024-05-20 16:01:22 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 16:01:22 [restartedMain] INFO  : Application version is -1: true
2024-05-20 16:01:22 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 16:01:22 [restartedMain] INFO  : The response status is 200
2024-05-20 16:01:22 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 16:01:22 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 16:01:22 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716238882626 with initial instances count: 1
2024-05-20 16:01:22 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 16:01:22 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716238882629, current=UP, previous=STARTING]
2024-05-20 16:01:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 16:01:22 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 16:01:22 [restartedMain] INFO  : Updating port to 8081
2024-05-20 16:01:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 16:01:23 [restartedMain] INFO  : Started FinalProjectApplication in 3.655 seconds (JVM running for 4.501)
2024-05-20 16:02:28 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:604}] to localhost:27017
2024-05-20 16:02:28 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:605}] to localhost:27017
2024-05-20 16:02:28 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:606}] to localhost:27017
2024-05-20 16:04:51 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 16:04:51 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716239091217, current=DOWN, previous=UP]
2024-05-20 16:04:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 16:04:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 16:04:53 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 16:04:56 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 16:04:56 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 16:04:56 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 16:05:01 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 17972 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 16:05:01 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 16:05:01 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 16:05:01 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 16:05:02 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 16:05:02 [restartedMain] INFO  : Finished Spring Data repository scanning in 57 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 16:05:02 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 16:05:02 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:05:02 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:05:02 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:05:02 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1ffed90, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@386791aa]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 16:05:02 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 16:05:03 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 16:05:03 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 16:05:03 [cluster-ClusterId{value='664bbafe930d533dcd7d269f', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:608}] to localhost:27017
2024-05-20 16:05:03 [cluster-rtt-ClusterId{value='664bbafe930d533dcd7d269f', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:607}] to localhost:27017
2024-05-20 16:05:03 [cluster-ClusterId{value='664bbafe930d533dcd7d269f', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=42686800}
2024-05-20 16:05:03 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 16:05:04 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 16:05:04 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 16:05:04 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 16:05:04 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 16:05:04 [restartedMain] INFO  : Disable delta property : false
2024-05-20 16:05:04 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 16:05:04 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 16:05:04 [restartedMain] INFO  : Application is null : false
2024-05-20 16:05:04 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 16:05:04 [restartedMain] INFO  : Application version is -1: true
2024-05-20 16:05:04 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 16:05:04 [restartedMain] INFO  : The response status is 200
2024-05-20 16:05:04 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 16:05:04 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 16:05:04 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716239104456 with initial instances count: 2
2024-05-20 16:05:04 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 16:05:04 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716239104458, current=UP, previous=STARTING]
2024-05-20 16:05:04 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 16:05:04 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 16:05:04 [restartedMain] INFO  : Updating port to 8081
2024-05-20 16:05:04 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 16:05:04 [restartedMain] INFO  : Started FinalProjectApplication in 3.656 seconds (JVM running for 4.491)
2024-05-20 16:05:29 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:609}] to localhost:27017
2024-05-20 16:05:29 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:610}] to localhost:27017
2024-05-20 16:05:29 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:611}] to localhost:27017
2024-05-20 16:07:37 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 16:07:37 [Thread-1] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 16:07:37 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716239257536, current=DOWN, previous=UP]
2024-05-20 16:07:37 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 16:07:37 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 16:07:39 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 16:07:42 [Thread-1] INFO  : Unregistering ...
2024-05-20 16:07:42 [Thread-1] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 16:07:42 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 16:07:43 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 17972 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 16:07:43 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 16:07:43 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 16:07:43 [restartedMain] INFO  : Finished Spring Data repository scanning in 33 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 16:07:43 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 16:07:43 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:07:43 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:07:43 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:07:43 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@6b424ad, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@386791aa]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 16:07:43 [cluster-ClusterId{value='664bbb9f930d533dcd7d26a0', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:612}] to localhost:27017
2024-05-20 16:07:43 [cluster-rtt-ClusterId{value='664bbb9f930d533dcd7d26a0', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:613}] to localhost:27017
2024-05-20 16:07:43 [cluster-ClusterId{value='664bbb9f930d533dcd7d26a0', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1922700}
2024-05-20 16:07:43 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 16:07:43 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 16:07:43 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 16:07:43 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 16:07:44 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 16:07:44 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 16:07:44 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 16:07:44 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 16:07:44 [restartedMain] INFO  : Disable delta property : false
2024-05-20 16:07:44 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 16:07:44 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 16:07:44 [restartedMain] INFO  : Application is null : false
2024-05-20 16:07:44 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 16:07:44 [restartedMain] INFO  : Application version is -1: true
2024-05-20 16:07:44 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 16:07:44 [restartedMain] INFO  : The response status is 200
2024-05-20 16:07:44 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 16:07:44 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 16:07:44 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716239264447 with initial instances count: 2
2024-05-20 16:07:44 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 16:07:44 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716239264448, current=UP, previous=STARTING]
2024-05-20 16:07:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 16:07:44 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 16:07:44 [restartedMain] INFO  : Updating port to 8081
2024-05-20 16:07:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 16:07:44 [restartedMain] INFO  : Started FinalProjectApplication in 2.112 seconds (JVM running for 164.542)
2024-05-20 16:07:44 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 16:07:45 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 16:07:45 [Thread-10] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 16:07:45 [Thread-10] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716239265141, current=DOWN, previous=UP]
2024-05-20 16:07:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 16:07:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 16:07:47 [Thread-10] INFO  : Shutting down DiscoveryClient ...
2024-05-20 16:07:50 [Thread-10] INFO  : Unregistering ...
2024-05-20 16:07:50 [Thread-10] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 16:07:50 [Thread-10] INFO  : Completed shut down of DiscoveryClient
2024-05-20 16:07:50 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 17972 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 16:07:50 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 16:07:50 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 16:07:50 [restartedMain] INFO  : Finished Spring Data repository scanning in 38 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 16:07:50 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 16:07:50 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:07:50 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:07:50 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:07:50 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@7f5ee729, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@386791aa]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 16:07:50 [cluster-ClusterId{value='664bbba6930d533dcd7d26a1', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:8, serverValue:614}] to localhost:27017
2024-05-20 16:07:50 [cluster-ClusterId{value='664bbba6930d533dcd7d26a1', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4085900}
2024-05-20 16:07:50 [cluster-rtt-ClusterId{value='664bbba6930d533dcd7d26a1', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:9, serverValue:615}] to localhost:27017
2024-05-20 16:07:50 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 16:07:50 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 16:07:51 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 16:07:51 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 16:07:51 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 16:07:51 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 16:07:51 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 16:07:51 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 16:07:51 [restartedMain] INFO  : Disable delta property : false
2024-05-20 16:07:51 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 16:07:51 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 16:07:51 [restartedMain] INFO  : Application is null : false
2024-05-20 16:07:51 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 16:07:51 [restartedMain] INFO  : Application version is -1: true
2024-05-20 16:07:51 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 16:07:51 [restartedMain] INFO  : The response status is 200
2024-05-20 16:07:51 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 16:07:51 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 16:07:51 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716239271693 with initial instances count: 2
2024-05-20 16:07:51 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 16:07:51 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716239271693, current=UP, previous=STARTING]
2024-05-20 16:07:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 16:07:51 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 16:07:51 [restartedMain] INFO  : Updating port to 8081
2024-05-20 16:07:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 16:07:52 [restartedMain] INFO  : Started FinalProjectApplication in 1.73 seconds (JVM running for 171.719)
2024-05-20 16:07:52 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 16:07:56 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 16:07:56 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716239276618, current=DOWN, previous=UP]
2024-05-20 16:07:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 16:07:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 16:07:58 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 16:08:01 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 16:08:01 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 16:08:01 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 16:08:07 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 8968 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 16:08:07 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 16:08:07 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 16:08:07 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 16:08:08 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 16:08:08 [restartedMain] INFO  : Finished Spring Data repository scanning in 85 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 16:08:09 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 16:08:09 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:08:09 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:08:09 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:08:09 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@189976f0, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@48eeb9d4]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 16:08:09 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 16:08:09 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 16:08:09 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 16:08:09 [cluster-rtt-ClusterId{value='664bbbb919c7221f6a0fd274', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:617}] to localhost:27017
2024-05-20 16:08:09 [cluster-ClusterId{value='664bbbb919c7221f6a0fd274', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:616}] to localhost:27017
2024-05-20 16:08:09 [cluster-ClusterId{value='664bbbb919c7221f6a0fd274', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=50787900}
2024-05-20 16:08:10 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 16:08:10 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 16:08:11 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 16:08:11 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 16:08:11 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 16:08:11 [restartedMain] INFO  : Disable delta property : false
2024-05-20 16:08:11 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 16:08:11 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 16:08:11 [restartedMain] INFO  : Application is null : false
2024-05-20 16:08:11 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 16:08:11 [restartedMain] INFO  : Application version is -1: true
2024-05-20 16:08:11 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 16:08:11 [restartedMain] INFO  : The response status is 200
2024-05-20 16:08:11 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 16:08:11 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 16:08:11 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716239291383 with initial instances count: 2
2024-05-20 16:08:11 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 16:08:11 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716239291385, current=UP, previous=STARTING]
2024-05-20 16:08:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 16:08:11 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 16:08:11 [restartedMain] INFO  : Updating port to 8081
2024-05-20 16:08:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 16:08:11 [restartedMain] INFO  : Started FinalProjectApplication in 4.802 seconds (JVM running for 5.922)
2024-05-20 16:13:11 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 16:14:48 [File Watcher] INFO  : Restarting due to 2 class path changes (0 additions, 2 deletions, 0 modifications)
2024-05-20 16:14:48 [Thread-1] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 16:14:48 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716239688780, current=DOWN, previous=UP]
2024-05-20 16:14:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 16:14:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 16:14:50 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 16:14:53 [Thread-1] INFO  : Unregistering ...
2024-05-20 16:14:53 [Thread-1] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 16:14:53 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 16:14:54 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 8968 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 16:14:54 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 16:14:54 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 16:14:54 [restartedMain] INFO  : Finished Spring Data repository scanning in 25 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 16:14:54 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 16:14:54 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:14:54 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:14:54 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:14:54 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@168d9bcb, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@48eeb9d4]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 16:14:54 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 16:14:54 [cluster-ClusterId{value='664bbd4e19c7221f6a0fd275', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:3, serverValue:618}] to localhost:27017
2024-05-20 16:14:54 [cluster-rtt-ClusterId{value='664bbd4e19c7221f6a0fd275', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:619}] to localhost:27017
2024-05-20 16:14:54 [cluster-ClusterId{value='664bbd4e19c7221f6a0fd275', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3260000}
2024-05-20 16:14:54 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 16:14:54 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 16:14:55 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 16:14:55 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 16:14:55 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 16:14:55 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 16:14:55 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 16:14:55 [restartedMain] INFO  : Disable delta property : false
2024-05-20 16:14:55 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 16:14:55 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 16:14:55 [restartedMain] INFO  : Application is null : false
2024-05-20 16:14:55 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 16:14:55 [restartedMain] INFO  : Application version is -1: true
2024-05-20 16:14:55 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 16:14:55 [restartedMain] INFO  : The response status is 200
2024-05-20 16:14:55 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 16:14:55 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 16:14:55 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716239695533 with initial instances count: 2
2024-05-20 16:14:55 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 16:14:55 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716239695534, current=UP, previous=STARTING]
2024-05-20 16:14:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 16:14:55 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 16:14:55 [restartedMain] INFO  : Updating port to 8081
2024-05-20 16:14:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 16:14:55 [restartedMain] INFO  : Started FinalProjectApplication in 1.951 seconds (JVM running for 410.058)
2024-05-20 16:14:55 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 16:14:56 [File Watcher] INFO  : Restarting due to 2 class path changes (2 additions, 0 deletions, 0 modifications)
2024-05-20 16:14:56 [Thread-8] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 16:14:56 [Thread-8] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716239696288, current=DOWN, previous=UP]
2024-05-20 16:14:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 16:14:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 16:14:58 [Thread-8] INFO  : Shutting down DiscoveryClient ...
2024-05-20 16:15:01 [Thread-8] INFO  : Unregistering ...
2024-05-20 16:15:01 [Thread-8] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 16:15:01 [Thread-8] INFO  : Completed shut down of DiscoveryClient
2024-05-20 16:15:01 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 8968 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 16:15:01 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 16:15:01 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 16:15:01 [restartedMain] INFO  : Finished Spring Data repository scanning in 30 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 16:15:02 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 16:15:02 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:15:02 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:15:02 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:15:02 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@52d700e, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@48eeb9d4]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 16:15:02 [cluster-ClusterId{value='664bbd5619c7221f6a0fd276', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:5, serverValue:620}] to localhost:27017
2024-05-20 16:15:02 [cluster-ClusterId{value='664bbd5619c7221f6a0fd276', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3608800}
2024-05-20 16:15:02 [cluster-rtt-ClusterId{value='664bbd5619c7221f6a0fd276', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:621}] to localhost:27017
2024-05-20 16:15:02 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 16:15:02 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 16:15:02 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 16:15:02 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 16:15:03 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 16:15:03 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 16:15:03 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 16:15:03 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 16:15:03 [restartedMain] INFO  : Disable delta property : false
2024-05-20 16:15:03 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 16:15:03 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 16:15:03 [restartedMain] INFO  : Application is null : false
2024-05-20 16:15:03 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 16:15:03 [restartedMain] INFO  : Application version is -1: true
2024-05-20 16:15:03 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 16:15:03 [restartedMain] INFO  : The response status is 200
2024-05-20 16:15:03 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 16:15:03 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 16:15:03 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716239703076 with initial instances count: 2
2024-05-20 16:15:03 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 16:15:03 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716239703077, current=UP, previous=STARTING]
2024-05-20 16:15:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 16:15:03 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 16:15:03 [restartedMain] INFO  : Updating port to 8081
2024-05-20 16:15:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 16:15:03 [restartedMain] INFO  : Started FinalProjectApplication in 2.012 seconds (JVM running for 417.635)
2024-05-20 16:15:03 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 16:20:03 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 16:22:07 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 16:22:07 [Thread-22] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 16:22:07 [Thread-22] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716240127981, current=DOWN, previous=UP]
2024-05-20 16:22:07 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 16:22:07 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 16:22:10 [Thread-22] INFO  : Shutting down DiscoveryClient ...
2024-05-20 16:22:13 [Thread-22] INFO  : Unregistering ...
2024-05-20 16:22:13 [Thread-22] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 16:22:13 [Thread-22] INFO  : Completed shut down of DiscoveryClient
2024-05-20 16:22:13 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 8968 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 16:22:13 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 16:22:13 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 16:22:13 [restartedMain] INFO  : Finished Spring Data repository scanning in 29 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 16:22:13 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 16:22:13 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:22:13 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:22:13 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:22:13 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@70b81b41, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@48eeb9d4]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 16:22:13 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 16:22:13 [cluster-ClusterId{value='664bbf0519c7221f6a0fd277', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:623}] to localhost:27017
2024-05-20 16:22:13 [cluster-rtt-ClusterId{value='664bbf0519c7221f6a0fd277', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:8, serverValue:622}] to localhost:27017
2024-05-20 16:22:13 [cluster-ClusterId{value='664bbf0519c7221f6a0fd277', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2825000}
2024-05-20 16:22:13 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 16:22:13 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 16:22:14 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 16:22:14 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 16:22:14 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 16:22:14 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 16:22:14 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 16:22:14 [restartedMain] INFO  : Disable delta property : false
2024-05-20 16:22:14 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 16:22:14 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 16:22:14 [restartedMain] INFO  : Application is null : false
2024-05-20 16:22:14 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 16:22:14 [restartedMain] INFO  : Application version is -1: true
2024-05-20 16:22:14 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 16:22:14 [restartedMain] INFO  : The response status is 200
2024-05-20 16:22:14 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 16:22:14 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 16:22:14 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716240134897 with initial instances count: 2
2024-05-20 16:22:14 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 16:22:14 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716240134899, current=UP, previous=STARTING]
2024-05-20 16:22:14 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 16:22:14 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 16:22:14 [restartedMain] INFO  : Updating port to 8081
2024-05-20 16:22:14 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 16:22:15 [restartedMain] INFO  : Started FinalProjectApplication in 2.223 seconds (JVM running for 849.519)
2024-05-20 16:22:15 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 16:22:15 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 16:22:15 [Thread-36] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 16:22:15 [Thread-36] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716240135582, current=DOWN, previous=UP]
2024-05-20 16:22:15 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 16:22:15 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 16:22:17 [Thread-36] INFO  : Shutting down DiscoveryClient ...
2024-05-20 16:22:20 [Thread-36] INFO  : Unregistering ...
2024-05-20 16:22:20 [Thread-36] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 16:22:20 [Thread-36] INFO  : Completed shut down of DiscoveryClient
2024-05-20 16:22:21 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 8968 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 16:22:21 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 16:22:21 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 16:22:21 [restartedMain] INFO  : Finished Spring Data repository scanning in 28 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 16:22:21 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 16:22:21 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:22:21 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:22:21 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:22:21 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@6bbd6d9, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@48eeb9d4]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 16:22:21 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 16:22:21 [cluster-ClusterId{value='664bbf0d19c7221f6a0fd278', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:9, serverValue:624}] to localhost:27017
2024-05-20 16:22:21 [cluster-ClusterId{value='664bbf0d19c7221f6a0fd278', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2761400}
2024-05-20 16:22:21 [cluster-rtt-ClusterId{value='664bbf0d19c7221f6a0fd278', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:10, serverValue:625}] to localhost:27017
2024-05-20 16:22:21 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 16:22:21 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 16:22:22 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 16:22:22 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 16:22:22 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 16:22:22 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 16:22:22 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 16:22:22 [restartedMain] INFO  : Disable delta property : false
2024-05-20 16:22:22 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 16:22:22 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 16:22:22 [restartedMain] INFO  : Application is null : false
2024-05-20 16:22:22 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 16:22:22 [restartedMain] INFO  : Application version is -1: true
2024-05-20 16:22:22 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 16:22:22 [restartedMain] INFO  : The response status is 200
2024-05-20 16:22:22 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 16:22:22 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 16:22:22 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716240142633 with initial instances count: 2
2024-05-20 16:22:22 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 16:22:22 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716240142634, current=UP, previous=STARTING]
2024-05-20 16:22:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 16:22:22 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 16:22:22 [restartedMain] INFO  : Updating port to 8081
2024-05-20 16:22:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 16:22:23 [restartedMain] INFO  : Started FinalProjectApplication in 2.352 seconds (JVM running for 857.254)
2024-05-20 16:22:23 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 16:22:53 [nioEventLoopGroup-11-4] INFO  : Opened connection [connectionId{localValue:12, serverValue:627}] to localhost:27017
2024-05-20 16:22:53 [nioEventLoopGroup-11-3] INFO  : Opened connection [connectionId{localValue:11, serverValue:626}] to localhost:27017
2024-05-20 16:22:53 [nioEventLoopGroup-11-5] INFO  : Opened connection [connectionId{localValue:13, serverValue:628}] to localhost:27017
2024-05-20 16:25:47 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 16:25:47 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716240347766, current=DOWN, previous=UP]
2024-05-20 16:25:47 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 16:25:47 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 16:25:49 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 16:25:52 [DiscoveryClient-0] WARN  : task supervisor shutting down, can't accept the task
2024-05-20 16:25:52 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 16:25:52 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 16:25:52 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 16:25:58 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 17520 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 16:25:58 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 16:25:58 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 16:25:58 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 16:25:58 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 16:25:58 [restartedMain] INFO  : Finished Spring Data repository scanning in 56 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 16:25:58 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 16:25:58 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:25:58 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:25:58 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:25:59 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@129c5416, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@722f311a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 16:25:59 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 16:25:59 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 16:25:59 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 16:25:59 [cluster-ClusterId{value='664bbfe70a74955b34ee72df', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:629}] to localhost:27017
2024-05-20 16:25:59 [cluster-rtt-ClusterId{value='664bbfe70a74955b34ee72df', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:630}] to localhost:27017
2024-05-20 16:25:59 [cluster-ClusterId{value='664bbfe70a74955b34ee72df', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=47592300}
2024-05-20 16:25:59 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 16:26:00 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 16:26:00 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 16:26:00 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 16:26:00 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 16:26:00 [restartedMain] INFO  : Disable delta property : false
2024-05-20 16:26:00 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 16:26:00 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 16:26:00 [restartedMain] INFO  : Application is null : false
2024-05-20 16:26:00 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 16:26:00 [restartedMain] INFO  : Application version is -1: true
2024-05-20 16:26:00 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 16:26:00 [restartedMain] INFO  : The response status is 200
2024-05-20 16:26:00 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 16:26:00 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 16:26:00 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716240360869 with initial instances count: 2
2024-05-20 16:26:00 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 16:26:00 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716240360871, current=UP, previous=STARTING]
2024-05-20 16:26:00 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 16:26:00 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 16:26:00 [restartedMain] INFO  : Updating port to 8081
2024-05-20 16:26:00 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 16:26:01 [restartedMain] INFO  : Started FinalProjectApplication in 3.978 seconds (JVM running for 4.877)
2024-05-20 16:26:27 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:632}] to localhost:27017
2024-05-20 16:26:27 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:631}] to localhost:27017
2024-05-20 16:26:27 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:633}] to localhost:27017
2024-05-20 16:27:45 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 16:27:45 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716240465723, current=DOWN, previous=UP]
2024-05-20 16:27:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 16:27:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 16:27:47 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 16:27:50 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 16:27:50 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 16:27:50 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 16:27:56 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 27776 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 16:27:56 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 16:27:56 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 16:27:56 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 16:27:56 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 16:27:56 [restartedMain] INFO  : Finished Spring Data repository scanning in 57 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 16:27:57 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 16:27:57 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:27:57 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:27:57 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:27:57 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@4c98a71d, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7c52cd98]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 16:27:57 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 16:27:57 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 16:27:57 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 16:27:57 [cluster-ClusterId{value='664bc05d81a05f200fef0c03', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:634}] to localhost:27017
2024-05-20 16:27:57 [cluster-rtt-ClusterId{value='664bc05d81a05f200fef0c03', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:635}] to localhost:27017
2024-05-20 16:27:57 [cluster-ClusterId{value='664bc05d81a05f200fef0c03', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=38275200}
2024-05-20 16:27:58 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 16:27:58 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 16:27:58 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 16:27:58 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 16:27:58 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 16:27:58 [restartedMain] INFO  : Disable delta property : false
2024-05-20 16:27:58 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 16:27:58 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 16:27:58 [restartedMain] INFO  : Application is null : false
2024-05-20 16:27:58 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 16:27:58 [restartedMain] INFO  : Application version is -1: true
2024-05-20 16:27:58 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 16:27:58 [restartedMain] INFO  : The response status is 200
2024-05-20 16:27:58 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 16:27:58 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 16:27:58 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716240478945 with initial instances count: 2
2024-05-20 16:27:58 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 16:27:58 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716240478946, current=UP, previous=STARTING]
2024-05-20 16:27:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 16:27:58 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 16:27:58 [restartedMain] INFO  : Updating port to 8081
2024-05-20 16:27:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 16:27:59 [restartedMain] INFO  : Started FinalProjectApplication in 3.676 seconds (JVM running for 4.531)
2024-05-20 16:28:02 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:637}] to localhost:27017
2024-05-20 16:28:02 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:636}] to localhost:27017
2024-05-20 16:28:02 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:638}] to localhost:27017
2024-05-20 16:29:01 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 16:29:01 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716240541210, current=DOWN, previous=UP]
2024-05-20 16:29:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 16:29:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 16:29:03 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 16:29:06 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 16:29:06 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 16:29:06 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 16:29:09 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 4276 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 16:29:09 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 16:29:09 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 16:29:09 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 16:29:10 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 16:29:10 [restartedMain] INFO  : Finished Spring Data repository scanning in 57 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 16:29:10 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 16:29:10 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:29:10 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:29:10 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:29:10 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@5c0f8344, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5c3b2a78]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 16:29:10 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 16:29:10 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 16:29:10 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 16:29:10 [cluster-ClusterId{value='664bc0a69b7ee24e76ef08ca', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:639}] to localhost:27017
2024-05-20 16:29:10 [cluster-rtt-ClusterId{value='664bc0a69b7ee24e76ef08ca', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:640}] to localhost:27017
2024-05-20 16:29:10 [cluster-ClusterId{value='664bc0a69b7ee24e76ef08ca', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=44202300}
2024-05-20 16:29:11 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 16:29:12 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 16:29:12 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 16:29:12 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 16:29:12 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 16:29:12 [restartedMain] INFO  : Disable delta property : false
2024-05-20 16:29:12 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 16:29:12 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 16:29:12 [restartedMain] INFO  : Application is null : false
2024-05-20 16:29:12 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 16:29:12 [restartedMain] INFO  : Application version is -1: true
2024-05-20 16:29:12 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 16:29:12 [restartedMain] INFO  : The response status is 200
2024-05-20 16:29:12 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 16:29:12 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 16:29:12 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716240552449 with initial instances count: 2
2024-05-20 16:29:12 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 16:29:12 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716240552451, current=UP, previous=STARTING]
2024-05-20 16:29:12 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 16:29:12 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 16:29:12 [restartedMain] INFO  : Updating port to 8081
2024-05-20 16:29:12 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 16:29:12 [restartedMain] INFO  : Started FinalProjectApplication in 3.937 seconds (JVM running for 5.567)
2024-05-20 16:29:18 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:641}] to localhost:27017
2024-05-20 16:29:18 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:642}] to localhost:27017
2024-05-20 16:29:18 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:643}] to localhost:27017
2024-05-20 16:29:54 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 16:29:54 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716240594694, current=DOWN, previous=UP]
2024-05-20 16:29:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 16:29:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 16:29:56 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 16:29:59 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 16:29:59 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 16:29:59 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 16:30:04 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 12120 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 16:30:04 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 16:30:04 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 16:30:04 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 16:30:05 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 16:30:05 [restartedMain] INFO  : Finished Spring Data repository scanning in 54 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 16:30:05 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 16:30:05 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:30:05 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:30:05 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:30:05 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@65bcc81e, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3a8ee7bc]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 16:30:05 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 16:30:05 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 16:30:05 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 16:30:05 [cluster-rtt-ClusterId{value='664bc0ddcdf5a43174c0baca', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:645}] to localhost:27017
2024-05-20 16:30:05 [cluster-ClusterId{value='664bc0ddcdf5a43174c0baca', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:644}] to localhost:27017
2024-05-20 16:30:05 [cluster-ClusterId{value='664bc0ddcdf5a43174c0baca', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=43283300}
2024-05-20 16:30:06 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 16:30:07 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 16:30:07 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 16:30:07 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 16:30:07 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 16:30:07 [restartedMain] INFO  : Disable delta property : false
2024-05-20 16:30:07 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 16:30:07 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 16:30:07 [restartedMain] INFO  : Application is null : false
2024-05-20 16:30:07 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 16:30:07 [restartedMain] INFO  : Application version is -1: true
2024-05-20 16:30:07 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 16:30:07 [restartedMain] INFO  : The response status is 200
2024-05-20 16:30:07 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 16:30:07 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 16:30:07 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716240607472 with initial instances count: 2
2024-05-20 16:30:07 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 16:30:07 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716240607474, current=UP, previous=STARTING]
2024-05-20 16:30:07 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 16:30:07 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 16:30:07 [restartedMain] INFO  : Updating port to 8081
2024-05-20 16:30:07 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 16:30:07 [restartedMain] INFO  : Started FinalProjectApplication in 4.026 seconds (JVM running for 4.887)
2024-05-20 16:30:22 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:646}] to localhost:27017
2024-05-20 16:30:22 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:647}] to localhost:27017
2024-05-20 16:30:22 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:648}] to localhost:27017
2024-05-20 16:32:31 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 16:32:31 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716240751573, current=DOWN, previous=UP]
2024-05-20 16:32:31 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 16:32:31 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 16:32:33 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 16:32:36 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 16:32:36 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 16:32:36 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 16:32:42 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 11212 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 16:32:42 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 16:32:42 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 16:32:42 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 16:32:43 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 16:32:43 [restartedMain] INFO  : Finished Spring Data repository scanning in 57 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 16:32:43 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 16:32:43 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:32:43 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:32:43 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 16:32:43 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1ed34bda, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e1a5deb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 16:32:43 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 16:32:44 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 16:32:44 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 16:32:44 [cluster-ClusterId{value='664bc17b0c4261607d6b9d35', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:651}] to localhost:27017
2024-05-20 16:32:44 [cluster-rtt-ClusterId{value='664bc17b0c4261607d6b9d35', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:650}] to localhost:27017
2024-05-20 16:32:44 [cluster-ClusterId{value='664bc17b0c4261607d6b9d35', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=42036700}
2024-05-20 16:32:44 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 16:32:45 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 16:32:45 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 16:32:45 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 16:32:45 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 16:32:45 [restartedMain] INFO  : Disable delta property : false
2024-05-20 16:32:45 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 16:32:45 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 16:32:45 [restartedMain] INFO  : Application is null : false
2024-05-20 16:32:45 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 16:32:45 [restartedMain] INFO  : Application version is -1: true
2024-05-20 16:32:45 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 16:32:45 [restartedMain] INFO  : The response status is 200
2024-05-20 16:32:45 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 16:32:45 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 16:32:45 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716240765500 with initial instances count: 2
2024-05-20 16:32:45 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 16:32:45 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716240765502, current=UP, previous=STARTING]
2024-05-20 16:32:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 16:32:45 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 16:32:45 [restartedMain] INFO  : Updating port to 8081
2024-05-20 16:32:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 16:32:45 [restartedMain] INFO  : Started FinalProjectApplication in 3.828 seconds (JVM running for 4.694)
2024-05-20 17:20:48 [File Watcher] INFO  : Restarting due to 2 class path changes (0 additions, 2 deletions, 0 modifications)
2024-05-20 17:20:48 [Thread-1] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 17:20:48 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716243648261, current=DOWN, previous=UP]
2024-05-20 17:20:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 17:20:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 17:20:50 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 17:20:53 [Thread-1] INFO  : Unregistering ...
2024-05-20 17:20:53 [Thread-1] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 17:20:53 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 17:20:53 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 11212 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 17:20:53 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 17:20:54 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 17:20:54 [restartedMain] INFO  : Finished Spring Data repository scanning in 61 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 17:20:54 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 17:20:54 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 17:20:54 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 17:20:54 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 17:20:54 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@7b3614a1, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e1a5deb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 17:20:54 [cluster-rtt-ClusterId{value='664bccc60c4261607d6b9d36', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:652}] to localhost:27017
2024-05-20 17:20:54 [cluster-ClusterId{value='664bccc60c4261607d6b9d36', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:3, serverValue:653}] to localhost:27017
2024-05-20 17:20:54 [cluster-ClusterId{value='664bccc60c4261607d6b9d36', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=7411400}
2024-05-20 17:20:54 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 17:20:54 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 17:20:54 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 17:20:55 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 17:20:55 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 17:20:55 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 17:20:55 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 17:20:55 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 17:20:55 [restartedMain] INFO  : Disable delta property : false
2024-05-20 17:20:55 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 17:20:55 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 17:20:55 [restartedMain] INFO  : Application is null : false
2024-05-20 17:20:55 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 17:20:55 [restartedMain] INFO  : Application version is -1: true
2024-05-20 17:20:55 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 17:20:55 [restartedMain] INFO  : The response status is 200
2024-05-20 17:20:55 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 17:20:55 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 17:20:55 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716243655921 with initial instances count: 2
2024-05-20 17:20:55 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 17:20:55 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716243655923, current=UP, previous=STARTING]
2024-05-20 17:20:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 17:20:55 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 17:20:55 [restartedMain] INFO  : Updating port to 8081
2024-05-20 17:20:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 17:20:56 [File Watcher] INFO  : Restarting due to 2 class path changes (2 additions, 0 deletions, 0 modifications)
2024-05-20 17:20:56 [restartedMain] INFO  : Started FinalProjectApplication in 2.974 seconds (JVM running for 2895.207)
2024-05-20 17:20:56 [Thread-8] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 17:20:56 [Thread-8] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716243656441, current=DOWN, previous=UP]
2024-05-20 17:20:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 17:20:56 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 17:20:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 17:20:58 [Thread-8] INFO  : Shutting down DiscoveryClient ...
2024-05-20 17:21:01 [Thread-8] INFO  : Unregistering ...
2024-05-20 17:21:01 [Thread-8] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 17:21:01 [Thread-8] INFO  : Completed shut down of DiscoveryClient
2024-05-20 17:21:01 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 11212 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 17:21:01 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 17:21:02 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 17:21:02 [restartedMain] INFO  : Finished Spring Data repository scanning in 41 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 17:21:02 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 17:21:02 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 17:21:02 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 17:21:02 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 17:21:02 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@496cbfdd, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e1a5deb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 17:21:02 [cluster-rtt-ClusterId{value='664bccce0c4261607d6b9d37', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:654}] to localhost:27017
2024-05-20 17:21:02 [cluster-ClusterId{value='664bccce0c4261607d6b9d37', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:5, serverValue:655}] to localhost:27017
2024-05-20 17:21:02 [cluster-ClusterId{value='664bccce0c4261607d6b9d37', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2682200}
2024-05-20 17:21:02 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 17:21:02 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 17:21:02 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 17:21:02 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 17:21:03 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 17:21:03 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 17:21:03 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 17:21:03 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 17:21:03 [restartedMain] INFO  : Disable delta property : false
2024-05-20 17:21:03 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 17:21:03 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 17:21:03 [restartedMain] INFO  : Application is null : false
2024-05-20 17:21:03 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 17:21:03 [restartedMain] INFO  : Application version is -1: true
2024-05-20 17:21:03 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 17:21:03 [restartedMain] INFO  : The response status is 200
2024-05-20 17:21:03 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 17:21:03 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 17:21:03 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716243663340 with initial instances count: 2
2024-05-20 17:21:03 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 17:21:03 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716243663342, current=UP, previous=STARTING]
2024-05-20 17:21:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 17:21:03 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 17:21:03 [restartedMain] INFO  : Updating port to 8081
2024-05-20 17:21:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 17:21:03 [restartedMain] INFO  : Started FinalProjectApplication in 2.18 seconds (JVM running for 2902.566)
2024-05-20 17:21:03 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 17:26:03 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 17:31:03 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 17:34:03 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 17:34:03 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716244443682, current=DOWN, previous=UP]
2024-05-20 17:34:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 17:34:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 17:34:05 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 17:34:08 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 17:34:08 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 17:34:08 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 17:34:12 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 28696 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 17:34:12 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 17:34:12 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 17:34:12 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 17:34:12 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 17:34:12 [restartedMain] INFO  : Finished Spring Data repository scanning in 60 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 17:34:12 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 17:34:12 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 17:34:12 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 17:34:12 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 17:34:13 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@42aa6e31, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@35817cce]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 17:34:13 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 17:34:13 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 17:34:13 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 17:34:13 [cluster-rtt-ClusterId{value='664bcfe5b3512d67aaa819e5', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:657}] to localhost:27017
2024-05-20 17:34:13 [cluster-ClusterId{value='664bcfe5b3512d67aaa819e5', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:656}] to localhost:27017
2024-05-20 17:34:13 [cluster-ClusterId{value='664bcfe5b3512d67aaa819e5', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=41830900}
2024-05-20 17:34:14 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 17:34:14 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 17:34:14 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 17:34:14 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 17:34:14 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 17:34:14 [restartedMain] INFO  : Disable delta property : false
2024-05-20 17:34:14 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 17:34:14 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 17:34:14 [restartedMain] INFO  : Application is null : false
2024-05-20 17:34:14 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 17:34:14 [restartedMain] INFO  : Application version is -1: true
2024-05-20 17:34:14 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 17:34:14 [restartedMain] INFO  : The response status is 200
2024-05-20 17:34:14 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 17:34:14 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 17:34:14 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716244454795 with initial instances count: 2
2024-05-20 17:34:14 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 17:34:14 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716244454797, current=UP, previous=STARTING]
2024-05-20 17:34:14 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 17:34:14 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 17:34:14 [restartedMain] INFO  : Updating port to 8081
2024-05-20 17:34:14 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 17:34:15 [restartedMain] INFO  : Started FinalProjectApplication in 4.107 seconds (JVM running for 5.407)
2024-05-20 17:37:13 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:659}] to localhost:27017
2024-05-20 17:37:13 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:660}] to localhost:27017
2024-05-20 17:37:13 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:661}] to localhost:27017
2024-05-20 17:39:14 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 17:42:00 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 17:42:00 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716244920657, current=DOWN, previous=UP]
2024-05-20 17:42:00 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 17:42:00 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 17:42:02 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 17:42:05 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 17:42:05 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 17:42:05 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 17:42:11 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 1676 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 17:42:11 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 17:42:11 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 17:42:11 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 17:42:11 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 17:42:11 [restartedMain] INFO  : Finished Spring Data repository scanning in 64 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 17:42:11 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 17:42:11 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 17:42:11 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 17:42:11 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 17:42:12 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@9bec64c, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7a2178bb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 17:42:12 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 17:42:12 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 17:42:12 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 17:42:12 [cluster-ClusterId{value='664bd1c46062d254a7546196', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:663}] to localhost:27017
2024-05-20 17:42:12 [cluster-rtt-ClusterId{value='664bd1c46062d254a7546196', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:662}] to localhost:27017
2024-05-20 17:42:12 [cluster-ClusterId{value='664bd1c46062d254a7546196', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=41855300}
2024-05-20 17:42:12 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 17:42:13 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 17:42:13 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 17:42:13 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 17:42:13 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 17:42:13 [restartedMain] INFO  : Disable delta property : false
2024-05-20 17:42:13 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 17:42:13 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 17:42:13 [restartedMain] INFO  : Application is null : false
2024-05-20 17:42:13 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 17:42:13 [restartedMain] INFO  : Application version is -1: true
2024-05-20 17:42:13 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 17:42:13 [restartedMain] INFO  : The response status is 200
2024-05-20 17:42:13 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 17:42:13 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 17:42:13 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716244933785 with initial instances count: 2
2024-05-20 17:42:13 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 17:42:13 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716244933787, current=UP, previous=STARTING]
2024-05-20 17:42:13 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 17:42:13 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 17:42:13 [restartedMain] INFO  : Updating port to 8081
2024-05-20 17:42:13 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 17:42:14 [restartedMain] INFO  : Started FinalProjectApplication in 3.871 seconds (JVM running for 4.719)
2024-05-20 17:42:35 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:664}] to localhost:27017
2024-05-20 17:42:35 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:665}] to localhost:27017
2024-05-20 17:42:35 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:666}] to localhost:27017
2024-05-20 17:47:13 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 17:47:23 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 17:47:23 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716245243189, current=DOWN, previous=UP]
2024-05-20 17:47:23 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 17:47:23 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 17:47:25 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 17:47:28 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 17:47:28 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 17:47:28 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 17:47:34 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 17884 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 17:47:34 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 17:47:34 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 17:47:34 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 17:47:34 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 17:47:34 [restartedMain] INFO  : Finished Spring Data repository scanning in 71 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 17:47:35 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 17:47:35 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 17:47:35 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 17:47:35 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 17:47:35 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@29b8fe1b, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@1d6c7b51]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 17:47:35 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 17:47:35 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 17:47:35 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 17:47:35 [cluster-rtt-ClusterId{value='664bd30756dcc1614aa56de4', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:668}] to localhost:27017
2024-05-20 17:47:35 [cluster-ClusterId{value='664bd30756dcc1614aa56de4', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:667}] to localhost:27017
2024-05-20 17:47:35 [cluster-ClusterId{value='664bd30756dcc1614aa56de4', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=44905300}
2024-05-20 17:47:36 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 17:47:36 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 17:47:36 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 17:47:36 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 17:47:36 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 17:47:36 [restartedMain] INFO  : Disable delta property : false
2024-05-20 17:47:36 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 17:47:36 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 17:47:36 [restartedMain] INFO  : Application is null : false
2024-05-20 17:47:36 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 17:47:36 [restartedMain] INFO  : Application version is -1: true
2024-05-20 17:47:36 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 17:47:37 [restartedMain] INFO  : The response status is 200
2024-05-20 17:47:37 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 17:47:37 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 17:47:37 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716245257297 with initial instances count: 1
2024-05-20 17:47:37 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 17:47:37 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716245257299, current=UP, previous=STARTING]
2024-05-20 17:47:37 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 17:47:37 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 17:47:37 [restartedMain] INFO  : Updating port to 8081
2024-05-20 17:47:37 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 17:47:37 [restartedMain] INFO  : Started FinalProjectApplication in 4.373 seconds (JVM running for 5.384)
2024-05-20 17:48:01 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:670}] to localhost:27017
2024-05-20 17:48:01 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:669}] to localhost:27017
2024-05-20 17:48:01 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:671}] to localhost:27017
2024-05-20 17:52:36 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 17:53:11 [File Watcher] INFO  : Restarting due to 21 class path changes (0 additions, 21 deletions, 0 modifications)
2024-05-20 17:53:11 [Thread-1] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 17:53:11 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716245591447, current=DOWN, previous=UP]
2024-05-20 17:53:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 17:53:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 17:53:13 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 17:53:16 [Thread-1] INFO  : Unregistering ...
2024-05-20 17:53:16 [Thread-1] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 17:53:16 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 17:53:16 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 17884 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 17:53:16 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 17:53:17 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 17:53:17 [restartedMain] INFO  : Finished Spring Data repository scanning in 25 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 17:53:17 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 17:53:17 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 17:53:17 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 17:53:17 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 17:53:17 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@7d31e420, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@1d6c7b51]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 17:53:17 [cluster-ClusterId{value='664bd45d56dcc1614aa56de5', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:673}] to localhost:27017
2024-05-20 17:53:17 [cluster-rtt-ClusterId{value='664bd45d56dcc1614aa56de5', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:672}] to localhost:27017
2024-05-20 17:53:17 [cluster-ClusterId{value='664bd45d56dcc1614aa56de5', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1916200}
2024-05-20 17:53:17 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 17:53:17 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 17:53:17 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 17:53:17 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 17:53:18 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 17:53:18 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 17:53:18 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 17:53:18 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 17:53:18 [restartedMain] INFO  : Disable delta property : false
2024-05-20 17:53:18 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 17:53:18 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 17:53:18 [restartedMain] INFO  : Application is null : false
2024-05-20 17:53:18 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 17:53:18 [restartedMain] INFO  : Application version is -1: true
2024-05-20 17:53:18 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 17:53:18 [restartedMain] INFO  : The response status is 200
2024-05-20 17:53:18 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 17:53:18 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 17:53:18 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716245598059 with initial instances count: 2
2024-05-20 17:53:18 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 17:53:18 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716245598060, current=UP, previous=STARTING]
2024-05-20 17:53:18 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 17:53:18 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 17:53:18 [restartedMain] INFO  : Updating port to 8081
2024-05-20 17:53:18 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 17:53:18 [restartedMain] INFO  : Started FinalProjectApplication in 1.774 seconds (JVM running for 346.056)
2024-05-20 17:53:18 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 17:53:18 [File Watcher] INFO  : Restarting due to 21 class path changes (21 additions, 0 deletions, 0 modifications)
2024-05-20 17:53:18 [Thread-10] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 17:53:18 [Thread-10] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716245598862, current=DOWN, previous=UP]
2024-05-20 17:53:18 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 17:53:18 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 17:53:20 [Thread-10] INFO  : Shutting down DiscoveryClient ...
2024-05-20 17:53:23 [Thread-10] INFO  : Unregistering ...
2024-05-20 17:53:23 [Thread-10] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 17:53:23 [Thread-10] INFO  : Completed shut down of DiscoveryClient
2024-05-20 17:53:24 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 17884 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 17:53:24 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 17:53:24 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 17:53:24 [restartedMain] INFO  : Finished Spring Data repository scanning in 24 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 17:53:24 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 17:53:24 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 17:53:24 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 17:53:24 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 17:53:24 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@4a4554e0, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@1d6c7b51]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 17:53:24 [cluster-ClusterId{value='664bd46456dcc1614aa56de6', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:8, serverValue:674}] to localhost:27017
2024-05-20 17:53:24 [cluster-ClusterId{value='664bd46456dcc1614aa56de6', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3318400}
2024-05-20 17:53:24 [cluster-rtt-ClusterId{value='664bd46456dcc1614aa56de6', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:9, serverValue:675}] to localhost:27017
2024-05-20 17:53:24 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 17:53:24 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 17:53:24 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 17:53:24 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 17:53:25 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 17:53:25 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 17:53:25 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 17:53:25 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 17:53:25 [restartedMain] INFO  : Disable delta property : false
2024-05-20 17:53:25 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 17:53:25 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 17:53:25 [restartedMain] INFO  : Application is null : false
2024-05-20 17:53:25 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 17:53:25 [restartedMain] INFO  : Application version is -1: true
2024-05-20 17:53:25 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 17:53:25 [restartedMain] INFO  : The response status is 200
2024-05-20 17:53:25 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 17:53:25 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 17:53:25 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716245605312 with initial instances count: 2
2024-05-20 17:53:25 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 17:53:25 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716245605313, current=UP, previous=STARTING]
2024-05-20 17:53:25 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 17:53:25 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 17:53:25 [restartedMain] INFO  : Updating port to 8081
2024-05-20 17:53:25 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 17:53:25 [restartedMain] INFO  : Started FinalProjectApplication in 1.663 seconds (JVM running for 353.301)
2024-05-20 17:53:25 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 17:54:22 [SpringApplicationShutdownHook] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 17:54:22 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716245662912, current=DOWN, previous=UP]
2024-05-20 17:54:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 17:54:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 17:54:25 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 17:54:28 [DiscoveryClient-0] WARN  : task supervisor shutting down, can't accept the task
2024-05-20 17:54:28 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 17:54:28 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 17:54:28 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 18:02:50 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 27624 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 18:02:50 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 18:02:50 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 18:02:50 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 18:02:51 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 18:02:51 [restartedMain] INFO  : Finished Spring Data repository scanning in 67 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 18:02:51 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 18:02:51 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 18:02:51 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 18:02:51 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 18:02:51 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@51d74689, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2bccccb6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 18:02:51 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 18:02:51 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 18:02:52 [cluster-ClusterId{value='664bd69bf547b17e50500cfe', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:677}] to localhost:27017
2024-05-20 18:02:52 [cluster-rtt-ClusterId{value='664bd69bf547b17e50500cfe', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:676}] to localhost:27017
2024-05-20 18:02:52 [cluster-ClusterId{value='664bd69bf547b17e50500cfe', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=45790200}
2024-05-20 18:02:52 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 18:02:52 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 18:02:53 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 18:02:53 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 18:02:53 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 18:02:53 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 18:02:53 [restartedMain] INFO  : Disable delta property : false
2024-05-20 18:02:53 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 18:02:53 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 18:02:53 [restartedMain] INFO  : Application is null : false
2024-05-20 18:02:53 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 18:02:53 [restartedMain] INFO  : Application version is -1: true
2024-05-20 18:02:53 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 18:02:54 [restartedMain] INFO  : The response status is 200
2024-05-20 18:02:54 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 18:02:54 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 18:02:54 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716246174204 with initial instances count: 1
2024-05-20 18:02:54 [restartedMain] INFO  : Registering application PRODUCTSERVICE with eureka with status UP
2024-05-20 18:02:54 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716246174217, current=UP, previous=STARTING]
2024-05-20 18:02:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 18:02:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 18:02:54 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 18:02:54 [restartedMain] INFO  : Updating port to 8081
2024-05-20 18:02:54 [restartedMain] INFO  : Started FinalProjectApplication in 5.534 seconds (JVM running for 6.742)
2024-05-20 18:03:13 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:678}] to localhost:27017
2024-05-20 18:03:13 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:679}] to localhost:27017
2024-05-20 18:03:13 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:680}] to localhost:27017
2024-05-20 18:07:53 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 18:12:53 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 18:15:27 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-05-20 18:15:27 [Thread-1] INFO  : Unregistering application PRODUCTSERVICE with eureka with status DOWN
2024-05-20 18:15:27 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716246927695, current=DOWN, previous=UP]
2024-05-20 18:15:27 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081: registering service...
2024-05-20 18:15:27 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - registration status: 204
2024-05-20 18:15:29 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 18:15:32 [Thread-1] INFO  : Unregistering ...
2024-05-20 18:15:32 [Thread-1] INFO  : DiscoveryClient_PRODUCTSERVICE/192.168.0.11:productService:8081 - deregister  status: 200
2024-05-20 18:15:32 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 18:15:33 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 27624 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts)
2024-05-20 18:15:33 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 18:15:33 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 18:15:33 [restartedMain] INFO  : Finished Spring Data repository scanning in 35 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 18:15:33 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 18:15:33 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 18:15:33 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 18:15:33 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 18:15:33 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@35bce3e5, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2bccccb6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 18:15:33 [cluster-rtt-ClusterId{value='664bd995f547b17e50500d03', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:682}] to localhost:27017
2024-05-20 18:15:33 [cluster-ClusterId{value='664bd995f547b17e50500d03', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:681}] to localhost:27017
2024-05-20 18:15:33 [cluster-ClusterId{value='664bd995f547b17e50500d03', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4010600}
2024-05-20 18:15:33 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 18:15:33 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 18:15:33 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 18:15:34 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 18:15:34 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 18:15:35 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 18:15:35 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 18:15:35 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 18:15:35 [restartedMain] INFO  : Disable delta property : false
2024-05-20 18:15:35 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 18:15:35 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 18:15:35 [restartedMain] INFO  : Application is null : false
2024-05-20 18:15:35 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 18:15:35 [restartedMain] INFO  : Application version is -1: true
2024-05-20 18:15:35 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 18:15:35 [restartedMain] INFO  : The response status is 200
2024-05-20 18:15:35 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 18:15:35 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 18:15:35 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716246935062 with initial instances count: 2
2024-05-20 18:15:35 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-20 18:15:35 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716246935064, current=UP, previous=STARTING]
2024-05-20 18:15:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService: registering service...
2024-05-20 18:15:35 [restartedMain] INFO  : Netty started on port 8080
2024-05-20 18:15:35 [restartedMain] INFO  : Updating port to 8080
2024-05-20 18:15:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - registration status: 204
2024-05-20 18:15:35 [restartedMain] INFO  : Started FinalProjectApplication in 2.551 seconds (JVM running for 767.219)
