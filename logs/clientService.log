2024-05-20 22:46:54 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 23288 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 22:46:54 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 22:46:54 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 22:46:54 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 22:46:54 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 22:46:55 [restartedMain] INFO  : Finished Spring Data repository scanning in 125 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 22:46:55 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 22:46:55 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 22:46:55 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 22:46:55 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 22:46:55 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3a99cabf, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7f101a5a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 22:46:55 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 22:46:56 [cluster-rtt-ClusterId{value='664c192fd54d9b2176bb1533', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:699}] to localhost:27017
2024-05-20 22:46:56 [cluster-ClusterId{value='664c192fd54d9b2176bb1533', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:698}] to localhost:27017
2024-05-20 22:46:56 [cluster-ClusterId{value='664c192fd54d9b2176bb1533', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=76075000}
2024-05-20 22:46:56 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-20 22:46:56 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 22:46:56 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 22:46:56 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 22:46:57 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 22:46:57 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 22:46:57 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 22:46:57 [restartedMain] INFO  : Disable delta property : false
2024-05-20 22:46:57 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 22:46:57 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 22:46:57 [restartedMain] INFO  : Application is null : false
2024-05-20 22:46:57 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 22:46:57 [restartedMain] INFO  : Application version is -1: true
2024-05-20 22:46:57 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 22:46:57 [restartedMain] INFO  : The response status is 200
2024-05-20 22:46:57 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 22:46:57 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 22:46:57 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716263217517 with initial instances count: 0
2024-05-20 22:46:57 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-20 22:46:57 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716263217519, current=UP, previous=STARTING]
2024-05-20 22:46:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService: registering service...
2024-05-20 22:46:57 [restartedMain] INFO  : Netty started on port 8080
2024-05-20 22:46:57 [restartedMain] INFO  : Updating port to 8080
2024-05-20 22:46:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - registration status: 204
2024-05-20 22:46:57 [restartedMain] INFO  : Started FinalProjectApplication in 4.227 seconds (JVM running for 5.017)
2024-05-20 22:47:11 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 9568 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 22:47:11 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 22:47:11 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 22:47:11 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 22:47:12 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 22:47:12 [restartedMain] INFO  : Finished Spring Data repository scanning in 109 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-20 22:47:12 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-20 22:47:12 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 22:47:12 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 22:47:12 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 22:47:13 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@37b003bd, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@69ebaa6c]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 22:47:13 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 22:47:13 [cluster-rtt-ClusterId{value='664c1941f1a4ab5ee7671e2c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:700}] to localhost:27017
2024-05-20 22:47:13 [cluster-ClusterId{value='664c1941f1a4ab5ee7671e2c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:701}] to localhost:27017
2024-05-20 22:47:13 [cluster-ClusterId{value='664c1941f1a4ab5ee7671e2c', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=72053500}
2024-05-20 22:47:13 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 22:47:13 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 22:47:13 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 22:47:14 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 22:47:14 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 22:47:14 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 22:47:14 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 22:47:14 [restartedMain] INFO  : Disable delta property : false
2024-05-20 22:47:14 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 22:47:14 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 22:47:14 [restartedMain] INFO  : Application is null : false
2024-05-20 22:47:14 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 22:47:14 [restartedMain] INFO  : Application version is -1: true
2024-05-20 22:47:14 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 22:47:14 [restartedMain] INFO  : The response status is 200
2024-05-20 22:47:14 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 22:47:14 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 22:47:14 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716263234526 with initial instances count: 1
2024-05-20 22:47:14 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-20 22:47:14 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716263234528, current=UP, previous=STARTING]
2024-05-20 22:47:14 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 22:47:14 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 22:47:14 [restartedMain] INFO  : Updating port to 8081
2024-05-20 22:47:14 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 22:47:14 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.642 seconds (JVM running for 4.326)
2024-05-20 22:47:27 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Disable delta property : false
2024-05-20 22:47:27 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Single vip registry refresh property : null
2024-05-20 22:47:27 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Force full registry fetch : false
2024-05-20 22:47:27 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application is null : false
2024-05-20 22:47:27 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Registered Applications size is zero : true
2024-05-20 22:47:27 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application version is -1: false
2024-05-20 22:47:27 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Getting all instance registry info from the eureka server
2024-05-20 22:47:27 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : The response status is 200
2024-05-20 22:47:49 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:702}] to localhost:27017
2024-05-20 22:51:38 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 11240 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalClient\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 22:51:38 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 22:51:38 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 22:51:38 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 22:51:39 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 22:51:39 [restartedMain] INFO  : Finished Spring Data repository scanning in 46 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-20 22:51:39 [restartedMain] INFO  : BeanFactory id=793773eb-fca8-379f-a0ba-c7b18fda5e40
2024-05-20 22:51:39 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 22:51:39 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 22:51:39 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 22:51:39 [restartedMain] INFO  : Tomcat initialized with port(s): 8083 (http)
2024-05-20 22:51:39 [restartedMain] INFO  : Initializing ProtocolHandler ["http-nio-8083"]
2024-05-20 22:51:39 [restartedMain] INFO  : Starting service [Tomcat]
2024-05-20 22:51:39 [restartedMain] INFO  : Starting Servlet engine: [Apache Tomcat/9.0.83]
2024-05-20 22:51:39 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1baa80b1, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5646e096]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 22:51:40 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 22:51:40 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 22:51:40 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 22:51:40 [cluster-ClusterId{value='664c1a4b26d4057874324fc7', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:703}] to localhost:27017
2024-05-20 22:51:40 [cluster-rtt-ClusterId{value='664c1a4b26d4057874324fc7', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:704}] to localhost:27017
2024-05-20 22:51:40 [cluster-ClusterId{value='664c1a4b26d4057874324fc7', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=46909100}
2024-05-20 22:51:40 [nioEventLoopGroup-2-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:705}] to localhost:27017
2024-05-20 22:51:40 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 22:51:41 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 22:51:41 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 22:51:41 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 22:51:41 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 22:51:41 [restartedMain] INFO  : Disable delta property : false
2024-05-20 22:51:41 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 22:51:41 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 22:51:41 [restartedMain] INFO  : Application is null : false
2024-05-20 22:51:41 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 22:51:41 [restartedMain] INFO  : Application version is -1: true
2024-05-20 22:51:41 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 22:51:41 [restartedMain] INFO  : The response status is 200
2024-05-20 22:51:41 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 22:51:41 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 22:51:41 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716263501676 with initial instances count: 2
2024-05-20 22:51:41 [restartedMain] INFO  : Registering application CLIENTSERVICE with eureka with status UP
2024-05-20 22:51:41 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716263501679, current=UP, previous=STARTING]
2024-05-20 22:51:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083: registering service...
2024-05-20 22:51:41 [restartedMain] INFO  : Starting ProtocolHandler ["http-nio-8083"]
2024-05-20 22:51:41 [restartedMain] INFO  : Tomcat started on port(s): 8083 (http) with context path ''
2024-05-20 22:51:41 [restartedMain] INFO  : Updating port to 8083
2024-05-20 22:51:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083 - registration status: 204
2024-05-20 22:51:42 [restartedMain] INFO  : Started FinalProjectApplication in 4.063 seconds (JVM running for 4.976)
2024-05-20 22:51:57 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 22:52:14 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 22:56:15 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:706}] to localhost:27017
2024-05-20 22:56:41 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 22:56:57 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 22:57:14 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 22:59:58 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:708}] to localhost:27017
2024-05-20 22:59:58 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:707}] to localhost:27017
2024-05-20 23:00:24 [SpringApplicationShutdownHook] INFO  : Unregistering application CLIENTSERVICE with eureka with status DOWN
2024-05-20 23:00:24 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716264024265, current=DOWN, previous=UP]
2024-05-20 23:00:24 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083: registering service...
2024-05-20 23:00:24 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083 - registration status: 204
2024-05-20 23:00:26 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:00:29 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 23:00:29 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083 - deregister  status: 200
2024-05-20 23:00:29 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:00:32 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 34288 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalClient\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:00:32 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:00:32 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 23:00:32 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 23:00:32 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:00:32 [restartedMain] INFO  : Finished Spring Data repository scanning in 50 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-20 23:00:33 [restartedMain] INFO  : BeanFactory id=793773eb-fca8-379f-a0ba-c7b18fda5e40
2024-05-20 23:00:33 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:00:33 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:00:33 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:00:33 [restartedMain] INFO  : Tomcat initialized with port(s): 8083 (http)
2024-05-20 23:00:33 [restartedMain] INFO  : Initializing ProtocolHandler ["http-nio-8083"]
2024-05-20 23:00:33 [restartedMain] INFO  : Starting service [Tomcat]
2024-05-20 23:00:33 [restartedMain] INFO  : Starting Servlet engine: [Apache Tomcat/9.0.83]
2024-05-20 23:00:33 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@21fffcd6, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@18bf3cd]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:00:33 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:00:33 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 23:00:33 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:00:33 [cluster-ClusterId{value='664c1c6121e8777d2d443721', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:710}] to localhost:27017
2024-05-20 23:00:33 [cluster-rtt-ClusterId{value='664c1c6121e8777d2d443721', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:709}] to localhost:27017
2024-05-20 23:00:33 [cluster-ClusterId{value='664c1c6121e8777d2d443721', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=47486200}
2024-05-20 23:00:33 [nioEventLoopGroup-2-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:711}] to localhost:27017
2024-05-20 23:00:34 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:00:34 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:00:34 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:00:34 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:00:34 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:00:34 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:00:34 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:00:34 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:00:34 [restartedMain] INFO  : Application is null : false
2024-05-20 23:00:34 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:00:34 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:00:34 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:00:35 [restartedMain] INFO  : The response status is 200
2024-05-20 23:00:35 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:00:35 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:00:35 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716264035164 with initial instances count: 2
2024-05-20 23:00:35 [restartedMain] INFO  : Registering application CLIENTSERVICE with eureka with status UP
2024-05-20 23:00:35 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716264035166, current=UP, previous=STARTING]
2024-05-20 23:00:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083: registering service...
2024-05-20 23:00:35 [restartedMain] INFO  : Starting ProtocolHandler ["http-nio-8083"]
2024-05-20 23:00:35 [restartedMain] INFO  : Tomcat started on port(s): 8083 (http) with context path ''
2024-05-20 23:00:35 [restartedMain] INFO  : Updating port to 8083
2024-05-20 23:00:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083 - registration status: 204
2024-05-20 23:00:35 [restartedMain] INFO  : Started FinalProjectApplication in 3.937 seconds (JVM running for 4.82)
2024-05-20 23:00:41 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-20 23:00:41 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716264041481, current=DOWN, previous=UP]
2024-05-20 23:00:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:00:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:00:43 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:00:46 [DiscoveryClient-1] WARN  : task supervisor shutting down, can't accept the task
2024-05-20 23:00:46 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 23:00:46 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-20 23:00:46 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:00:50 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 22756 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:00:50 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:00:50 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 23:00:50 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 23:00:50 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:00:50 [restartedMain] INFO  : Finished Spring Data repository scanning in 112 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-20 23:00:51 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-20 23:00:51 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:00:51 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:00:51 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:00:51 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@6f9dd76e, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@272ed460]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:00:51 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:00:51 [cluster-ClusterId{value='664c1c737e0b607585a6519c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:713}] to localhost:27017
2024-05-20 23:00:51 [cluster-rtt-ClusterId{value='664c1c737e0b607585a6519c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:712}] to localhost:27017
2024-05-20 23:00:51 [cluster-ClusterId{value='664c1c737e0b607585a6519c', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=55616300}
2024-05-20 23:00:51 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 23:00:51 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:00:52 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:00:52 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:00:52 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:00:52 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:00:52 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:00:52 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:00:52 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:00:52 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:00:52 [restartedMain] INFO  : Application is null : false
2024-05-20 23:00:52 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:00:52 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:00:52 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:00:52 [restartedMain] INFO  : The response status is 200
2024-05-20 23:00:52 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:00:52 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:00:52 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716264052911 with initial instances count: 2
2024-05-20 23:00:52 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-20 23:00:52 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716264052913, current=UP, previous=STARTING]
2024-05-20 23:00:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:00:52 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 23:00:52 [restartedMain] INFO  : Updating port to 8081
2024-05-20 23:00:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:00:53 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.406 seconds (JVM running for 4.093)
2024-05-20 23:01:57 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:03:26 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-20 23:03:26 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716264206949, current=DOWN, previous=UP]
2024-05-20 23:03:26 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:03:26 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:03:29 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:03:32 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 23:03:32 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-20 23:03:32 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:03:36 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 27384 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:03:36 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:03:36 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 23:03:36 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 23:03:36 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:03:36 [restartedMain] INFO  : Finished Spring Data repository scanning in 128 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-20 23:03:36 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-20 23:03:36 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:03:36 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:03:36 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:03:37 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3c0a67fa, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6f9dd76e]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:03:37 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:03:37 [cluster-ClusterId{value='664c1d19bf7c72326351aa7c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:714}] to localhost:27017
2024-05-20 23:03:37 [cluster-rtt-ClusterId{value='664c1d19bf7c72326351aa7c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:715}] to localhost:27017
2024-05-20 23:03:37 [cluster-ClusterId{value='664c1d19bf7c72326351aa7c', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=57460800}
2024-05-20 23:03:37 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 23:03:37 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:03:38 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:03:38 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:03:38 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:03:38 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:03:38 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:03:38 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:03:38 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:03:38 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:03:38 [restartedMain] INFO  : Application is null : false
2024-05-20 23:03:38 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:03:38 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:03:38 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:03:38 [restartedMain] INFO  : The response status is 200
2024-05-20 23:03:38 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:03:38 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:03:38 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716264218914 with initial instances count: 3
2024-05-20 23:03:38 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-20 23:03:38 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716264218917, current=UP, previous=STARTING]
2024-05-20 23:03:38 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:03:38 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:03:38 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 23:03:38 [restartedMain] INFO  : Updating port to 8081
2024-05-20 23:03:39 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.713 seconds (JVM running for 4.417)
2024-05-20 23:03:40 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 23:03:40 [Thread-5] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-20 23:03:40 [Thread-5] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716264220847, current=DOWN, previous=UP]
2024-05-20 23:03:40 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService: registering service...
2024-05-20 23:03:40 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - registration status: 204
2024-05-20 23:03:42 [Thread-5] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:03:45 [Thread-5] INFO  : Unregistering ...
2024-05-20 23:03:45 [Thread-5] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - deregister  status: 200
2024-05-20 23:03:45 [Thread-5] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:03:46 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 23288 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:03:46 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:03:46 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:03:46 [restartedMain] INFO  : Finished Spring Data repository scanning in 25 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 23:03:46 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 23:03:46 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:03:46 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:03:46 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:03:46 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@5197f344, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7f101a5a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:03:46 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:03:46 [cluster-ClusterId{value='664c1d22d54d9b2176bb1534', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:716}] to localhost:27017
2024-05-20 23:03:46 [cluster-rtt-ClusterId{value='664c1d22d54d9b2176bb1534', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:717}] to localhost:27017
2024-05-20 23:03:46 [cluster-ClusterId{value='664c1d22d54d9b2176bb1534', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3280500}
2024-05-20 23:03:46 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-20 23:03:46 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:03:46 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:03:47 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:03:47 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:03:47 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:03:47 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:03:47 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:03:47 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:03:47 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:03:47 [restartedMain] INFO  : Application is null : false
2024-05-20 23:03:47 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:03:47 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:03:47 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:03:47 [restartedMain] INFO  : The response status is 200
2024-05-20 23:03:47 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:03:47 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:03:47 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716264227096 with initial instances count: 3
2024-05-20 23:03:47 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-20 23:03:47 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716264227098, current=UP, previous=STARTING]
2024-05-20 23:03:47 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService: registering service...
2024-05-20 23:03:47 [restartedMain] INFO  : Netty started on port 8080
2024-05-20 23:03:47 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - registration status: 204
2024-05-20 23:03:47 [restartedMain] INFO  : Updating port to 8080
2024-05-20 23:03:47 [restartedMain] INFO  : Started FinalProjectApplication in 1.224 seconds (JVM running for 1014.55)
2024-05-20 23:03:47 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 23:03:48 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 23:03:48 [Thread-15] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-20 23:03:48 [Thread-15] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716264228195, current=DOWN, previous=UP]
2024-05-20 23:03:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService: registering service...
2024-05-20 23:03:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - registration status: 204
2024-05-20 23:03:50 [Thread-15] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:03:53 [Thread-15] INFO  : Unregistering ...
2024-05-20 23:03:53 [Thread-15] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - deregister  status: 200
2024-05-20 23:03:53 [Thread-15] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:03:53 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 23288 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:03:53 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:03:53 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:03:53 [restartedMain] INFO  : Finished Spring Data repository scanning in 18 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 23:03:53 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 23:03:53 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:03:53 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:03:53 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:03:53 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@644b404a, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7f101a5a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:03:53 [cluster-ClusterId{value='664c1d29d54d9b2176bb1535', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:8, serverValue:718}] to localhost:27017
2024-05-20 23:03:53 [cluster-rtt-ClusterId{value='664c1d29d54d9b2176bb1535', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:9, serverValue:719}] to localhost:27017
2024-05-20 23:03:53 [cluster-ClusterId{value='664c1d29d54d9b2176bb1535', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1488200}
2024-05-20 23:03:53 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:03:53 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-20 23:03:53 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:03:54 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:03:54 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:03:54 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:03:54 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:03:54 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:03:54 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:03:54 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:03:54 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:03:54 [restartedMain] INFO  : Application is null : false
2024-05-20 23:03:54 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:03:54 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:03:54 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:03:54 [restartedMain] INFO  : The response status is 200
2024-05-20 23:03:54 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:03:54 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:03:54 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716264234373 with initial instances count: 3
2024-05-20 23:03:54 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-20 23:03:54 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716264234373, current=UP, previous=STARTING]
2024-05-20 23:03:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService: registering service...
2024-05-20 23:03:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - registration status: 204
2024-05-20 23:03:54 [restartedMain] INFO  : Netty started on port 8080
2024-05-20 23:03:54 [restartedMain] INFO  : Updating port to 8080
2024-05-20 23:03:54 [restartedMain] INFO  : Started FinalProjectApplication in 1.181 seconds (JVM running for 1021.859)
2024-05-20 23:03:54 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 23:04:24 [nioEventLoopGroup-7-4] INFO  : Opened connection [connectionId{localValue:11, serverValue:721}] to localhost:27017
2024-05-20 23:04:24 [nioEventLoopGroup-7-3] INFO  : Opened connection [connectionId{localValue:10, serverValue:720}] to localhost:27017
2024-05-20 23:04:24 [nioEventLoopGroup-7-5] INFO  : Opened connection [connectionId{localValue:12, serverValue:722}] to localhost:27017
2024-05-20 23:05:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:07:50 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 23:07:50 [Thread-24] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-20 23:07:50 [Thread-24] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716264470140, current=DOWN, previous=UP]
2024-05-20 23:07:50 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService: registering service...
2024-05-20 23:07:50 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - registration status: 204
2024-05-20 23:07:52 [Thread-24] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:07:55 [DiscoveryClient-0] WARN  : task supervisor shutting down, can't accept the task
2024-05-20 23:07:55 [Thread-24] INFO  : Unregistering ...
2024-05-20 23:07:55 [Thread-24] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - deregister  status: 200
2024-05-20 23:07:55 [Thread-24] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:07:55 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 23288 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:07:55 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:07:55 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:07:55 [restartedMain] INFO  : Finished Spring Data repository scanning in 17 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 23:07:55 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 23:07:55 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:07:55 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:07:55 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:07:55 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@41a2a07f, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7f101a5a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:07:55 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:07:55 [cluster-ClusterId{value='664c1e1bd54d9b2176bb1536', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:13, serverValue:724}] to localhost:27017
2024-05-20 23:07:55 [cluster-rtt-ClusterId{value='664c1e1bd54d9b2176bb1536', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:14, serverValue:723}] to localhost:27017
2024-05-20 23:07:55 [cluster-ClusterId{value='664c1e1bd54d9b2176bb1536', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1645800}
2024-05-20 23:07:55 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-20 23:07:55 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:07:56 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:07:56 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:07:56 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:07:56 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:07:56 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:07:56 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:07:56 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:07:56 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:07:56 [restartedMain] INFO  : Application is null : false
2024-05-20 23:07:56 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:07:56 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:07:56 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:07:56 [restartedMain] INFO  : The response status is 200
2024-05-20 23:07:56 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:07:56 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:07:56 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716264476435 with initial instances count: 3
2024-05-20 23:07:56 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-20 23:07:56 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716264476436, current=UP, previous=STARTING]
2024-05-20 23:07:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService: registering service...
2024-05-20 23:07:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - registration status: 204
2024-05-20 23:07:56 [restartedMain] INFO  : Netty started on port 8080
2024-05-20 23:07:56 [restartedMain] INFO  : Updating port to 8080
2024-05-20 23:07:56 [restartedMain] INFO  : Started FinalProjectApplication in 1.378 seconds (JVM running for 1263.971)
2024-05-20 23:07:56 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 23:08:38 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:10:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:12:51 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 23:12:51 [Thread-1] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-20 23:12:51 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716264771679, current=DOWN, previous=UP]
2024-05-20 23:12:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:12:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:12:53 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:12:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:12:56 [Thread-1] INFO  : Unregistering ...
2024-05-20 23:12:56 [Thread-1] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-20 23:12:56 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:12:57 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 27384 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:12:57 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:12:57 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:12:57 [restartedMain] INFO  : Finished Spring Data repository scanning in 20 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-20 23:12:57 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-20 23:12:57 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:12:57 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:12:57 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:12:57 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3b2e0883, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6f9dd76e]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:12:57 [cluster-ClusterId{value='664c1f49bf7c72326351aa7d', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:725}] to localhost:27017
2024-05-20 23:12:57 [cluster-ClusterId{value='664c1f49bf7c72326351aa7d', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1615501}
2024-05-20 23:12:57 [cluster-rtt-ClusterId{value='664c1f49bf7c72326351aa7d', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:3, serverValue:726}] to localhost:27017
2024-05-20 23:12:57 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:12:57 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 23:12:57 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:12:57 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:12:57 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:12:57 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:12:57 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:12:57 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:12:57 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:12:57 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:12:57 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:12:57 [restartedMain] INFO  : Application is null : false
2024-05-20 23:12:57 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:12:57 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:12:57 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:12:58 [restartedMain] INFO  : The response status is 200
2024-05-20 23:12:58 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:12:58 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:12:58 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716264778007 with initial instances count: 3
2024-05-20 23:12:58 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-20 23:12:58 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716264778008, current=UP, previous=STARTING]
2024-05-20 23:12:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:12:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:12:58 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 23:12:58 [restartedMain] INFO  : Updating port to 8081
2024-05-20 23:12:58 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.326 seconds (JVM running for 563.5)
2024-05-20 23:12:58 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 23:12:59 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 23:12:59 [Thread-15] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-20 23:12:59 [Thread-15] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716264779034, current=DOWN, previous=UP]
2024-05-20 23:12:59 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:12:59 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:13:01 [Thread-15] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:13:04 [Thread-15] INFO  : Unregistering ...
2024-05-20 23:13:04 [Thread-15] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-20 23:13:04 [Thread-15] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:13:04 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 27384 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:13:04 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:13:04 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:13:04 [restartedMain] INFO  : Finished Spring Data repository scanning in 21 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-20 23:13:04 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-20 23:13:04 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:13:04 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:13:04 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:13:04 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@34ffa115, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6f9dd76e]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:13:04 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:13:04 [cluster-ClusterId{value='664c1f50bf7c72326351aa7e', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:5, serverValue:728}] to localhost:27017
2024-05-20 23:13:04 [cluster-rtt-ClusterId{value='664c1f50bf7c72326351aa7e', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:727}] to localhost:27017
2024-05-20 23:13:04 [cluster-ClusterId{value='664c1f50bf7c72326351aa7e', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2549200}
2024-05-20 23:13:04 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 23:13:04 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:13:04 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:13:05 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:13:05 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:13:05 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:13:05 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:13:05 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:13:05 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:13:05 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:13:05 [restartedMain] INFO  : Application is null : false
2024-05-20 23:13:05 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:13:05 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:13:05 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:13:05 [restartedMain] INFO  : The response status is 200
2024-05-20 23:13:05 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:13:05 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:13:05 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716264785095 with initial instances count: 3
2024-05-20 23:13:05 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-20 23:13:05 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716264785096, current=UP, previous=STARTING]
2024-05-20 23:13:05 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:13:05 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:13:05 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 23:13:05 [restartedMain] INFO  : Updating port to 8081
2024-05-20 23:13:05 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.149 seconds (JVM running for 570.631)
2024-05-20 23:13:05 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 23:15:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:17:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:18:05 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:19:44 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 23:19:44 [Thread-22] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-20 23:19:44 [Thread-22] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716265184193, current=DOWN, previous=UP]
2024-05-20 23:19:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:19:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:19:46 [Thread-22] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:19:49 [Thread-22] INFO  : Unregistering ...
2024-05-20 23:19:49 [Thread-22] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-20 23:19:49 [Thread-22] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:19:49 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 27384 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:19:49 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:19:49 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:19:49 [restartedMain] INFO  : Finished Spring Data repository scanning in 12 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-20 23:19:49 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-20 23:19:49 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:19:49 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:19:49 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:19:49 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1a7d21c9, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6f9dd76e]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:19:49 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:19:49 [cluster-ClusterId{value='664c20e5bf7c72326351aa7f', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:8, serverValue:730}] to localhost:27017
2024-05-20 23:19:49 [cluster-rtt-ClusterId{value='664c20e5bf7c72326351aa7f', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:729}] to localhost:27017
2024-05-20 23:19:49 [cluster-ClusterId{value='664c20e5bf7c72326351aa7f', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2435800}
2024-05-20 23:19:49 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 23:19:49 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:19:50 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:19:50 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:19:50 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:19:50 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:19:50 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:19:50 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:19:50 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:19:50 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:19:50 [restartedMain] INFO  : Application is null : false
2024-05-20 23:19:50 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:19:50 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:19:50 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:19:50 [restartedMain] INFO  : The response status is 200
2024-05-20 23:19:50 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:19:50 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:19:50 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716265190319 with initial instances count: 3
2024-05-20 23:19:50 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-20 23:19:50 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716265190320, current=UP, previous=STARTING]
2024-05-20 23:19:50 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:19:50 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 23:19:50 [restartedMain] INFO  : Updating port to 8081
2024-05-20 23:19:50 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:19:50 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.276 seconds (JVM running for 975.892)
2024-05-20 23:19:50 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 23:19:51 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 23:19:51 [Thread-36] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-20 23:19:51 [Thread-36] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716265191422, current=DOWN, previous=UP]
2024-05-20 23:19:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:19:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:19:53 [Thread-36] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:19:56 [Thread-36] INFO  : Unregistering ...
2024-05-20 23:19:56 [Thread-36] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-20 23:19:56 [Thread-36] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:19:56 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 27384 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:19:56 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:19:56 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:19:56 [restartedMain] INFO  : Finished Spring Data repository scanning in 11 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-20 23:19:56 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-20 23:19:56 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:19:56 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:19:56 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:19:57 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@4ce999c6, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6f9dd76e]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:19:57 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:19:57 [cluster-rtt-ClusterId{value='664c20edbf7c72326351aa80', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:10, serverValue:731}] to localhost:27017
2024-05-20 23:19:57 [cluster-ClusterId{value='664c20edbf7c72326351aa80', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:9, serverValue:732}] to localhost:27017
2024-05-20 23:19:57 [cluster-ClusterId{value='664c20edbf7c72326351aa80', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3850001}
2024-05-20 23:19:57 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 23:19:57 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:19:57 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:19:57 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:19:57 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:19:57 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:19:57 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:19:57 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:19:57 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:19:57 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:19:57 [restartedMain] INFO  : Application is null : false
2024-05-20 23:19:57 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:19:57 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:19:57 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:19:57 [restartedMain] INFO  : The response status is 200
2024-05-20 23:19:57 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:19:57 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:19:57 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716265197440 with initial instances count: 3
2024-05-20 23:19:57 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-20 23:19:57 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716265197441, current=UP, previous=STARTING]
2024-05-20 23:19:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:19:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:19:57 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 23:19:57 [restartedMain] INFO  : Updating port to 8081
2024-05-20 23:19:57 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.018 seconds (JVM running for 982.883)
2024-05-20 23:19:57 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 23:20:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:22:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:24:57 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:25:13 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 23:25:13 [Thread-50] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-20 23:25:13 [Thread-50] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716265513746, current=DOWN, previous=UP]
2024-05-20 23:25:13 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:25:13 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:25:15 [Thread-50] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:25:18 [Thread-50] INFO  : Unregistering ...
2024-05-20 23:25:18 [Thread-50] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-20 23:25:18 [Thread-50] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:25:19 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 27384 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:25:19 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:25:19 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:25:19 [restartedMain] INFO  : Finished Spring Data repository scanning in 12 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-20 23:25:19 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-20 23:25:19 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:25:19 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:25:19 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:25:19 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1fded2fd, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6f9dd76e]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:25:19 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:25:19 [cluster-rtt-ClusterId{value='664c222fbf7c72326351aa81', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:12, serverValue:734}] to localhost:27017
2024-05-20 23:25:19 [cluster-ClusterId{value='664c222fbf7c72326351aa81', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:11, serverValue:733}] to localhost:27017
2024-05-20 23:25:19 [cluster-ClusterId{value='664c222fbf7c72326351aa81', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2166801}
2024-05-20 23:25:19 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 23:25:19 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:25:19 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:25:19 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:25:19 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:25:19 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:25:19 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:25:19 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:25:19 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:25:19 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:25:19 [restartedMain] INFO  : Application is null : false
2024-05-20 23:25:19 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:25:19 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:25:19 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:25:19 [restartedMain] INFO  : The response status is 200
2024-05-20 23:25:19 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:25:19 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:25:19 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716265519933 with initial instances count: 3
2024-05-20 23:25:19 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-20 23:25:19 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716265519934, current=UP, previous=STARTING]
2024-05-20 23:25:19 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:25:19 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:25:19 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 23:25:19 [restartedMain] INFO  : Updating port to 8081
2024-05-20 23:25:20 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.214 seconds (JVM running for 1305.394)
2024-05-20 23:25:20 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 23:25:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:26:09 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 23:26:09 [Thread-64] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-20 23:26:09 [Thread-64] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716265569360, current=DOWN, previous=UP]
2024-05-20 23:26:09 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:26:09 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:26:11 [Thread-64] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:26:14 [Thread-64] INFO  : Unregistering ...
2024-05-20 23:26:14 [Thread-64] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-20 23:26:14 [Thread-64] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:26:14 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 27384 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:26:14 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:26:14 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:26:15 [restartedMain] INFO  : Finished Spring Data repository scanning in 22 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-20 23:26:15 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-20 23:26:15 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:26:15 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:26:15 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:26:15 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@67d1b5e5, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6f9dd76e]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:26:15 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:26:15 [cluster-ClusterId{value='664c2267bf7c72326351aa82', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:14, serverValue:736}] to localhost:27017
2024-05-20 23:26:15 [cluster-rtt-ClusterId{value='664c2267bf7c72326351aa82', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:13, serverValue:735}] to localhost:27017
2024-05-20 23:26:15 [cluster-ClusterId{value='664c2267bf7c72326351aa82', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3209000}
2024-05-20 23:26:15 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 23:26:15 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:26:15 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:26:15 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:26:15 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:26:15 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:26:15 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:26:15 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:26:15 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:26:15 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:26:15 [restartedMain] INFO  : Application is null : false
2024-05-20 23:26:15 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:26:15 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:26:15 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:26:15 [restartedMain] INFO  : The response status is 200
2024-05-20 23:26:15 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:26:15 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:26:15 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716265575618 with initial instances count: 3
2024-05-20 23:26:15 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-20 23:26:15 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716265575618, current=UP, previous=STARTING]
2024-05-20 23:26:15 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:26:15 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:26:15 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 23:26:15 [restartedMain] INFO  : Updating port to 8081
2024-05-20 23:26:15 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.179 seconds (JVM running for 1361.092)
2024-05-20 23:26:15 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 23:26:16 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 23:26:16 [Thread-78] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-20 23:26:16 [Thread-78] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716265576706, current=DOWN, previous=UP]
2024-05-20 23:26:16 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:26:16 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:26:18 [Thread-78] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:26:21 [Thread-78] INFO  : Unregistering ...
2024-05-20 23:26:21 [Thread-78] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-20 23:26:21 [Thread-78] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:26:21 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 27384 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:26:21 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:26:22 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:26:22 [restartedMain] INFO  : Finished Spring Data repository scanning in 17 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-20 23:26:22 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-20 23:26:22 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:26:22 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:26:22 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:26:22 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@738c4fa5, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6f9dd76e]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:26:22 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:26:22 [cluster-ClusterId{value='664c226ebf7c72326351aa83', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:16, serverValue:738}] to localhost:27017
2024-05-20 23:26:22 [cluster-rtt-ClusterId{value='664c226ebf7c72326351aa83', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:15, serverValue:737}] to localhost:27017
2024-05-20 23:26:22 [cluster-ClusterId{value='664c226ebf7c72326351aa83', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1752500}
2024-05-20 23:26:22 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 23:26:22 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:26:22 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:26:22 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:26:22 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:26:22 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:26:22 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:26:22 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:26:22 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:26:22 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:26:22 [restartedMain] INFO  : Application is null : false
2024-05-20 23:26:22 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:26:22 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:26:22 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:26:22 [restartedMain] INFO  : The response status is 200
2024-05-20 23:26:22 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:26:22 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:26:22 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716265582623 with initial instances count: 3
2024-05-20 23:26:22 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-20 23:26:22 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716265582624, current=UP, previous=STARTING]
2024-05-20 23:26:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:26:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:26:22 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 23:26:22 [restartedMain] INFO  : Updating port to 8081
2024-05-20 23:26:22 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.032 seconds (JVM running for 1368.165)
2024-05-20 23:26:22 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 23:27:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:30:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:31:22 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:32:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:35:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:36:22 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:37:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:40:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:41:22 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:41:48 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-20 23:41:48 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716266508519, current=DOWN, previous=UP]
2024-05-20 23:41:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:41:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:41:50 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:41:53 [DiscoveryClient-1] WARN  : task supervisor shutting down, can't accept the task
2024-05-20 23:41:53 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 23:41:53 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-20 23:41:53 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:41:59 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 20416 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:41:59 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:41:59 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 23:41:59 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 23:42:00 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:42:00 [restartedMain] INFO  : Finished Spring Data repository scanning in 119 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-20 23:42:00 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-20 23:42:00 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:42:00 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:42:00 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:42:00 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@751f926d, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@37b003bd]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:42:01 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:42:01 [cluster-ClusterId{value='664c2618aedd022bf351e856', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:740}] to localhost:27017
2024-05-20 23:42:01 [cluster-rtt-ClusterId{value='664c2618aedd022bf351e856', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:739}] to localhost:27017
2024-05-20 23:42:01 [cluster-ClusterId{value='664c2618aedd022bf351e856', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=71817700}
2024-05-20 23:42:01 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 23:42:01 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:42:01 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:42:01 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:42:01 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:42:02 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:42:02 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:42:02 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:42:02 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:42:02 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:42:02 [restartedMain] INFO  : Application is null : false
2024-05-20 23:42:02 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:42:02 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:42:02 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:42:02 [restartedMain] INFO  : The response status is 200
2024-05-20 23:42:02 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:42:02 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:42:02 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716266522318 with initial instances count: 3
2024-05-20 23:42:02 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-20 23:42:02 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716266522319, current=UP, previous=STARTING]
2024-05-20 23:42:02 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:42:02 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:42:02 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 23:42:02 [restartedMain] INFO  : Updating port to 8081
2024-05-20 23:42:02 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.695 seconds (JVM running for 4.383)
2024-05-20 23:42:13 [nioEventLoopGroup-9-3] INFO  : Opened connection [connectionId{localValue:15, serverValue:742}] to localhost:27017
2024-05-20 23:42:13 [nioEventLoopGroup-9-4] INFO  : Opened connection [connectionId{localValue:16, serverValue:741}] to localhost:27017
2024-05-20 23:42:13 [nioEventLoopGroup-9-5] INFO  : Opened connection [connectionId{localValue:17, serverValue:743}] to localhost:27017
2024-05-20 23:42:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:45:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:47:02 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:47:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:50:35 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:52:02 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:52:18 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-20 23:52:18 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716267138526, current=DOWN, previous=UP]
2024-05-20 23:52:18 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:52:18 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:52:20 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:52:23 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 23:52:23 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-20 23:52:23 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:52:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:53:32 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 25224 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:53:32 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:53:32 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 23:53:32 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 23:53:33 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:53:33 [restartedMain] INFO  : Finished Spring Data repository scanning in 111 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-20 23:53:33 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-20 23:53:33 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:53:33 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:53:33 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:53:34 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@51805c9d, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@1f35fd69]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:53:34 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:53:34 [cluster-ClusterId{value='664c28ce6a8b7a4e732db1db', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:745}] to localhost:27017
2024-05-20 23:53:34 [cluster-rtt-ClusterId{value='664c28ce6a8b7a4e732db1db', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:744}] to localhost:27017
2024-05-20 23:53:34 [cluster-ClusterId{value='664c28ce6a8b7a4e732db1db', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=52002700}
2024-05-20 23:53:34 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 23:53:34 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:53:34 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:53:35 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:53:35 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:53:35 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:53:35 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:53:35 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:53:35 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:53:35 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:53:35 [restartedMain] INFO  : Application is null : false
2024-05-20 23:53:35 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:53:35 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:53:35 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:53:35 [restartedMain] INFO  : The response status is 200
2024-05-20 23:53:35 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:53:35 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:53:35 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716267215465 with initial instances count: 2
2024-05-20 23:53:35 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-20 23:53:35 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716267215466, current=UP, previous=STARTING]
2024-05-20 23:53:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:53:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:53:35 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 23:53:35 [restartedMain] INFO  : Updating port to 8081
2024-05-20 23:53:35 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.351 seconds (JVM running for 4.009)
2024-05-20 23:55:34 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-20 23:55:34 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716267334401, current=DOWN, previous=UP]
2024-05-20 23:55:34 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:55:34 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:55:35 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:55:36 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:55:39 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 23:55:39 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-20 23:55:39 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:55:43 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 15716 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:55:43 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:55:43 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 23:55:43 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 23:55:44 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:55:44 [restartedMain] INFO  : Finished Spring Data repository scanning in 104 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-20 23:55:44 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-20 23:55:44 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:55:44 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:55:44 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:55:44 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@157a4260, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2c12d70d]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:55:44 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:55:44 [cluster-rtt-ClusterId{value='664c2950c26dd26370779ecb', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:746}] to localhost:27017
2024-05-20 23:55:44 [cluster-ClusterId{value='664c2950c26dd26370779ecb', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:747}] to localhost:27017
2024-05-20 23:55:44 [cluster-ClusterId{value='664c2950c26dd26370779ecb', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=45426700}
2024-05-20 23:55:44 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 23:55:45 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:55:45 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:55:45 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:55:45 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:55:45 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:55:45 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:55:45 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:55:45 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:55:45 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:55:45 [restartedMain] INFO  : Application is null : false
2024-05-20 23:55:45 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:55:45 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:55:45 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:55:46 [restartedMain] INFO  : The response status is 200
2024-05-20 23:55:46 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:55:46 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:55:46 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716267346157 with initial instances count: 3
2024-05-20 23:55:46 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-20 23:55:46 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716267346160, current=UP, previous=STARTING]
2024-05-20 23:55:46 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:55:46 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 23:55:46 [restartedMain] INFO  : Updating port to 8081
2024-05-20 23:55:46 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:55:46 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.41 seconds (JVM running for 4.054)
2024-05-20 23:55:50 [reactor-http-nio-3] ERROR : [6b1106e5-1]  500 Server Error for HTTP POST "/transactions/create"
java.lang.IllegalArgumentException: Not enough variable values available to expand 'accountNumber'
	at org.springframework.web.util.UriComponents$VarArgsTemplateVariables.getValue(UriComponents.java:370)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler project.transactionsservice.application.controller.TransactionsController#createTransactions(TransactionDTO) [DispatcherHandler]
	*__checkpoint ⇢ HTTP POST "/transactions/create" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.web.util.UriComponents$VarArgsTemplateVariables.getValue(UriComponents.java:370)
		at org.springframework.web.util.UriComponents.expandUriComponent(UriComponents.java:263)
		at org.springframework.web.util.HierarchicalUriComponents$FullPathComponent.expand(HierarchicalUriComponents.java:923)
		at org.springframework.web.util.HierarchicalUriComponents.expandInternal(HierarchicalUriComponents.java:440)
		at org.springframework.web.util.HierarchicalUriComponents.expandInternal(HierarchicalUriComponents.java:53)
		at org.springframework.web.util.UriComponents.expand(UriComponents.java:172)
		at org.springframework.web.util.DefaultUriBuilderFactory$DefaultUriBuilder.build(DefaultUriBuilderFactory.java:403)
		at org.springframework.web.util.DefaultUriBuilderFactory.expand(DefaultUriBuilderFactory.java:154)
		at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultRequestBodyUriSpec.uri(DefaultWebClient.java:196)
		at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultRequestBodyUriSpec.uri(DefaultWebClient.java:163)
		at project.transactionsservice.infrastructure.servicecalls.AccountService.updateAccount(AccountService.java:34)
		at project.transactionsservice.domain.strategies.TransactionsStrategies.lambda$depositAndWithdrawalStrategy$1(TransactionsStrategies.java:48)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:113)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2400)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:238)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:200)
		at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:57)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:439)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:493)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:768)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-20 23:57:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:58:52 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-20 23:58:52 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716267532105, current=DOWN, previous=UP]
2024-05-20 23:58:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:58:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:58:54 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:58:57 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 23:58:57 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-20 23:58:57 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:59:00 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 26140 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:59:00 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:59:00 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 23:59:00 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 23:59:01 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:59:01 [restartedMain] INFO  : Finished Spring Data repository scanning in 118 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-20 23:59:01 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-20 23:59:01 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:59:01 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:59:01 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:59:02 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@157a4260, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2c12d70d]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:59:02 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:59:02 [cluster-ClusterId{value='664c2a168a1db6648db074c5', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:748}] to localhost:27017
2024-05-20 23:59:02 [cluster-rtt-ClusterId{value='664c2a168a1db6648db074c5', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:749}] to localhost:27017
2024-05-20 23:59:02 [cluster-ClusterId{value='664c2a168a1db6648db074c5', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=58443701}
2024-05-20 23:59:02 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 23:59:02 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:59:02 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:59:03 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:59:03 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:59:03 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:59:03 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:59:03 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:59:03 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:59:03 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:59:03 [restartedMain] INFO  : Application is null : false
2024-05-20 23:59:03 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:59:03 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:59:03 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:59:03 [restartedMain] INFO  : The response status is 200
2024-05-20 23:59:03 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:59:03 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:59:03 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716267543401 with initial instances count: 2
2024-05-20 23:59:03 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-20 23:59:03 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716267543403, current=UP, previous=STARTING]
2024-05-20 23:59:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:59:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:59:03 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 23:59:03 [restartedMain] INFO  : Updating port to 8081
2024-05-20 23:59:03 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.259 seconds (JVM running for 3.906)
2024-05-20 23:59:11 [reactor-http-nio-3] ERROR : [4f0a9514-1]  500 Server Error for HTTP POST "/transactions/create"
java.lang.IllegalArgumentException: Not enough variable values available to expand 'accountNumber'
	at org.springframework.web.util.UriComponents$VarArgsTemplateVariables.getValue(UriComponents.java:370)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler project.transactionsservice.application.controller.TransactionsController#createTransactions(TransactionDTO) [DispatcherHandler]
	*__checkpoint ⇢ HTTP POST "/transactions/create" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.web.util.UriComponents$VarArgsTemplateVariables.getValue(UriComponents.java:370)
		at org.springframework.web.util.UriComponents.expandUriComponent(UriComponents.java:263)
		at org.springframework.web.util.HierarchicalUriComponents$FullPathComponent.expand(HierarchicalUriComponents.java:923)
		at org.springframework.web.util.HierarchicalUriComponents.expandInternal(HierarchicalUriComponents.java:440)
		at org.springframework.web.util.HierarchicalUriComponents.expandInternal(HierarchicalUriComponents.java:53)
		at org.springframework.web.util.UriComponents.expand(UriComponents.java:172)
		at org.springframework.web.util.DefaultUriBuilderFactory$DefaultUriBuilder.build(DefaultUriBuilderFactory.java:403)
		at org.springframework.web.util.DefaultUriBuilderFactory.expand(DefaultUriBuilderFactory.java:154)
		at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultRequestBodyUriSpec.uri(DefaultWebClient.java:196)
		at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultRequestBodyUriSpec.uri(DefaultWebClient.java:163)
		at project.transactionsservice.infrastructure.servicecalls.AccountService.updateAccount(AccountService.java:34)
		at project.transactionsservice.domain.strategies.TransactionsStrategies.lambda$depositAndWithdrawalStrategy$1(TransactionsStrategies.java:48)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:113)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2400)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:238)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:200)
		at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:57)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:439)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:493)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:768)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 00:00:35 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:00:46 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 00:00:46 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716267646935, current=DOWN, previous=UP]
2024-05-21 00:00:46 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:00:46 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:00:49 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 00:00:52 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 00:00:52 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 00:00:52 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 00:00:55 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 27548 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 00:00:55 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 00:00:55 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 00:00:55 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 00:00:56 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 00:00:56 [restartedMain] INFO  : Finished Spring Data repository scanning in 115 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 00:00:56 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-21 00:00:56 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:00:56 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:00:56 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:00:56 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3acd735d, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@41337b9c]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 00:00:56 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:00:56 [cluster-rtt-ClusterId{value='664c2a889bebe36e0318e602', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:750}] to localhost:27017
2024-05-21 00:00:56 [cluster-ClusterId{value='664c2a889bebe36e0318e602', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:751}] to localhost:27017
2024-05-21 00:00:56 [cluster-ClusterId{value='664c2a889bebe36e0318e602', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=64560400}
2024-05-21 00:00:57 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 00:00:57 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:00:57 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 00:00:57 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 00:00:57 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 00:00:57 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 00:00:57 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:00:57 [restartedMain] INFO  : Disable delta property : false
2024-05-21 00:00:57 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 00:00:57 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 00:00:57 [restartedMain] INFO  : Application is null : false
2024-05-21 00:00:57 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 00:00:57 [restartedMain] INFO  : Application version is -1: true
2024-05-21 00:00:57 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 00:00:58 [restartedMain] INFO  : The response status is 200
2024-05-21 00:00:58 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 00:00:58 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 00:00:58 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716267658204 with initial instances count: 3
2024-05-21 00:00:58 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 00:00:58 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716267658206, current=UP, previous=STARTING]
2024-05-21 00:00:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:00:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:00:58 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 00:00:58 [restartedMain] INFO  : Updating port to 8081
2024-05-21 00:00:58 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.293 seconds (JVM running for 3.921)
2024-05-21 00:02:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:05:35 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:05:57 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:06:49 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-21 00:06:49 [Thread-1] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 00:06:49 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268009057, current=DOWN, previous=UP]
2024-05-21 00:06:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:06:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:06:51 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-21 00:06:54 [Thread-1] INFO  : Unregistering ...
2024-05-21 00:06:54 [Thread-1] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 00:06:54 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-21 00:06:54 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 27548 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 00:06:54 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 00:06:54 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 00:06:54 [restartedMain] INFO  : Finished Spring Data repository scanning in 18 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 00:06:54 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-21 00:06:54 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:06:54 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:06:54 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:06:54 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@796b960f, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@41337b9c]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 00:06:54 [cluster-ClusterId{value='664c2bee9bebe36e0318e603', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:3, serverValue:758}] to localhost:27017
2024-05-21 00:06:54 [cluster-rtt-ClusterId{value='664c2bee9bebe36e0318e603', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:757}] to localhost:27017
2024-05-21 00:06:54 [cluster-ClusterId{value='664c2bee9bebe36e0318e603', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1811900}
2024-05-21 00:06:54 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:06:54 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 00:06:54 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:06:54 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 00:06:55 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 00:06:55 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 00:06:55 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 00:06:55 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:06:55 [restartedMain] INFO  : Disable delta property : false
2024-05-21 00:06:55 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 00:06:55 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 00:06:55 [restartedMain] INFO  : Application is null : false
2024-05-21 00:06:55 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 00:06:55 [restartedMain] INFO  : Application version is -1: true
2024-05-21 00:06:55 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 00:06:55 [restartedMain] INFO  : The response status is 200
2024-05-21 00:06:55 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 00:06:55 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 00:06:55 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716268015252 with initial instances count: 3
2024-05-21 00:06:55 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 00:06:55 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268015254, current=UP, previous=STARTING]
2024-05-21 00:06:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:06:55 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 00:06:55 [restartedMain] INFO  : Updating port to 8081
2024-05-21 00:06:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:06:55 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.282 seconds (JVM running for 361.051)
2024-05-21 00:06:55 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 00:06:56 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-21 00:06:56 [Thread-15] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 00:06:56 [Thread-15] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268016477, current=DOWN, previous=UP]
2024-05-21 00:06:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:06:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:06:58 [Thread-15] INFO  : Shutting down DiscoveryClient ...
2024-05-21 00:07:01 [Thread-15] INFO  : Unregistering ...
2024-05-21 00:07:01 [Thread-15] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 00:07:01 [Thread-15] INFO  : Completed shut down of DiscoveryClient
2024-05-21 00:07:01 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 27548 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 00:07:01 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 00:07:01 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 00:07:01 [restartedMain] INFO  : Finished Spring Data repository scanning in 14 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 00:07:01 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-21 00:07:01 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:07:01 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:07:01 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:07:01 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@46fbf9d, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@41337b9c]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 00:07:01 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:07:01 [cluster-ClusterId{value='664c2bf59bebe36e0318e604', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:5, serverValue:760}] to localhost:27017
2024-05-21 00:07:01 [cluster-rtt-ClusterId{value='664c2bf59bebe36e0318e604', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:759}] to localhost:27017
2024-05-21 00:07:01 [cluster-ClusterId{value='664c2bf59bebe36e0318e604', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2505600}
2024-05-21 00:07:01 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 00:07:01 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:07:02 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 00:07:02 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 00:07:02 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 00:07:02 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 00:07:02 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:07:02 [restartedMain] INFO  : Disable delta property : false
2024-05-21 00:07:02 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 00:07:02 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 00:07:02 [restartedMain] INFO  : Application is null : false
2024-05-21 00:07:02 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 00:07:02 [restartedMain] INFO  : Application version is -1: true
2024-05-21 00:07:02 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 00:07:02 [restartedMain] INFO  : The response status is 200
2024-05-21 00:07:02 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 00:07:02 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 00:07:02 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716268022298 with initial instances count: 3
2024-05-21 00:07:02 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 00:07:02 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268022299, current=UP, previous=STARTING]
2024-05-21 00:07:02 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:07:02 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:07:02 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 00:07:02 [restartedMain] INFO  : Updating port to 8081
2024-05-21 00:07:02 [restartedMain] INFO  : Started TransactionsServiceApplication in 0.879 seconds (JVM running for 367.971)
2024-05-21 00:07:02 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 00:07:17 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 00:07:17 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268037075, current=DOWN, previous=UP]
2024-05-21 00:07:17 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:07:17 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:07:19 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 00:07:22 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 00:07:22 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 00:07:22 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 00:07:26 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 8900 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 00:07:26 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 00:07:26 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 00:07:26 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 00:07:26 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 00:07:26 [restartedMain] INFO  : Finished Spring Data repository scanning in 107 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 00:07:27 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-21 00:07:27 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:07:27 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:07:27 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:07:27 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@498c1d49, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@42dd4ea6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 00:07:27 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:07:27 [cluster-ClusterId{value='664c2c0fc2147428d16ad315', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:761}] to localhost:27017
2024-05-21 00:07:27 [cluster-rtt-ClusterId{value='664c2c0fc2147428d16ad315', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:762}] to localhost:27017
2024-05-21 00:07:27 [cluster-ClusterId{value='664c2c0fc2147428d16ad315', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=52782299}
2024-05-21 00:07:27 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 00:07:27 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:07:28 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 00:07:28 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 00:07:28 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 00:07:28 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 00:07:28 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:07:28 [restartedMain] INFO  : Disable delta property : false
2024-05-21 00:07:28 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 00:07:28 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 00:07:28 [restartedMain] INFO  : Application is null : false
2024-05-21 00:07:28 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 00:07:28 [restartedMain] INFO  : Application version is -1: true
2024-05-21 00:07:28 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 00:07:28 [restartedMain] INFO  : The response status is 200
2024-05-21 00:07:28 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 00:07:28 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 00:07:28 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716268048801 with initial instances count: 3
2024-05-21 00:07:28 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 00:07:28 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268048803, current=UP, previous=STARTING]
2024-05-21 00:07:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:07:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:07:28 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 00:07:28 [restartedMain] INFO  : Updating port to 8081
2024-05-21 00:07:28 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.258 seconds (JVM running for 3.903)
2024-05-21 00:07:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:10:35 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:12:24 [File Watcher] INFO  : Restarting due to 2 class path changes (0 additions, 2 deletions, 0 modifications)
2024-05-21 00:12:24 [Thread-1] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 00:12:24 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268344473, current=DOWN, previous=UP]
2024-05-21 00:12:24 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:12:24 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:12:26 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-21 00:12:28 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:12:29 [DiscoveryClient-0] WARN  : task supervisor shutting down, can't accept the task
2024-05-21 00:12:29 [Thread-1] INFO  : Unregistering ...
2024-05-21 00:12:29 [Thread-1] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 00:12:29 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-21 00:12:29 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 8900 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 00:12:29 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 00:12:30 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 00:12:30 [restartedMain] INFO  : Finished Spring Data repository scanning in 15 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 00:12:30 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-21 00:12:30 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:12:30 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:12:30 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:12:30 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@36f7dd9c, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@42dd4ea6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 00:12:30 [cluster-rtt-ClusterId{value='664c2d3ec2147428d16ad316', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:764}] to localhost:27017
2024-05-21 00:12:30 [cluster-ClusterId{value='664c2d3ec2147428d16ad316', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:3, serverValue:763}] to localhost:27017
2024-05-21 00:12:30 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:12:30 [cluster-ClusterId{value='664c2d3ec2147428d16ad316', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1522401}
2024-05-21 00:12:30 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 00:12:30 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:12:30 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 00:12:30 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 00:12:30 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 00:12:30 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 00:12:30 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:12:30 [restartedMain] INFO  : Disable delta property : false
2024-05-21 00:12:30 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 00:12:30 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 00:12:30 [restartedMain] INFO  : Application is null : false
2024-05-21 00:12:30 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 00:12:30 [restartedMain] INFO  : Application version is -1: true
2024-05-21 00:12:30 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 00:12:30 [restartedMain] INFO  : The response status is 200
2024-05-21 00:12:30 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 00:12:30 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 00:12:30 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716268350555 with initial instances count: 3
2024-05-21 00:12:30 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 00:12:30 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268350556, current=UP, previous=STARTING]
2024-05-21 00:12:30 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:12:30 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:12:30 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 00:12:30 [restartedMain] INFO  : Updating port to 8081
2024-05-21 00:12:30 [restartedMain] INFO  : Started TransactionsServiceApplication in 0.973 seconds (JVM running for 305.644)
2024-05-21 00:12:30 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 00:12:31 [File Watcher] INFO  : Restarting due to 2 class path changes (2 additions, 0 deletions, 0 modifications)
2024-05-21 00:12:31 [Thread-15] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 00:12:31 [Thread-15] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268351726, current=DOWN, previous=UP]
2024-05-21 00:12:31 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:12:31 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:12:33 [Thread-15] INFO  : Shutting down DiscoveryClient ...
2024-05-21 00:12:36 [Thread-15] INFO  : Unregistering ...
2024-05-21 00:12:36 [Thread-15] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 00:12:36 [Thread-15] INFO  : Completed shut down of DiscoveryClient
2024-05-21 00:12:36 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 8900 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 00:12:36 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 00:12:37 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 00:12:37 [restartedMain] INFO  : Finished Spring Data repository scanning in 13 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 00:12:37 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-21 00:12:37 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:12:37 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:12:37 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:12:37 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@2077b206, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@42dd4ea6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 00:12:37 [cluster-rtt-ClusterId{value='664c2d45c2147428d16ad317', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:766}] to localhost:27017
2024-05-21 00:12:37 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:12:37 [cluster-ClusterId{value='664c2d45c2147428d16ad317', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:5, serverValue:765}] to localhost:27017
2024-05-21 00:12:37 [cluster-ClusterId{value='664c2d45c2147428d16ad317', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3885101}
2024-05-21 00:12:37 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 00:12:37 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:12:37 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 00:12:37 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 00:12:37 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 00:12:37 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 00:12:37 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:12:37 [restartedMain] INFO  : Disable delta property : false
2024-05-21 00:12:37 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 00:12:37 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 00:12:37 [restartedMain] INFO  : Application is null : false
2024-05-21 00:12:37 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 00:12:37 [restartedMain] INFO  : Application version is -1: true
2024-05-21 00:12:37 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 00:12:37 [restartedMain] INFO  : The response status is 200
2024-05-21 00:12:37 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 00:12:37 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 00:12:37 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716268357788 with initial instances count: 3
2024-05-21 00:12:37 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 00:12:37 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268357790, current=UP, previous=STARTING]
2024-05-21 00:12:37 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:12:37 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 00:12:37 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:12:37 [restartedMain] INFO  : Updating port to 8081
2024-05-21 00:12:37 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.103 seconds (JVM running for 312.925)
2024-05-21 00:12:37 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 00:12:43 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-21 00:12:43 [Thread-22] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 00:12:43 [Thread-22] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268363931, current=DOWN, previous=UP]
2024-05-21 00:12:43 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:12:43 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:12:46 [Thread-22] INFO  : Shutting down DiscoveryClient ...
2024-05-21 00:12:49 [Thread-22] INFO  : Unregistering ...
2024-05-21 00:12:49 [Thread-22] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 00:12:49 [Thread-22] INFO  : Completed shut down of DiscoveryClient
2024-05-21 00:12:51 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 14756 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 00:12:51 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 00:12:51 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 00:12:51 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 00:12:52 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 00:12:52 [restartedMain] INFO  : Finished Spring Data repository scanning in 108 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 00:12:52 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-21 00:12:52 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:12:52 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:12:52 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:12:53 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@272ed460, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@191f541c]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 00:12:53 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:12:53 [cluster-ClusterId{value='664c2d552b9c78777daefa99', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:768}] to localhost:27017
2024-05-21 00:12:53 [cluster-rtt-ClusterId{value='664c2d552b9c78777daefa99', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:767}] to localhost:27017
2024-05-21 00:12:53 [cluster-ClusterId{value='664c2d552b9c78777daefa99', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=56578001}
2024-05-21 00:12:53 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 00:12:53 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:12:53 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 00:12:53 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 00:12:54 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 00:12:54 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 00:12:54 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:12:54 [restartedMain] INFO  : Disable delta property : false
2024-05-21 00:12:54 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 00:12:54 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 00:12:54 [restartedMain] INFO  : Application is null : false
2024-05-21 00:12:54 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 00:12:54 [restartedMain] INFO  : Application version is -1: true
2024-05-21 00:12:54 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 00:12:54 [restartedMain] INFO  : The response status is 200
2024-05-21 00:12:54 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 00:12:54 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 00:12:54 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716268374381 with initial instances count: 3
2024-05-21 00:12:54 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 00:12:54 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268374383, current=UP, previous=STARTING]
2024-05-21 00:12:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:12:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:12:54 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 00:12:54 [restartedMain] INFO  : Updating port to 8081
2024-05-21 00:12:54 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.355 seconds (JVM running for 4.171)
2024-05-21 00:12:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:13:29 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 00:13:29 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268409735, current=DOWN, previous=UP]
2024-05-21 00:13:29 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:13:29 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:13:31 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 00:13:34 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 00:13:34 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 00:13:34 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 00:13:38 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 17740 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 00:13:38 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 00:13:38 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 00:13:38 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 00:13:39 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 00:13:39 [restartedMain] INFO  : Finished Spring Data repository scanning in 104 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 00:13:39 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-21 00:13:39 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:13:39 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:13:39 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:13:39 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3acd735d, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@41337b9c]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 00:13:39 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:13:40 [cluster-rtt-ClusterId{value='664c2d83f4c9105cab006076', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:769}] to localhost:27017
2024-05-21 00:13:40 [cluster-ClusterId{value='664c2d83f4c9105cab006076', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:770}] to localhost:27017
2024-05-21 00:13:40 [cluster-ClusterId{value='664c2d83f4c9105cab006076', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=52724101}
2024-05-21 00:13:40 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 00:13:40 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:13:40 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 00:13:40 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 00:13:40 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 00:13:40 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 00:13:40 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:13:40 [restartedMain] INFO  : Disable delta property : false
2024-05-21 00:13:40 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 00:13:40 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 00:13:40 [restartedMain] INFO  : Application is null : false
2024-05-21 00:13:40 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 00:13:40 [restartedMain] INFO  : Application version is -1: true
2024-05-21 00:13:40 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 00:13:41 [restartedMain] INFO  : The response status is 200
2024-05-21 00:13:41 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 00:13:41 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 00:13:41 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716268421255 with initial instances count: 3
2024-05-21 00:13:41 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 00:13:41 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268421257, current=UP, previous=STARTING]
2024-05-21 00:13:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:13:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:13:41 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 00:13:41 [restartedMain] INFO  : Updating port to 8081
2024-05-21 00:13:41 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.262 seconds (JVM running for 3.888)
2024-05-21 00:15:35 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:17:28 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 00:17:28 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268648200, current=DOWN, previous=UP]
2024-05-21 00:17:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:17:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:17:30 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 00:17:33 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 00:17:33 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 00:17:33 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 00:17:37 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 8864 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 00:17:37 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 00:17:37 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 00:17:37 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 00:17:37 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 00:17:38 [restartedMain] INFO  : Finished Spring Data repository scanning in 105 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 00:17:38 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-21 00:17:38 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:17:38 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:17:38 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:17:38 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@46d760d3, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7ddbfb7a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 00:17:38 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:17:38 [cluster-ClusterId{value='664c2e72abaedb38d0202eea', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:772}] to localhost:27017
2024-05-21 00:17:38 [cluster-rtt-ClusterId{value='664c2e72abaedb38d0202eea', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:771}] to localhost:27017
2024-05-21 00:17:38 [cluster-ClusterId{value='664c2e72abaedb38d0202eea', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=53004199}
2024-05-21 00:17:38 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 00:17:38 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:17:39 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 00:17:39 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 00:17:39 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 00:17:39 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 00:17:39 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:17:39 [restartedMain] INFO  : Disable delta property : false
2024-05-21 00:17:39 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 00:17:39 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 00:17:39 [restartedMain] INFO  : Application is null : false
2024-05-21 00:17:39 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 00:17:39 [restartedMain] INFO  : Application version is -1: true
2024-05-21 00:17:39 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 00:17:40 [restartedMain] INFO  : The response status is 200
2024-05-21 00:17:40 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 00:17:40 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 00:17:40 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716268660063 with initial instances count: 3
2024-05-21 00:17:40 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 00:17:40 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268660065, current=UP, previous=STARTING]
2024-05-21 00:17:40 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:17:40 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:17:40 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 00:17:40 [restartedMain] INFO  : Updating port to 8081
2024-05-21 00:17:40 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.31 seconds (JVM running for 3.971)
2024-05-21 00:17:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:18:20 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-21 00:18:20 [Thread-1] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 00:18:20 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268700920, current=DOWN, previous=UP]
2024-05-21 00:18:20 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:18:20 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:18:23 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-21 00:18:26 [Thread-1] INFO  : Unregistering ...
2024-05-21 00:18:26 [Thread-1] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 00:18:26 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-21 00:18:26 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 8864 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 00:18:26 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 00:18:26 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 00:18:26 [restartedMain] INFO  : Finished Spring Data repository scanning in 24 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 00:18:26 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-21 00:18:26 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:18:26 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:18:26 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:18:26 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1dd20591, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7ddbfb7a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 00:18:26 [cluster-rtt-ClusterId{value='664c2ea2abaedb38d0202eeb', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:773}] to localhost:27017
2024-05-21 00:18:26 [cluster-ClusterId{value='664c2ea2abaedb38d0202eeb', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:3, serverValue:774}] to localhost:27017
2024-05-21 00:18:26 [cluster-ClusterId{value='664c2ea2abaedb38d0202eeb', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2042500}
2024-05-21 00:18:26 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:18:26 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 00:18:26 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:18:26 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 00:18:26 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 00:18:27 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 00:18:27 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 00:18:27 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:18:27 [restartedMain] INFO  : Disable delta property : false
2024-05-21 00:18:27 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 00:18:27 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 00:18:27 [restartedMain] INFO  : Application is null : false
2024-05-21 00:18:27 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 00:18:27 [restartedMain] INFO  : Application version is -1: true
2024-05-21 00:18:27 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 00:18:27 [restartedMain] INFO  : The response status is 200
2024-05-21 00:18:27 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 00:18:27 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 00:18:27 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716268707059 with initial instances count: 3
2024-05-21 00:18:27 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 00:18:27 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268707061, current=UP, previous=STARTING]
2024-05-21 00:18:27 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:18:27 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:18:27 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 00:18:27 [restartedMain] INFO  : Updating port to 8081
2024-05-21 00:18:27 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.136 seconds (JVM running for 50.971)
2024-05-21 00:18:27 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 00:18:28 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-21 00:18:28 [Thread-15] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 00:18:28 [Thread-15] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268708172, current=DOWN, previous=UP]
2024-05-21 00:18:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:18:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:18:30 [Thread-15] INFO  : Shutting down DiscoveryClient ...
2024-05-21 00:18:33 [Thread-15] INFO  : Unregistering ...
2024-05-21 00:18:33 [Thread-15] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 00:18:33 [Thread-15] INFO  : Completed shut down of DiscoveryClient
2024-05-21 00:18:33 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 8864 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 00:18:33 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 00:18:33 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 00:18:33 [restartedMain] INFO  : Finished Spring Data repository scanning in 13 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 00:18:33 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-21 00:18:33 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:18:33 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:18:33 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:18:33 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3897e9b9, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7ddbfb7a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 00:18:33 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:18:33 [cluster-rtt-ClusterId{value='664c2ea9abaedb38d0202eec', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:775}] to localhost:27017
2024-05-21 00:18:33 [cluster-ClusterId{value='664c2ea9abaedb38d0202eec', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:5, serverValue:776}] to localhost:27017
2024-05-21 00:18:33 [cluster-ClusterId{value='664c2ea9abaedb38d0202eec', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2461901}
2024-05-21 00:18:33 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 00:18:33 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:18:33 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 00:18:34 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 00:18:34 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 00:18:34 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 00:18:34 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:18:34 [restartedMain] INFO  : Disable delta property : false
2024-05-21 00:18:34 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 00:18:34 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 00:18:34 [restartedMain] INFO  : Application is null : false
2024-05-21 00:18:34 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 00:18:34 [restartedMain] INFO  : Application version is -1: true
2024-05-21 00:18:34 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 00:18:34 [restartedMain] INFO  : The response status is 200
2024-05-21 00:18:34 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 00:18:34 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 00:18:34 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716268714145 with initial instances count: 3
2024-05-21 00:18:34 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 00:18:34 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268714146, current=UP, previous=STARTING]
2024-05-21 00:18:34 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:18:34 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:18:34 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 00:18:34 [restartedMain] INFO  : Updating port to 8081
2024-05-21 00:18:34 [restartedMain] INFO  : Started TransactionsServiceApplication in 0.984 seconds (JVM running for 58.044)
2024-05-21 00:18:34 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 00:19:05 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 00:19:05 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268745403, current=DOWN, previous=UP]
2024-05-21 00:19:05 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:19:05 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:19:07 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 00:19:10 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 00:19:10 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 00:19:10 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 00:19:15 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 30512 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 00:19:15 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 00:19:15 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 00:19:15 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 00:19:15 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 00:19:15 [restartedMain] INFO  : Finished Spring Data repository scanning in 129 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 00:19:16 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-21 00:19:16 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:19:16 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:19:16 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:19:16 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@101bf41f, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3acc1b2a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 00:19:16 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:19:16 [cluster-ClusterId{value='664c2ed4b590fe7d7477ce26', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:777}] to localhost:27017
2024-05-21 00:19:16 [cluster-rtt-ClusterId{value='664c2ed4b590fe7d7477ce26', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:778}] to localhost:27017
2024-05-21 00:19:16 [cluster-ClusterId{value='664c2ed4b590fe7d7477ce26', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=60753300}
2024-05-21 00:19:16 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 00:19:16 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:19:17 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 00:19:17 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 00:19:17 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 00:19:17 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 00:19:17 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:19:17 [restartedMain] INFO  : Disable delta property : false
2024-05-21 00:19:17 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 00:19:17 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 00:19:17 [restartedMain] INFO  : Application is null : false
2024-05-21 00:19:17 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 00:19:17 [restartedMain] INFO  : Application version is -1: true
2024-05-21 00:19:17 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 00:19:18 [restartedMain] INFO  : The response status is 200
2024-05-21 00:19:18 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 00:19:18 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 00:19:18 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716268758072 with initial instances count: 3
2024-05-21 00:19:18 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 00:19:18 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268758074, current=UP, previous=STARTING]
2024-05-21 00:19:18 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:19:18 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:19:18 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 00:19:18 [restartedMain] INFO  : Updating port to 8081
2024-05-21 00:19:18 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.654 seconds (JVM running for 4.329)
2024-05-21 00:20:11 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 00:20:11 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268811354, current=DOWN, previous=UP]
2024-05-21 00:20:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:20:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:20:11 [SpringApplicationShutdownHook] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 00:20:11 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268811376, current=DOWN, previous=UP]
2024-05-21 00:20:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService: registering service...
2024-05-21 00:20:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - registration status: 204
2024-05-21 00:20:11 [SpringApplicationShutdownHook] INFO  : Unregistering application CLIENTSERVICE with eureka with status DOWN
2024-05-21 00:20:11 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268811427, current=DOWN, previous=UP]
2024-05-21 00:20:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083: registering service...
2024-05-21 00:20:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083 - registration status: 204
2024-05-21 00:20:13 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 00:20:13 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 00:20:13 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 00:20:16 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 00:20:16 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 37 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 50 more

2024-05-21 00:20:16 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 00:20:16 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 38 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 51 more

2024-05-21 00:20:16 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 00:20:16 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 00:20:16 [SpringApplicationShutdownHook] ERROR : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 00:20:16 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 37 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 50 more

2024-05-21 00:20:16 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 00:20:16 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 00:20:16 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 38 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 51 more

2024-05-21 00:20:16 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 00:20:16 [SpringApplicationShutdownHook] ERROR : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 00:20:16 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 00:20:16 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 00:20:16 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 39 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.connect0(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.base/java.net.Socket.connect(Socket.java:608)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 52 more

2024-05-21 00:20:16 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 00:20:16 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 40 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.connect0(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.base/java.net.Socket.connect(Socket.java:608)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 53 more

2024-05-21 00:20:16 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 00:20:16 [SpringApplicationShutdownHook] ERROR : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
2024-05-21 00:20:16 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 16:08:10 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 5900 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 16:08:10 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 16:08:10 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 16:08:10 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 16:08:11 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 16:08:11 [restartedMain] INFO  : Finished Spring Data repository scanning in 160 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 16:08:12 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 16:08:12 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:08:12 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:08:12 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:08:12 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@6ca9f3cd, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@714742ef]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 16:08:12 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 16:08:12 [cluster-rtt-ClusterId{value='664d0d3c3b5ea97e77b53edb', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:1}] to localhost:27017
2024-05-21 16:08:12 [cluster-ClusterId{value='664d0d3c3b5ea97e77b53edb', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:2}] to localhost:27017
2024-05-21 16:08:12 [cluster-ClusterId{value='664d0d3c3b5ea97e77b53edb', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=54747500}
2024-05-21 16:08:12 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 16:08:12 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 16:08:13 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 16:08:13 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 16:08:13 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 16:08:13 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 16:08:13 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 16:08:13 [restartedMain] INFO  : Disable delta property : false
2024-05-21 16:08:13 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 16:08:13 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 16:08:13 [restartedMain] INFO  : Application is null : false
2024-05-21 16:08:13 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 16:08:13 [restartedMain] INFO  : Application version is -1: true
2024-05-21 16:08:13 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 16:08:14 [restartedMain] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:66)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:295)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:374)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:376)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:127)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:485)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$c0c1860c.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:179)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:54)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:357)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:156)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:124)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:946)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:594)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 67 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 80 more

2024-05-21 16:08:14 [restartedMain] WARN  : Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 16:08:14 [restartedMain] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:66)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:295)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:374)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:376)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:127)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:485)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$c0c1860c.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:179)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:54)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:357)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:156)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:124)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:946)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:594)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)

2024-05-21 16:08:14 [restartedMain] INFO  : Initial registry fetch from primary servers failed
2024-05-21 16:08:14 [restartedMain] WARN  : Using default backup registry implementation which does not do anything.
2024-05-21 16:08:14 [restartedMain] INFO  : Initial registry fetch from backup servers failed
2024-05-21 16:08:14 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 16:08:14 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 16:08:14 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716325694234 with initial instances count: 0
2024-05-21 16:08:14 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 16:08:14 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716325694237, current=UP, previous=STARTING]
2024-05-21 16:08:14 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService: registering service...
2024-05-21 16:08:14 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 16:08:14 [restartedMain] INFO  : Updating port to 8080
2024-05-21 16:08:14 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 22 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 35 more

2024-05-21 16:08:14 [DiscoveryClient-InstanceInfoReplicator-0] WARN  : Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 16:08:14 [DiscoveryClient-InstanceInfoReplicator-0] WARN  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 16:08:14 [DiscoveryClient-InstanceInfoReplicator-0] WARN  : There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 16:08:14 [restartedMain] INFO  : Started FinalProjectApplication in 4.274 seconds (JVM running for 5.26)
2024-05-21 16:08:26 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 7832 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 16:08:26 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 16:08:26 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 16:08:26 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 16:08:26 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 16:08:26 [restartedMain] INFO  : Finished Spring Data repository scanning in 113 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 16:08:27 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-21 16:08:27 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:08:27 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:08:27 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:08:27 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@788051d4, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2e815caa]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 16:08:27 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 16:08:27 [cluster-rtt-ClusterId{value='664d0d4b93f1d3393b61f1bb', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:4}] to localhost:27017
2024-05-21 16:08:27 [cluster-ClusterId{value='664d0d4b93f1d3393b61f1bb', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:3}] to localhost:27017
2024-05-21 16:08:27 [cluster-ClusterId{value='664d0d4b93f1d3393b61f1bb', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=42488200}
2024-05-21 16:08:27 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 16:08:27 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 16:08:28 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 16:08:28 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 16:08:28 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 16:08:28 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 16:08:28 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 16:08:28 [restartedMain] INFO  : Disable delta property : false
2024-05-21 16:08:28 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 16:08:28 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 16:08:28 [restartedMain] INFO  : Application is null : false
2024-05-21 16:08:28 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 16:08:28 [restartedMain] INFO  : Application version is -1: true
2024-05-21 16:08:28 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 16:08:28 [restartedMain] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:66)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:295)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:374)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:376)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:127)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:485)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$6831a157.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:179)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:54)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:357)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:156)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:124)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:946)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:594)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.transactionsservice.TransactionsServiceApplication.main(TransactionsServiceApplication.java:16)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 67 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 80 more

2024-05-21 16:08:28 [restartedMain] WARN  : Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 16:08:28 [restartedMain] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:66)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:295)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:374)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:376)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:127)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:485)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$6831a157.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:179)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:54)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:357)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:156)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:124)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:946)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:594)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.transactionsservice.TransactionsServiceApplication.main(TransactionsServiceApplication.java:16)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)

2024-05-21 16:08:28 [restartedMain] INFO  : Initial registry fetch from primary servers failed
2024-05-21 16:08:28 [restartedMain] WARN  : Using default backup registry implementation which does not do anything.
2024-05-21 16:08:28 [restartedMain] INFO  : Initial registry fetch from backup servers failed
2024-05-21 16:08:28 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 16:08:28 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 16:08:28 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716325708820 with initial instances count: 0
2024-05-21 16:08:28 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 16:08:28 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716325708824, current=UP, previous=STARTING]
2024-05-21 16:08:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 16:08:28 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 16:08:28 [restartedMain] INFO  : Updating port to 8081
2024-05-21 16:08:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 22 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 35 more

2024-05-21 16:08:28 [DiscoveryClient-InstanceInfoReplicator-0] WARN  : Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 16:08:28 [DiscoveryClient-InstanceInfoReplicator-0] WARN  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 16:08:28 [DiscoveryClient-InstanceInfoReplicator-0] WARN  : There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 16:08:28 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.394 seconds (JVM running for 4.111)
2024-05-21 16:08:44 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Disable delta property : false
2024-05-21 16:08:44 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Single vip registry refresh property : null
2024-05-21 16:08:44 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Force full registry fetch : false
2024-05-21 16:08:44 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application is null : false
2024-05-21 16:08:44 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Registered Applications size is zero : true
2024-05-21 16:08:44 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application version is -1: true
2024-05-21 16:08:44 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Getting all instance registry info from the eureka server
2024-05-21 16:08:44 [DiscoveryClient-HeartbeatExecutor-0] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 20 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 33 more

2024-05-21 16:08:44 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 23 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 36 more

2024-05-21 16:08:44 [DiscoveryClient-HeartbeatExecutor-0] WARN  : Request execution failed with message: I/O error on PUT request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 16:08:44 [DiscoveryClient-CacheRefreshExecutor-0] WARN  : Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 16:08:44 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)

2024-05-21 16:08:44 [DiscoveryClient-HeartbeatExecutor-0] ERROR : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 16:08:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService: registering service...
2024-05-21 16:08:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 21 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 34 more

2024-05-21 16:08:44 [DiscoveryClient-InstanceInfoReplicator-0] WARN  : Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 16:08:44 [DiscoveryClient-InstanceInfoReplicator-0] WARN  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 16:08:44 [DiscoveryClient-InstanceInfoReplicator-0] WARN  : There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 16:08:58 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Disable delta property : false
2024-05-21 16:08:58 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Single vip registry refresh property : null
2024-05-21 16:08:58 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Force full registry fetch : false
2024-05-21 16:08:58 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application is null : false
2024-05-21 16:08:58 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Registered Applications size is zero : true
2024-05-21 16:08:58 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application version is -1: true
2024-05-21 16:08:58 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Getting all instance registry info from the eureka server
2024-05-21 16:08:58 [DiscoveryClient-HeartbeatExecutor-0] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 20 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 33 more

2024-05-21 16:08:58 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 23 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 36 more

2024-05-21 16:08:58 [DiscoveryClient-HeartbeatExecutor-0] WARN  : Request execution failed with message: I/O error on PUT request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 16:08:58 [DiscoveryClient-HeartbeatExecutor-0] ERROR : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 16:08:58 [DiscoveryClient-CacheRefreshExecutor-0] WARN  : Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 16:08:58 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)

2024-05-21 16:08:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 16:08:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 21 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 34 more

2024-05-21 16:08:58 [DiscoveryClient-InstanceInfoReplicator-0] WARN  : Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 16:08:58 [DiscoveryClient-InstanceInfoReplicator-0] WARN  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 16:08:58 [DiscoveryClient-InstanceInfoReplicator-0] WARN  : There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 16:09:14 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Disable delta property : false
2024-05-21 16:09:14 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Single vip registry refresh property : null
2024-05-21 16:09:14 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Force full registry fetch : false
2024-05-21 16:09:14 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application is null : false
2024-05-21 16:09:14 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Registered Applications size is zero : true
2024-05-21 16:09:14 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application version is -1: true
2024-05-21 16:09:14 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Getting all instance registry info from the eureka server
2024-05-21 16:09:14 [DiscoveryClient-HeartbeatExecutor-0] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 20 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 33 more

2024-05-21 16:09:14 [DiscoveryClient-HeartbeatExecutor-0] WARN  : Request execution failed with message: I/O error on PUT request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 16:09:14 [DiscoveryClient-HeartbeatExecutor-0] ERROR : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 16:09:14 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 23 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 36 more

2024-05-21 16:09:14 [DiscoveryClient-CacheRefreshExecutor-0] WARN  : Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 16:09:14 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)

2024-05-21 16:09:14 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService: registering service...
2024-05-21 16:09:14 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 21 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 34 more

2024-05-21 16:09:14 [DiscoveryClient-InstanceInfoReplicator-0] WARN  : Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 16:09:14 [DiscoveryClient-InstanceInfoReplicator-0] WARN  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 16:09:14 [DiscoveryClient-InstanceInfoReplicator-0] WARN  : There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 16:09:28 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Disable delta property : false
2024-05-21 16:09:28 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Single vip registry refresh property : null
2024-05-21 16:09:28 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Force full registry fetch : false
2024-05-21 16:09:28 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application is null : false
2024-05-21 16:09:28 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Registered Applications size is zero : true
2024-05-21 16:09:28 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application version is -1: true
2024-05-21 16:09:28 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Getting all instance registry info from the eureka server
2024-05-21 16:09:28 [DiscoveryClient-HeartbeatExecutor-0] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 20 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 33 more

2024-05-21 16:09:28 [DiscoveryClient-HeartbeatExecutor-0] WARN  : Request execution failed with message: I/O error on PUT request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 16:09:28 [DiscoveryClient-HeartbeatExecutor-0] ERROR : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 16:09:28 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 23 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 36 more

2024-05-21 16:09:28 [DiscoveryClient-CacheRefreshExecutor-0] WARN  : Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 16:09:28 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)

2024-05-21 16:09:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 16:09:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 21 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 34 more

2024-05-21 16:09:28 [DiscoveryClient-InstanceInfoReplicator-0] WARN  : Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 16:09:28 [DiscoveryClient-InstanceInfoReplicator-0] WARN  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 16:09:28 [DiscoveryClient-InstanceInfoReplicator-0] WARN  : There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 16:09:44 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Disable delta property : false
2024-05-21 16:09:44 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Single vip registry refresh property : null
2024-05-21 16:09:44 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Force full registry fetch : false
2024-05-21 16:09:44 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application is null : false
2024-05-21 16:09:44 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Registered Applications size is zero : true
2024-05-21 16:09:44 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application version is -1: true
2024-05-21 16:09:44 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Getting all instance registry info from the eureka server
2024-05-21 16:09:44 [DiscoveryClient-HeartbeatExecutor-0] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 20 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 33 more

2024-05-21 16:09:44 [DiscoveryClient-HeartbeatExecutor-0] WARN  : Request execution failed with message: I/O error on PUT request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 16:09:44 [DiscoveryClient-HeartbeatExecutor-0] ERROR : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 16:09:44 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 23 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 36 more

2024-05-21 16:09:44 [DiscoveryClient-CacheRefreshExecutor-0] WARN  : Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 16:09:44 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)

2024-05-21 16:09:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService: registering service...
2024-05-21 16:09:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 21 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 34 more

2024-05-21 16:09:44 [DiscoveryClient-InstanceInfoReplicator-0] WARN  : Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 16:09:44 [DiscoveryClient-InstanceInfoReplicator-0] WARN  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 16:09:44 [DiscoveryClient-InstanceInfoReplicator-0] WARN  : There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 16:09:58 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Disable delta property : false
2024-05-21 16:09:58 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Single vip registry refresh property : null
2024-05-21 16:09:58 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Force full registry fetch : false
2024-05-21 16:09:58 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application is null : false
2024-05-21 16:09:58 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Registered Applications size is zero : true
2024-05-21 16:09:58 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application version is -1: true
2024-05-21 16:09:58 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Getting all instance registry info from the eureka server
2024-05-21 16:09:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 16:09:59 [DiscoveryClient-HeartbeatExecutor-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - Re-registering apps/TRANSACTIONSSERVICE
2024-05-21 16:09:59 [DiscoveryClient-HeartbeatExecutor-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 16:09:59 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : The response status is 200
2024-05-21 16:09:59 [DiscoveryClient-HeartbeatExecutor-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 16:09:59 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 16:10:14 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Disable delta property : false
2024-05-21 16:10:14 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Single vip registry refresh property : null
2024-05-21 16:10:14 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Force full registry fetch : false
2024-05-21 16:10:14 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application is null : false
2024-05-21 16:10:14 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Registered Applications size is zero : true
2024-05-21 16:10:14 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application version is -1: true
2024-05-21 16:10:14 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Getting all instance registry info from the eureka server
2024-05-21 16:10:14 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService: registering service...
2024-05-21 16:10:14 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - registration status: 204
2024-05-21 16:10:14 [DiscoveryClient-HeartbeatExecutor-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - Re-registering apps/ACCOUNTSSERVICE
2024-05-21 16:10:14 [DiscoveryClient-HeartbeatExecutor-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService: registering service...
2024-05-21 16:10:14 [DiscoveryClient-HeartbeatExecutor-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - registration status: 204
2024-05-21 16:10:14 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : The response status is 200
2024-05-21 16:10:25 [SpringApplicationShutdownHook] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 16:10:25 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716325825375, current=DOWN, previous=UP]
2024-05-21 16:10:25 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService: registering service...
2024-05-21 16:10:25 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - registration status: 204
2024-05-21 16:10:27 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 16:10:29 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Disable delta property : false
2024-05-21 16:10:29 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Single vip registry refresh property : null
2024-05-21 16:10:29 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Force full registry fetch : false
2024-05-21 16:10:29 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application is null : false
2024-05-21 16:10:29 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Registered Applications size is zero : true
2024-05-21 16:10:29 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application version is -1: false
2024-05-21 16:10:29 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Getting all instance registry info from the eureka server
2024-05-21 16:10:29 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : The response status is 200
2024-05-21 16:10:30 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 16:10:30 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - deregister  status: 200
2024-05-21 16:10:30 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 16:10:33 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 18024 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 16:10:33 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 16:10:33 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 16:10:33 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 16:10:33 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 16:10:33 [restartedMain] INFO  : Finished Spring Data repository scanning in 120 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 16:10:34 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 16:10:34 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:10:34 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:10:34 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:10:34 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@6ca9f3cd, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@714742ef]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 16:10:34 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 16:10:34 [cluster-ClusterId{value='664d0dca66c71924a40db813', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:5}] to localhost:27017
2024-05-21 16:10:34 [cluster-rtt-ClusterId{value='664d0dca66c71924a40db813', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:6}] to localhost:27017
2024-05-21 16:10:34 [cluster-ClusterId{value='664d0dca66c71924a40db813', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=58351700}
2024-05-21 16:10:35 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 16:10:35 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 16:10:35 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 16:10:36 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 16:10:36 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 16:10:36 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 16:10:36 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 16:10:36 [restartedMain] INFO  : Disable delta property : false
2024-05-21 16:10:36 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 16:10:36 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 16:10:36 [restartedMain] INFO  : Application is null : false
2024-05-21 16:10:36 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 16:10:36 [restartedMain] INFO  : Application version is -1: true
2024-05-21 16:10:36 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 16:10:36 [restartedMain] INFO  : The response status is 200
2024-05-21 16:10:36 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 16:10:36 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 16:10:36 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716325836746 with initial instances count: 2
2024-05-21 16:10:36 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 16:10:36 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716325836750, current=UP, previous=STARTING]
2024-05-21 16:10:36 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService: registering service...
2024-05-21 16:10:36 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - registration status: 204
2024-05-21 16:10:36 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 16:10:36 [restartedMain] INFO  : Updating port to 8080
2024-05-21 16:10:36 [restartedMain] INFO  : Started FinalProjectApplication in 4.424 seconds (JVM running for 5.202)
2024-05-21 16:12:48 [SpringApplicationShutdownHook] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 16:12:48 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716325968044, current=DOWN, previous=UP]
2024-05-21 16:12:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService: registering service...
2024-05-21 16:12:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - registration status: 204
2024-05-21 16:12:50 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 16:12:53 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 16:12:53 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - deregister  status: 200
2024-05-21 16:12:53 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 16:13:01 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 16:13:01 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716325981113, current=DOWN, previous=UP]
2024-05-21 16:13:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 16:13:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 16:13:03 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 16:13:06 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 16:13:06 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 16:13:06 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 16:18:43 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 12248 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 16:18:43 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 16:18:44 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 16:18:44 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 16:18:44 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 16:18:44 [restartedMain] INFO  : Finished Spring Data repository scanning in 130 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 16:18:45 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-21 16:18:45 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:18:45 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:18:45 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:18:45 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1ec9f081, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@4fcf3f9e]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 16:18:45 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 16:18:45 [cluster-rtt-ClusterId{value='664d0fb5e8278b24a5ecac76', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:8}] to localhost:27017
2024-05-21 16:18:45 [cluster-ClusterId{value='664d0fb5e8278b24a5ecac76', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:7}] to localhost:27017
2024-05-21 16:18:45 [cluster-ClusterId{value='664d0fb5e8278b24a5ecac76', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=50809100}
2024-05-21 16:18:45 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 16:18:45 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 16:18:46 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 16:18:46 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 16:18:46 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 16:18:46 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 16:18:46 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 16:18:46 [restartedMain] INFO  : Disable delta property : false
2024-05-21 16:18:46 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 16:18:46 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 16:18:46 [restartedMain] INFO  : Application is null : false
2024-05-21 16:18:46 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 16:18:46 [restartedMain] INFO  : Application version is -1: true
2024-05-21 16:18:46 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 16:18:47 [restartedMain] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:66)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:295)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:374)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:376)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:127)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:485)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$fb386389.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:179)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:54)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:357)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:156)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:124)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:946)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:594)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.transactionsservice.TransactionsServiceApplication.main(TransactionsServiceApplication.java:16)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 67 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 80 more

2024-05-21 16:18:47 [restartedMain] WARN  : Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 16:18:47 [restartedMain] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:66)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:295)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:374)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:376)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:127)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:485)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$fb386389.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:179)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:54)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:357)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:156)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:124)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:946)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:594)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.transactionsservice.TransactionsServiceApplication.main(TransactionsServiceApplication.java:16)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)

2024-05-21 16:18:47 [restartedMain] INFO  : Initial registry fetch from primary servers failed
2024-05-21 16:18:47 [restartedMain] WARN  : Using default backup registry implementation which does not do anything.
2024-05-21 16:18:47 [restartedMain] INFO  : Initial registry fetch from backup servers failed
2024-05-21 16:18:47 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 16:18:47 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 16:18:47 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716326327168 with initial instances count: 0
2024-05-21 16:18:47 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 16:18:47 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716326327172, current=UP, previous=STARTING]
2024-05-21 16:18:47 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 16:18:47 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 16:18:47 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 22 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 35 more

2024-05-21 16:18:47 [DiscoveryClient-InstanceInfoReplicator-0] WARN  : Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 16:18:47 [restartedMain] INFO  : Updating port to 8081
2024-05-21 16:18:47 [DiscoveryClient-InstanceInfoReplicator-0] WARN  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 16:18:47 [DiscoveryClient-InstanceInfoReplicator-0] WARN  : There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 16:18:47 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.937 seconds (JVM running for 4.799)
2024-05-21 16:18:55 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 2436 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalClient\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 16:18:55 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 16:18:56 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 16:18:56 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 16:18:56 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 16:18:56 [restartedMain] INFO  : Finished Spring Data repository scanning in 116 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 16:18:57 [restartedMain] INFO  : BeanFactory id=793773eb-fca8-379f-a0ba-c7b18fda5e40
2024-05-21 16:18:57 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:18:57 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:18:57 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:18:57 [restartedMain] INFO  : Tomcat initialized with port(s): 8083 (http)
2024-05-21 16:18:57 [restartedMain] INFO  : Initializing ProtocolHandler ["http-nio-8083"]
2024-05-21 16:18:57 [restartedMain] INFO  : Starting service [Tomcat]
2024-05-21 16:18:57 [restartedMain] INFO  : Starting Servlet engine: [Apache Tomcat/9.0.83]
2024-05-21 16:18:57 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@23a63b46, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@1543ed0d]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 16:18:57 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 16:18:57 [cluster-rtt-ClusterId{value='664d0fc172bfc74b13320b01', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:9}] to localhost:27017
2024-05-21 16:18:57 [cluster-ClusterId{value='664d0fc172bfc74b13320b01', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:10}] to localhost:27017
2024-05-21 16:18:57 [cluster-ClusterId{value='664d0fc172bfc74b13320b01', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=60560900}
2024-05-21 16:18:57 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 16:18:57 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 16:18:58 [nioEventLoopGroup-2-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:11}] to localhost:27017
2024-05-21 16:18:59 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 16:18:59 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 16:18:59 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 16:18:59 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 16:18:59 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 16:18:59 [restartedMain] INFO  : Disable delta property : false
2024-05-21 16:18:59 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 16:18:59 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 16:18:59 [restartedMain] INFO  : Application is null : false
2024-05-21 16:18:59 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 16:18:59 [restartedMain] INFO  : Application version is -1: true
2024-05-21 16:18:59 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 16:19:00 [restartedMain] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:66)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:295)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:374)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:376)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:127)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:115)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:485)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$8b1bdeeb.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:179)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:54)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:357)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:156)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:124)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:946)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:594)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:19)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 73 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.connect0(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.base/java.net.Socket.connect(Socket.java:608)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 86 more

2024-05-21 16:19:00 [restartedMain] WARN  : Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 16:19:00 [restartedMain] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:66)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:295)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:374)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:376)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:127)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:115)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:485)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$8b1bdeeb.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:179)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:54)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:357)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:156)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:124)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:946)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:594)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:19)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)

2024-05-21 16:19:00 [restartedMain] INFO  : Initial registry fetch from primary servers failed
2024-05-21 16:19:00 [restartedMain] WARN  : Using default backup registry implementation which does not do anything.
2024-05-21 16:19:00 [restartedMain] INFO  : Initial registry fetch from backup servers failed
2024-05-21 16:19:00 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 16:19:00 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 16:19:00 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716326340094 with initial instances count: 0
2024-05-21 16:19:00 [restartedMain] INFO  : Registering application CLIENTSERVICE with eureka with status UP
2024-05-21 16:19:00 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716326340099, current=UP, previous=STARTING]
2024-05-21 16:19:00 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083: registering service...
2024-05-21 16:19:00 [restartedMain] INFO  : Starting ProtocolHandler ["http-nio-8083"]
2024-05-21 16:19:00 [restartedMain] INFO  : Tomcat started on port(s): 8083 (http) with context path ''
2024-05-21 16:19:00 [restartedMain] INFO  : Updating port to 8083
2024-05-21 16:19:00 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/CLIENTSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/CLIENTSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 22 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.connect0(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.base/java.net.Socket.connect(Socket.java:608)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 35 more

2024-05-21 16:19:00 [DiscoveryClient-InstanceInfoReplicator-0] WARN  : Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/CLIENTSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 16:19:00 [DiscoveryClient-InstanceInfoReplicator-0] WARN  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2024-05-21 16:19:00 [DiscoveryClient-InstanceInfoReplicator-0] WARN  : There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2024-05-21 16:19:00 [restartedMain] INFO  : Started FinalProjectApplication in 5.325 seconds (JVM running for 6.511)
2024-05-21 16:19:06 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 20932 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 16:19:06 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 16:19:06 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 16:19:06 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 16:19:07 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 16:19:07 [restartedMain] INFO  : Finished Spring Data repository scanning in 175 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 16:19:07 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 16:19:07 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:19:07 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:19:07 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:19:08 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3235396e, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@4d8827b8]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 16:19:08 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 16:19:08 [cluster-rtt-ClusterId{value='664d0fcc41d23e130131dcf3', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:13}] to localhost:27017
2024-05-21 16:19:08 [cluster-ClusterId{value='664d0fcc41d23e130131dcf3', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:12}] to localhost:27017
2024-05-21 16:19:08 [cluster-ClusterId{value='664d0fcc41d23e130131dcf3', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=48215700}
2024-05-21 16:19:08 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 16:19:08 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 16:19:09 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 16:19:09 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 16:19:09 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 16:19:09 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 16:19:09 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 16:19:09 [restartedMain] INFO  : Disable delta property : false
2024-05-21 16:19:09 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 16:19:09 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 16:19:09 [restartedMain] INFO  : Application is null : false
2024-05-21 16:19:09 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 16:19:09 [restartedMain] INFO  : Application version is -1: true
2024-05-21 16:19:09 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 16:19:10 [restartedMain] INFO  : The response status is 200
2024-05-21 16:19:10 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 16:19:10 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 16:19:10 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716326350160 with initial instances count: 0
2024-05-21 16:19:10 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 16:19:10 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716326350162, current=UP, previous=STARTING]
2024-05-21 16:19:10 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService: registering service...
2024-05-21 16:19:10 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 16:19:10 [restartedMain] INFO  : Updating port to 8080
2024-05-21 16:19:10 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - registration status: 204
2024-05-21 16:19:10 [restartedMain] INFO  : Started FinalProjectApplication in 4.208 seconds (JVM running for 5.242)
2024-05-21 16:19:17 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Disable delta property : false
2024-05-21 16:19:17 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Single vip registry refresh property : null
2024-05-21 16:19:17 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Force full registry fetch : false
2024-05-21 16:19:17 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application is null : false
2024-05-21 16:19:17 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Registered Applications size is zero : true
2024-05-21 16:19:17 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application version is -1: true
2024-05-21 16:19:17 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Getting all instance registry info from the eureka server
2024-05-21 16:19:17 [DiscoveryClient-HeartbeatExecutor-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - Re-registering apps/TRANSACTIONSSERVICE
2024-05-21 16:19:17 [DiscoveryClient-HeartbeatExecutor-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 16:19:17 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : The response status is 200
2024-05-21 16:19:17 [DiscoveryClient-HeartbeatExecutor-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 16:19:17 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 16:19:17 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 16:19:30 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Disable delta property : false
2024-05-21 16:19:30 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Single vip registry refresh property : null
2024-05-21 16:19:30 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Force full registry fetch : false
2024-05-21 16:19:30 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application is null : false
2024-05-21 16:19:30 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Registered Applications size is zero : true
2024-05-21 16:19:30 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application version is -1: true
2024-05-21 16:19:30 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Getting all instance registry info from the eureka server
2024-05-21 16:19:30 [DiscoveryClient-HeartbeatExecutor-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083 - Re-registering apps/CLIENTSERVICE
2024-05-21 16:19:30 [DiscoveryClient-HeartbeatExecutor-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083: registering service...
2024-05-21 16:19:30 [DiscoveryClient-HeartbeatExecutor-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083 - registration status: 204
2024-05-21 16:19:30 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : The response status is 200
2024-05-21 16:19:40 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Disable delta property : false
2024-05-21 16:19:40 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Single vip registry refresh property : null
2024-05-21 16:19:40 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Force full registry fetch : false
2024-05-21 16:19:40 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application is null : false
2024-05-21 16:19:40 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Registered Applications size is zero : true
2024-05-21 16:19:40 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application version is -1: false
2024-05-21 16:19:40 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Getting all instance registry info from the eureka server
2024-05-21 16:19:40 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : The response status is 200
2024-05-21 16:19:47 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Disable delta property : false
2024-05-21 16:19:47 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Single vip registry refresh property : null
2024-05-21 16:19:47 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Force full registry fetch : false
2024-05-21 16:19:47 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application is null : false
2024-05-21 16:19:47 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Registered Applications size is zero : true
2024-05-21 16:19:47 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application version is -1: false
2024-05-21 16:19:47 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Getting all instance registry info from the eureka server
2024-05-21 16:19:47 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : The response status is 200
2024-05-21 16:22:46 [File Watcher] INFO  : Restarting due to 2 class path changes (0 additions, 2 deletions, 0 modifications)
2024-05-21 16:22:46 [Thread-5] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 16:22:46 [Thread-5] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716326566981, current=DOWN, previous=UP]
2024-05-21 16:22:46 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 16:22:46 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 16:22:49 [Thread-5] INFO  : Shutting down DiscoveryClient ...
2024-05-21 16:22:52 [Thread-5] INFO  : Unregistering ...
2024-05-21 16:22:52 [Thread-5] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 16:22:52 [Thread-5] INFO  : Completed shut down of DiscoveryClient
2024-05-21 16:22:52 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 12248 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 16:22:52 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 16:22:52 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 16:22:52 [restartedMain] INFO  : Finished Spring Data repository scanning in 26 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 16:22:52 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-21 16:22:52 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:22:52 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:22:52 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:22:52 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@7db3cab1, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@4fcf3f9e]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 16:22:52 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 16:22:52 [cluster-ClusterId{value='664d10ace8278b24a5ecac77', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:3, serverValue:15}] to localhost:27017
2024-05-21 16:22:52 [cluster-rtt-ClusterId{value='664d10ace8278b24a5ecac77', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:14}] to localhost:27017
2024-05-21 16:22:52 [cluster-ClusterId{value='664d10ace8278b24a5ecac77', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3615600}
2024-05-21 16:22:52 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 16:22:52 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 16:22:52 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 16:22:52 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 16:22:52 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 16:22:52 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 16:22:52 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 16:22:52 [restartedMain] INFO  : Disable delta property : false
2024-05-21 16:22:52 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 16:22:52 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 16:22:52 [restartedMain] INFO  : Application is null : false
2024-05-21 16:22:52 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 16:22:52 [restartedMain] INFO  : Application version is -1: true
2024-05-21 16:22:52 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 16:22:52 [restartedMain] INFO  : The response status is 200
2024-05-21 16:22:52 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 16:22:52 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 16:22:52 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716326572968 with initial instances count: 3
2024-05-21 16:22:52 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 16:22:52 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716326572969, current=UP, previous=STARTING]
2024-05-21 16:22:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 16:22:52 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 16:22:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 16:22:52 [restartedMain] INFO  : Updating port to 8081
2024-05-21 16:22:53 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.022 seconds (JVM running for 250.554)
2024-05-21 16:22:53 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 16:22:54 [File Watcher] INFO  : Restarting due to 2 class path changes (2 additions, 0 deletions, 0 modifications)
2024-05-21 16:22:54 [Thread-10] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 16:22:54 [Thread-10] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716326574150, current=DOWN, previous=UP]
2024-05-21 16:22:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 16:22:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 16:22:56 [Thread-10] INFO  : Shutting down DiscoveryClient ...
2024-05-21 16:22:59 [Thread-10] INFO  : Unregistering ...
2024-05-21 16:22:59 [Thread-10] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 16:22:59 [Thread-10] INFO  : Completed shut down of DiscoveryClient
2024-05-21 16:22:59 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 12248 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 16:22:59 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 16:22:59 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 16:23:00 [restartedMain] INFO  : Finished Spring Data repository scanning in 42 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 16:23:00 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-21 16:23:00 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:23:00 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:23:00 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:23:00 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@727cdf7b, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@4fcf3f9e]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 16:23:00 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 16:23:00 [cluster-rtt-ClusterId{value='664d10b4e8278b24a5ecac78', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:16}] to localhost:27017
2024-05-21 16:23:00 [cluster-ClusterId{value='664d10b4e8278b24a5ecac78', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:5, serverValue:17}] to localhost:27017
2024-05-21 16:23:00 [cluster-ClusterId{value='664d10b4e8278b24a5ecac78', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=6659000}
2024-05-21 16:23:00 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 16:23:00 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 16:23:00 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 16:23:01 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 16:23:01 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 16:23:01 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 16:23:01 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 16:23:01 [restartedMain] INFO  : Disable delta property : false
2024-05-21 16:23:01 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 16:23:01 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 16:23:01 [restartedMain] INFO  : Application is null : false
2024-05-21 16:23:01 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 16:23:01 [restartedMain] INFO  : Application version is -1: true
2024-05-21 16:23:01 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 16:23:01 [restartedMain] INFO  : The response status is 200
2024-05-21 16:23:01 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 16:23:01 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 16:23:01 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716326581117 with initial instances count: 2
2024-05-21 16:23:01 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 16:23:01 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716326581119, current=UP, previous=STARTING]
2024-05-21 16:23:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 16:23:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 16:23:01 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 16:23:01 [restartedMain] INFO  : Updating port to 8081
2024-05-21 16:23:01 [restartedMain] INFO  : Started TransactionsServiceApplication in 2.019 seconds (JVM running for 258.843)
2024-05-21 16:23:01 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 16:23:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 16:24:09 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 16:28:01 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 16:28:16 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-21 16:28:16 [Thread-24] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 16:28:16 [Thread-24] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716326896302, current=DOWN, previous=UP]
2024-05-21 16:28:16 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 16:28:16 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 16:28:18 [Thread-24] INFO  : Shutting down DiscoveryClient ...
2024-05-21 16:28:21 [Thread-24] INFO  : Unregistering ...
2024-05-21 16:28:21 [Thread-24] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 16:28:21 [Thread-24] INFO  : Completed shut down of DiscoveryClient
2024-05-21 16:28:21 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 12248 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 16:28:21 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 16:28:22 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 16:28:22 [restartedMain] INFO  : Finished Spring Data repository scanning in 38 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 16:28:22 [restartedMain] INFO  : BeanFactory id=121656aa-e2be-33b3-aae9-eb16ba2cfe6f
2024-05-21 16:28:22 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:28:22 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:28:22 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:28:22 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\infrastructure\adapters\TransactionsAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\infrastructure\factory\TransactionsFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsStrategies' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\domain\strategies\TransactionsStrategies.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountsFactory': Resolution of declared constructors on bean Class [project.transactionsservice.infrastructure.factory.AccountsFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1e7d55ac] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/domain/strategies/AccountStrategies
2024-05-21 16:28:22 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-21 16:28:22 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\infrastructure\adapters\TransactionsAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\infrastructure\factory\TransactionsFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsStrategies' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\domain\strategies\TransactionsStrategies.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountsFactory': Resolution of declared constructors on bean Class [project.transactionsservice.infrastructure.factory.AccountsFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1e7d55ac] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/domain/strategies/AccountStrategies
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.transactionsservice.TransactionsServiceApplication.main(TransactionsServiceApplication.java:16)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\infrastructure\adapters\TransactionsAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\infrastructure\factory\TransactionsFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsStrategies' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\domain\strategies\TransactionsStrategies.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountsFactory': Resolution of declared constructors on bean Class [project.transactionsservice.infrastructure.factory.AccountsFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1e7d55ac] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/domain/strategies/AccountStrategies
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 22 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\infrastructure\adapters\TransactionsAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\infrastructure\factory\TransactionsFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsStrategies' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\domain\strategies\TransactionsStrategies.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountsFactory': Resolution of declared constructors on bean Class [project.transactionsservice.infrastructure.factory.AccountsFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1e7d55ac] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/domain/strategies/AccountStrategies
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 36 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\infrastructure\factory\TransactionsFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsStrategies' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\domain\strategies\TransactionsStrategies.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountsFactory': Resolution of declared constructors on bean Class [project.transactionsservice.infrastructure.factory.AccountsFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1e7d55ac] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/domain/strategies/AccountStrategies
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 50 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsStrategies' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\domain\strategies\TransactionsStrategies.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountsFactory': Resolution of declared constructors on bean Class [project.transactionsservice.infrastructure.factory.AccountsFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1e7d55ac] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/domain/strategies/AccountStrategies
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 64 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountsFactory': Resolution of declared constructors on bean Class [project.transactionsservice.infrastructure.factory.AccountsFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1e7d55ac] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/domain/strategies/AccountStrategies
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 78 common frames omitted
Caused by: java.lang.NoClassDefFoundError: project/transactionsservice/domain/strategies/AccountStrategies
	at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3429)
	at java.base/java.lang.Class.getDeclaredConstructors(Class.java:2608)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:313)
	... 91 common frames omitted
Caused by: java.lang.ClassNotFoundException: project.transactionsservice.domain.strategies.AccountStrategies
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:495)
	at java.base/java.lang.Class.forName(Class.java:474)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 95 common frames omitted
2024-05-21 16:28:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 16:29:09 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 16:33:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 16:34:09 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 16:38:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 16:39:09 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 16:43:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 16:44:09 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 16:48:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 16:49:09 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 16:49:40 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 12248 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 16:49:40 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 16:49:40 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 16:49:40 [restartedMain] INFO  : Finished Spring Data repository scanning in 14 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 16:49:41 [restartedMain] INFO  : BeanFactory id=303354c7-0477-3d57-8de0-d95d70f2a40e
2024-05-21 16:49:41 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:49:41 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:49:41 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:49:41 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionsAdapter': Resolution of declared constructors on bean Class [project.transactionsservice.infrastructure.adapters.TransactionsAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@5dd23217] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/infrastructure/factory/TransactionsFactory
2024-05-21 16:49:41 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-21 16:49:41 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionsAdapter': Resolution of declared constructors on bean Class [project.transactionsservice.infrastructure.adapters.TransactionsAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@5dd23217] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/infrastructure/factory/TransactionsFactory
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.transactionsservice.TransactionsServiceApplication.main(TransactionsServiceApplication.java:16)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionsAdapter': Resolution of declared constructors on bean Class [project.transactionsservice.infrastructure.adapters.TransactionsAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@5dd23217] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/infrastructure/factory/TransactionsFactory
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 22 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionsAdapter': Resolution of declared constructors on bean Class [project.transactionsservice.infrastructure.adapters.TransactionsAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@5dd23217] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/infrastructure/factory/TransactionsFactory
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 36 common frames omitted
Caused by: java.lang.NoClassDefFoundError: project/transactionsservice/infrastructure/factory/TransactionsFactory
	at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3429)
	at java.base/java.lang.Class.getDeclaredConstructors(Class.java:2608)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:313)
	... 49 common frames omitted
Caused by: java.lang.ClassNotFoundException: project.transactionsservice.infrastructure.factory.TransactionsFactory
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:495)
	at java.base/java.lang.Class.forName(Class.java:474)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 53 common frames omitted
2024-05-21 16:50:53 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 12248 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 16:50:53 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 16:50:53 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 16:50:53 [restartedMain] INFO  : Finished Spring Data repository scanning in 14 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 16:50:53 [restartedMain] INFO  : BeanFactory id=cbb1117a-ffcf-3b28-b022-0decc6f6587c
2024-05-21 16:50:53 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:50:53 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:50:53 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:50:53 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionsAdapter': Resolution of declared constructors on bean Class [project.transactionsservice.infrastructure.adapters.TransactionsAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@31a85d67] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/infrastructure/factory/TransactionsFactory
2024-05-21 16:50:53 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-21 16:50:53 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionsAdapter': Resolution of declared constructors on bean Class [project.transactionsservice.infrastructure.adapters.TransactionsAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@31a85d67] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/infrastructure/factory/TransactionsFactory
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.transactionsservice.TransactionsServiceApplication.main(TransactionsServiceApplication.java:16)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionsAdapter': Resolution of declared constructors on bean Class [project.transactionsservice.infrastructure.adapters.TransactionsAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@31a85d67] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/infrastructure/factory/TransactionsFactory
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 22 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionsAdapter': Resolution of declared constructors on bean Class [project.transactionsservice.infrastructure.adapters.TransactionsAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@31a85d67] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/infrastructure/factory/TransactionsFactory
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 36 common frames omitted
Caused by: java.lang.NoClassDefFoundError: project/transactionsservice/infrastructure/factory/TransactionsFactory
	at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3429)
	at java.base/java.lang.Class.getDeclaredConstructors(Class.java:2608)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:313)
	... 49 common frames omitted
Caused by: java.lang.ClassNotFoundException: project.transactionsservice.infrastructure.factory.TransactionsFactory
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:495)
	at java.base/java.lang.Class.forName(Class.java:474)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 53 common frames omitted
2024-05-21 16:50:55 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 12248 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 16:50:55 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 16:50:55 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 16:50:55 [restartedMain] INFO  : Finished Spring Data repository scanning in 19 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 16:50:55 [restartedMain] INFO  : BeanFactory id=0244ee5f-6f8d-3d68-b012-472e2fe177f7
2024-05-21 16:50:55 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:50:55 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:50:55 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:50:55 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionsAdapter': Resolution of declared constructors on bean Class [project.transactionsservice.infrastructure.adapters.TransactionsAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@ed84186] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/infrastructure/factory/TransactionsFactory
2024-05-21 16:50:55 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-21 16:50:55 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionsAdapter': Resolution of declared constructors on bean Class [project.transactionsservice.infrastructure.adapters.TransactionsAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@ed84186] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/infrastructure/factory/TransactionsFactory
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.transactionsservice.TransactionsServiceApplication.main(TransactionsServiceApplication.java:16)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionsAdapter': Resolution of declared constructors on bean Class [project.transactionsservice.infrastructure.adapters.TransactionsAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@ed84186] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/infrastructure/factory/TransactionsFactory
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 22 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionsAdapter': Resolution of declared constructors on bean Class [project.transactionsservice.infrastructure.adapters.TransactionsAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@ed84186] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/infrastructure/factory/TransactionsFactory
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 36 common frames omitted
Caused by: java.lang.NoClassDefFoundError: project/transactionsservice/infrastructure/factory/TransactionsFactory
	at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3429)
	at java.base/java.lang.Class.getDeclaredConstructors(Class.java:2608)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:313)
	... 49 common frames omitted
Caused by: java.lang.ClassNotFoundException: project.transactionsservice.infrastructure.factory.TransactionsFactory
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:495)
	at java.base/java.lang.Class.forName(Class.java:474)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 53 common frames omitted
2024-05-21 16:51:37 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 12248 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 16:51:37 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 16:51:38 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 16:51:38 [restartedMain] INFO  : Finished Spring Data repository scanning in 14 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 16:51:38 [restartedMain] INFO  : BeanFactory id=cbb1117a-ffcf-3b28-b022-0decc6f6587c
2024-05-21 16:51:38 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:51:38 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:51:38 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:51:38 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionsAdapter': Resolution of declared constructors on bean Class [project.transactionsservice.infrastructure.adapters.TransactionsAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@ad8e768] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/infrastructure/factory/TransactionsFactory
2024-05-21 16:51:38 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-21 16:51:38 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionsAdapter': Resolution of declared constructors on bean Class [project.transactionsservice.infrastructure.adapters.TransactionsAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@ad8e768] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/infrastructure/factory/TransactionsFactory
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.transactionsservice.TransactionsServiceApplication.main(TransactionsServiceApplication.java:16)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionsAdapter': Resolution of declared constructors on bean Class [project.transactionsservice.infrastructure.adapters.TransactionsAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@ad8e768] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/infrastructure/factory/TransactionsFactory
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 22 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionsAdapter': Resolution of declared constructors on bean Class [project.transactionsservice.infrastructure.adapters.TransactionsAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@ad8e768] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/infrastructure/factory/TransactionsFactory
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 36 common frames omitted
Caused by: java.lang.NoClassDefFoundError: project/transactionsservice/infrastructure/factory/TransactionsFactory
	at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3429)
	at java.base/java.lang.Class.getDeclaredConstructors(Class.java:2608)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:313)
	... 49 common frames omitted
Caused by: java.lang.ClassNotFoundException: project.transactionsservice.infrastructure.factory.TransactionsFactory
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:495)
	at java.base/java.lang.Class.forName(Class.java:474)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 53 common frames omitted
2024-05-21 16:51:39 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 12248 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 16:51:39 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 16:51:39 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 16:51:39 [restartedMain] INFO  : Finished Spring Data repository scanning in 19 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 16:51:39 [restartedMain] INFO  : BeanFactory id=0244ee5f-6f8d-3d68-b012-472e2fe177f7
2024-05-21 16:51:39 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:51:39 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:51:39 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:51:39 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionsAdapter': Resolution of declared constructors on bean Class [project.transactionsservice.infrastructure.adapters.TransactionsAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@46d63eae] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/infrastructure/factory/TransactionsFactory
2024-05-21 16:51:39 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-21 16:51:39 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionsAdapter': Resolution of declared constructors on bean Class [project.transactionsservice.infrastructure.adapters.TransactionsAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@46d63eae] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/infrastructure/factory/TransactionsFactory
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.transactionsservice.TransactionsServiceApplication.main(TransactionsServiceApplication.java:16)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionsAdapter': Resolution of declared constructors on bean Class [project.transactionsservice.infrastructure.adapters.TransactionsAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@46d63eae] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/infrastructure/factory/TransactionsFactory
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 22 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionsAdapter': Resolution of declared constructors on bean Class [project.transactionsservice.infrastructure.adapters.TransactionsAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@46d63eae] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/infrastructure/factory/TransactionsFactory
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 36 common frames omitted
Caused by: java.lang.NoClassDefFoundError: project/transactionsservice/infrastructure/factory/TransactionsFactory
	at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3429)
	at java.base/java.lang.Class.getDeclaredConstructors(Class.java:2608)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:313)
	... 49 common frames omitted
Caused by: java.lang.ClassNotFoundException: project.transactionsservice.infrastructure.factory.TransactionsFactory
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:495)
	at java.base/java.lang.Class.forName(Class.java:474)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 53 common frames omitted
2024-05-21 16:53:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 16:54:09 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 16:56:26 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 12248 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 16:56:26 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 16:56:26 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 16:56:26 [restartedMain] INFO  : Finished Spring Data repository scanning in 25 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 16:56:26 [restartedMain] INFO  : BeanFactory id=664ea7ac-5219-3b49-98b8-85163c3b75cd
2024-05-21 16:56:26 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:56:26 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:56:26 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 16:56:26 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'project.transactionsservice.domain.ports.TransactionsPort' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2024-05-21 16:56:26 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-21 16:56:26 [restartedMain] ERROR : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in project.transactionsservice.application.service.domainService.TransactionsDomainService required a bean of type 'project.transactionsservice.domain.ports.TransactionsPort' that could not be found.


Action:

Consider defining a bean of type 'project.transactionsservice.domain.ports.TransactionsPort' in your configuration.

2024-05-21 16:58:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 16:59:09 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 17:03:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 17:04:09 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 17:08:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 17:09:09 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 17:13:09 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 12248 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 17:13:09 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 17:13:09 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 17:13:09 [restartedMain] INFO  : Finished Spring Data repository scanning in 14 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 17:13:09 [restartedMain] INFO  : BeanFactory id=664ea7ac-5219-3b49-98b8-85163c3b75cd
2024-05-21 17:13:09 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 17:13:09 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 17:13:09 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 17:13:09 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionsDomainService': Resolution of declared constructors on bean Class [project.transactionsservice.application.service.domainService.TransactionsDomainService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@79feb33d] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/domain/ports/TransactionsPort
2024-05-21 17:13:09 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-21 17:13:09 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionsDomainService': Resolution of declared constructors on bean Class [project.transactionsservice.application.service.domainService.TransactionsDomainService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@79feb33d] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/domain/ports/TransactionsPort
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.transactionsservice.TransactionsServiceApplication.main(TransactionsServiceApplication.java:16)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionsDomainService': Resolution of declared constructors on bean Class [project.transactionsservice.application.service.domainService.TransactionsDomainService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@79feb33d] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/domain/ports/TransactionsPort
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 22 common frames omitted
Caused by: java.lang.NoClassDefFoundError: project/transactionsservice/domain/ports/TransactionsPort
	at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3429)
	at java.base/java.lang.Class.getDeclaredConstructors(Class.java:2608)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:313)
	... 35 common frames omitted
Caused by: java.lang.ClassNotFoundException: project.transactionsservice.domain.ports.TransactionsPort
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:495)
	at java.base/java.lang.Class.forName(Class.java:474)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 39 common frames omitted
2024-05-21 17:13:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 17:14:09 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 17:18:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 17:19:09 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 17:22:16 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 12248 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 17:22:16 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 17:22:16 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 17:22:16 [restartedMain] INFO  : Finished Spring Data repository scanning in 14 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 17:22:16 [restartedMain] INFO  : BeanFactory id=59c53fc3-f645-3749-8f3c-ffe8d029c31d
2024-05-21 17:22:16 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 17:22:16 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 17:22:16 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 17:22:16 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'project.transactionsservice.application.service.TransactionsService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2024-05-21 17:22:16 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-21 17:22:16 [restartedMain] ERROR : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in project.transactionsservice.application.controller.TransactionsController required a bean of type 'project.transactionsservice.application.service.TransactionsService' that could not be found.


Action:

Consider defining a bean of type 'project.transactionsservice.application.service.TransactionsService' in your configuration.

2024-05-21 17:23:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 17:24:09 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 17:26:27 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 12248 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 17:26:27 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 17:26:27 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 17:26:27 [restartedMain] INFO  : Finished Spring Data repository scanning in 15 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 17:26:27 [restartedMain] INFO  : BeanFactory id=07f53792-4069-3897-8cad-1fc4775777ad
2024-05-21 17:26:27 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 17:26:27 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 17:26:27 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 17:26:27 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'project.transactionsservice.application.service.TransactionsService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2024-05-21 17:26:27 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-21 17:26:27 [restartedMain] ERROR : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in project.transactionsservice.application.controller.TransactionsController required a bean of type 'project.transactionsservice.application.service.TransactionsService' that could not be found.


Action:

Consider defining a bean of type 'project.transactionsservice.application.service.TransactionsService' in your configuration.

2024-05-21 17:26:37 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 12248 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 17:26:37 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 17:26:38 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 17:26:38 [restartedMain] INFO  : Finished Spring Data repository scanning in 14 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 17:26:38 [restartedMain] INFO  : BeanFactory id=07f53792-4069-3897-8cad-1fc4775777ad
2024-05-21 17:26:38 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 17:26:38 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 17:26:38 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 17:26:38 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'project.transactionsservice.application.service.TransactionsService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2024-05-21 17:26:38 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-21 17:26:38 [restartedMain] ERROR : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in project.transactionsservice.application.controller.TransactionsController required a bean of type 'project.transactionsservice.application.service.TransactionsService' that could not be found.


Action:

Consider defining a bean of type 'project.transactionsservice.application.service.TransactionsService' in your configuration.

2024-05-21 17:26:39 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 12248 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 17:26:39 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 17:26:39 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 17:26:39 [restartedMain] INFO  : Finished Spring Data repository scanning in 11 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 17:26:39 [restartedMain] INFO  : BeanFactory id=07f53792-4069-3897-8cad-1fc4775777ad
2024-05-21 17:26:39 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 17:26:39 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 17:26:39 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 17:26:39 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'project.transactionsservice.application.service.TransactionsService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2024-05-21 17:26:39 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-21 17:26:39 [restartedMain] ERROR : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in project.transactionsservice.application.controller.TransactionsController required a bean of type 'project.transactionsservice.application.service.TransactionsService' that could not be found.


Action:

Consider defining a bean of type 'project.transactionsservice.application.service.TransactionsService' in your configuration.

2024-05-21 17:28:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 17:29:09 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 17:29:14 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 12248 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 17:29:14 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 17:29:14 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 17:29:14 [restartedMain] INFO  : Finished Spring Data repository scanning in 15 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 17:29:14 [restartedMain] INFO  : BeanFactory id=59c53fc3-f645-3749-8f3c-ffe8d029c31d
2024-05-21 17:29:14 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 17:29:14 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 17:29:14 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 17:29:14 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'project.transactionsservice.application.service.TransactionsService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2024-05-21 17:29:14 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-21 17:29:14 [restartedMain] ERROR : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in project.transactionsservice.application.controller.TransactionsController required a bean of type 'project.transactionsservice.application.service.TransactionsService' that could not be found.


Action:

Consider defining a bean of type 'project.transactionsservice.application.service.TransactionsService' in your configuration.

2024-05-21 17:32:41 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 12248 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 17:32:41 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 17:32:41 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 17:32:41 [restartedMain] INFO  : Finished Spring Data repository scanning in 15 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 17:32:41 [restartedMain] INFO  : BeanFactory id=59c53fc3-f645-3749-8f3c-ffe8d029c31d
2024-05-21 17:32:41 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 17:32:41 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 17:32:41 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 17:32:41 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'project.transactionsservice.application.service.TransactionsService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2024-05-21 17:32:41 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-21 17:32:41 [restartedMain] ERROR : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in project.transactionsservice.application.controller.TransactionsController required a bean of type 'project.transactionsservice.application.service.TransactionsService' that could not be found.


Action:

Consider defining a bean of type 'project.transactionsservice.application.service.TransactionsService' in your configuration.

2024-05-21 17:33:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 17:34:09 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 17:38:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 17:39:09 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 17:43:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 17:44:09 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 17:48:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 17:49:09 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 17:53:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 17:54:09 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 17:58:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 17:59:09 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:03:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:04:09 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:08:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:09:09 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:13:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:14:09 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:18:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:19:05 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 4616 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 18:19:05 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 18:19:05 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 18:19:05 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 18:19:05 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 18:19:06 [restartedMain] INFO  : Finished Spring Data repository scanning in 140 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 18:19:06 [restartedMain] INFO  : BeanFactory id=2ccaf21d-c85e-3d95-bb03-755fe6a2ff40
2024-05-21 18:19:06 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:19:06 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:19:06 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:19:06 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@7ddbfb7a, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5d4f4805]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 18:19:06 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 18:19:06 [cluster-rtt-ClusterId{value='664d2bead8fd90347ae05e20', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:32}] to localhost:27017
2024-05-21 18:19:06 [cluster-ClusterId{value='664d2bead8fd90347ae05e20', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:31}] to localhost:27017
2024-05-21 18:19:06 [cluster-ClusterId{value='664d2bead8fd90347ae05e20', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=55228500}
2024-05-21 18:19:07 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 18:19:07 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 18:19:07 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 18:19:07 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 18:19:08 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 18:19:08 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 18:19:08 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:19:08 [restartedMain] INFO  : Disable delta property : false
2024-05-21 18:19:08 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 18:19:08 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 18:19:08 [restartedMain] INFO  : Application is null : false
2024-05-21 18:19:08 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 18:19:08 [restartedMain] INFO  : Application version is -1: true
2024-05-21 18:19:08 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 18:19:08 [restartedMain] INFO  : The response status is 200
2024-05-21 18:19:08 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 18:19:08 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 18:19:08 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716333548515 with initial instances count: 2
2024-05-21 18:19:08 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 18:19:08 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716333548518, current=UP, previous=STARTING]
2024-05-21 18:19:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 18:19:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 18:19:08 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 18:19:08 [restartedMain] INFO  : Updating port to 8081
2024-05-21 18:19:08 [restartedMain] INFO  : Started TransactionsServiceApplication in 4.355 seconds (JVM running for 5.159)
2024-05-21 18:19:09 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:21:05 [reactor-http-nio-3] ERROR : [713aa9f2-1]  500 Server Error for HTTP POST "/transactions/create"
java.lang.IllegalArgumentException: No strategy found for transaction type: DEPOSITO
	at project.transactionsservice.infrastructure.adapters.TransactionsAdapter.lambda$saveTransaction$1(TransactionsAdapter.java:46)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler project.transactionsservice.application.controller.TransactionsController#createTransactions(TransactionDTO) [DispatcherHandler]
	*__checkpoint ⇢ HTTP POST "/transactions/create" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at project.transactionsservice.infrastructure.adapters.TransactionsAdapter.lambda$saveTransaction$1(TransactionsAdapter.java:46)
		at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:152)
		at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:57)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.complete(MonoIgnoreThen.java:292)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onNext(MonoIgnoreThen.java:187)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:258)
		at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:347)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:101)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:439)
		at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:656)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:276)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 18:23:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:24:08 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:24:09 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:28:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:29:08 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:29:09 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:32:26 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 18:32:26 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716334346115, current=DOWN, previous=UP]
2024-05-21 18:32:26 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 18:32:26 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 18:32:28 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 18:32:31 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 18:32:31 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 18:32:31 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 18:32:37 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 12428 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 18:32:37 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 18:32:37 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 18:32:37 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 18:32:38 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 18:32:38 [restartedMain] INFO  : Finished Spring Data repository scanning in 148 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 18:32:39 [restartedMain] INFO  : BeanFactory id=2ccaf21d-c85e-3d95-bb03-755fe6a2ff40
2024-05-21 18:32:39 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:32:39 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:32:39 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:32:39 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3c8d7bc3, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@44fb579d]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 18:32:39 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 18:32:39 [cluster-rtt-ClusterId{value='664d2f17d5c7961e14ff8861', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:34}] to localhost:27017
2024-05-21 18:32:39 [cluster-ClusterId{value='664d2f17d5c7961e14ff8861', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:33}] to localhost:27017
2024-05-21 18:32:39 [cluster-ClusterId{value='664d2f17d5c7961e14ff8861', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=85747500}
2024-05-21 18:32:40 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 18:32:40 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 18:32:41 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 18:32:41 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 18:32:41 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 18:32:41 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 18:32:41 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:32:41 [restartedMain] INFO  : Disable delta property : false
2024-05-21 18:32:41 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 18:32:41 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 18:32:41 [restartedMain] INFO  : Application is null : false
2024-05-21 18:32:41 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 18:32:41 [restartedMain] INFO  : Application version is -1: true
2024-05-21 18:32:41 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 18:32:41 [restartedMain] INFO  : The response status is 200
2024-05-21 18:32:41 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 18:32:41 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 18:32:41 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716334361825 with initial instances count: 2
2024-05-21 18:32:41 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 18:32:41 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716334361828, current=UP, previous=STARTING]
2024-05-21 18:32:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 18:32:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 18:32:41 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 18:32:41 [restartedMain] INFO  : Updating port to 8081
2024-05-21 18:32:41 [restartedMain] INFO  : Started TransactionsServiceApplication in 4.923 seconds (JVM running for 5.801)
2024-05-21 18:32:45 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-21 18:32:45 [Thread-1] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 18:32:45 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716334365310, current=DOWN, previous=UP]
2024-05-21 18:32:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService: registering service...
2024-05-21 18:32:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - registration status: 204
2024-05-21 18:32:47 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-21 18:32:50 [Thread-1] INFO  : Unregistering ...
2024-05-21 18:32:50 [Thread-1] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - deregister  status: 200
2024-05-21 18:32:50 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-21 18:32:50 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 20932 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 18:32:50 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 18:32:51 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 18:32:51 [restartedMain] INFO  : Finished Spring Data repository scanning in 42 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 18:32:51 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 18:32:51 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:32:51 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:32:51 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:32:51 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@7f313e05, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@4d8827b8]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 18:32:51 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 18:32:51 [cluster-rtt-ClusterId{value='664d2f2341d23e130131dcf4', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:3, serverValue:35}] to localhost:27017
2024-05-21 18:32:51 [cluster-ClusterId{value='664d2f2341d23e130131dcf4', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:36}] to localhost:27017
2024-05-21 18:32:51 [cluster-ClusterId{value='664d2f2341d23e130131dcf4', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=5926000}
2024-05-21 18:32:52 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 18:32:52 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 18:32:52 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 18:32:52 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 18:32:53 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 18:32:53 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 18:32:53 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:32:53 [restartedMain] INFO  : Disable delta property : false
2024-05-21 18:32:53 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 18:32:53 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 18:32:53 [restartedMain] INFO  : Application is null : false
2024-05-21 18:32:53 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 18:32:53 [restartedMain] INFO  : Application version is -1: true
2024-05-21 18:32:53 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 18:32:53 [restartedMain] INFO  : The response status is 200
2024-05-21 18:32:53 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 18:32:53 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 18:32:53 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716334373111 with initial instances count: 2
2024-05-21 18:32:53 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 18:32:53 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716334373113, current=UP, previous=STARTING]
2024-05-21 18:32:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService: registering service...
2024-05-21 18:32:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - registration status: 204
2024-05-21 18:32:53 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 18:32:53 [restartedMain] INFO  : Updating port to 8080
2024-05-21 18:32:53 [restartedMain] INFO  : Started FinalProjectApplication in 2.835 seconds (JVM running for 8028.353)
2024-05-21 18:32:53 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 18:32:53 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-21 18:32:53 [Thread-8] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 18:32:53 [Thread-8] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716334373923, current=DOWN, previous=UP]
2024-05-21 18:32:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService: registering service...
2024-05-21 18:32:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - registration status: 204
2024-05-21 18:32:56 [Thread-8] INFO  : Shutting down DiscoveryClient ...
2024-05-21 18:32:59 [Thread-8] INFO  : Unregistering ...
2024-05-21 18:32:59 [Thread-8] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - deregister  status: 200
2024-05-21 18:32:59 [Thread-8] INFO  : Completed shut down of DiscoveryClient
2024-05-21 18:32:59 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 20932 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 18:32:59 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 18:32:59 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 18:32:59 [restartedMain] INFO  : Finished Spring Data repository scanning in 18 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 18:32:59 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 18:32:59 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:32:59 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:32:59 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:32:59 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@63562279, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@4d8827b8]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 18:32:59 [cluster-ClusterId{value='664d2f2b41d23e130131dcf5', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:38}] to localhost:27017
2024-05-21 18:32:59 [cluster-rtt-ClusterId{value='664d2f2b41d23e130131dcf5', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:5, serverValue:37}] to localhost:27017
2024-05-21 18:32:59 [cluster-ClusterId{value='664d2f2b41d23e130131dcf5', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2836700}
2024-05-21 18:32:59 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 18:32:59 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 18:32:59 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 18:32:59 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 18:32:59 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 18:32:59 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 18:32:59 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 18:32:59 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:32:59 [restartedMain] INFO  : Disable delta property : false
2024-05-21 18:32:59 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 18:32:59 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 18:32:59 [restartedMain] INFO  : Application is null : false
2024-05-21 18:32:59 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 18:32:59 [restartedMain] INFO  : Application version is -1: true
2024-05-21 18:32:59 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 18:32:59 [restartedMain] INFO  : The response status is 200
2024-05-21 18:32:59 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 18:32:59 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 18:32:59 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716334379909 with initial instances count: 2
2024-05-21 18:32:59 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 18:32:59 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716334379910, current=UP, previous=STARTING]
2024-05-21 18:32:59 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService: registering service...
2024-05-21 18:32:59 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - registration status: 204
2024-05-21 18:32:59 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 18:32:59 [restartedMain] INFO  : Updating port to 8080
2024-05-21 18:33:00 [restartedMain] INFO  : Started FinalProjectApplication in 0.959 seconds (JVM running for 8034.964)
2024-05-21 18:33:00 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 18:33:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:34:30 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 18:34:30 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716334470130, current=DOWN, previous=UP]
2024-05-21 18:34:30 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 18:34:30 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 18:34:32 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 18:34:35 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 18:34:35 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 18:34:35 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 18:34:40 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 23396 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 18:34:40 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 18:34:40 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 18:34:40 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 18:34:41 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 18:34:41 [restartedMain] INFO  : Finished Spring Data repository scanning in 145 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 18:34:41 [restartedMain] INFO  : BeanFactory id=2ccaf21d-c85e-3d95-bb03-755fe6a2ff40
2024-05-21 18:34:41 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:34:41 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:34:41 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:34:42 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@37518cc7, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@13f6785c]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 18:34:42 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 18:34:42 [cluster-ClusterId{value='664d2f92ba157f223bc63101', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:40}] to localhost:27017
2024-05-21 18:34:42 [cluster-rtt-ClusterId{value='664d2f92ba157f223bc63101', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:39}] to localhost:27017
2024-05-21 18:34:42 [cluster-ClusterId{value='664d2f92ba157f223bc63101', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=57618200}
2024-05-21 18:34:42 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 18:34:42 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 18:34:43 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 18:34:43 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 18:34:44 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 18:34:44 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 18:34:44 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:34:44 [restartedMain] INFO  : Disable delta property : false
2024-05-21 18:34:44 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 18:34:44 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 18:34:44 [restartedMain] INFO  : Application is null : false
2024-05-21 18:34:44 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 18:34:44 [restartedMain] INFO  : Application version is -1: true
2024-05-21 18:34:44 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 18:34:44 [restartedMain] INFO  : The response status is 200
2024-05-21 18:34:44 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 18:34:44 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 18:34:44 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716334484499 with initial instances count: 3
2024-05-21 18:34:44 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 18:34:44 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716334484501, current=UP, previous=STARTING]
2024-05-21 18:34:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 18:34:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 18:34:44 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 18:34:44 [restartedMain] INFO  : Updating port to 8081
2024-05-21 18:34:44 [restartedMain] INFO  : Started TransactionsServiceApplication in 4.629 seconds (JVM running for 5.495)
2024-05-21 18:36:52 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 18:36:52 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716334612494, current=DOWN, previous=UP]
2024-05-21 18:36:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 18:36:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 18:36:54 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 18:36:57 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 18:36:57 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 18:36:57 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 18:37:04 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 16924 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 18:37:04 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 18:37:04 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 18:37:04 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 18:37:05 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 18:37:05 [restartedMain] INFO  : Finished Spring Data repository scanning in 148 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 18:37:05 [restartedMain] INFO  : BeanFactory id=2ccaf21d-c85e-3d95-bb03-755fe6a2ff40
2024-05-21 18:37:05 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:37:05 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:37:05 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:37:06 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1279403f, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3342b2cb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 18:37:06 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 18:37:06 [cluster-ClusterId{value='664d30222d72896725f7d135', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:42}] to localhost:27017
2024-05-21 18:37:06 [cluster-rtt-ClusterId{value='664d30222d72896725f7d135', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:41}] to localhost:27017
2024-05-21 18:37:06 [cluster-ClusterId{value='664d30222d72896725f7d135', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=75189100}
2024-05-21 18:37:06 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 18:37:06 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 18:37:07 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 18:37:07 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 18:37:07 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 18:37:07 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 18:37:07 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:37:07 [restartedMain] INFO  : Disable delta property : false
2024-05-21 18:37:07 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 18:37:07 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 18:37:07 [restartedMain] INFO  : Application is null : false
2024-05-21 18:37:07 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 18:37:07 [restartedMain] INFO  : Application version is -1: true
2024-05-21 18:37:07 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 18:37:08 [restartedMain] INFO  : The response status is 200
2024-05-21 18:37:08 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 18:37:08 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 18:37:08 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716334628255 with initial instances count: 2
2024-05-21 18:37:08 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 18:37:08 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716334628258, current=UP, previous=STARTING]
2024-05-21 18:37:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 18:37:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 18:37:08 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 18:37:08 [restartedMain] INFO  : Updating port to 8081
2024-05-21 18:37:08 [restartedMain] INFO  : Started TransactionsServiceApplication in 4.858 seconds (JVM running for 5.797)
2024-05-21 18:37:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:38:13 [nioEventLoopGroup-7-4] INFO  : Opened connection [connectionId{localValue:8, serverValue:44}] to localhost:27017
2024-05-21 18:38:13 [nioEventLoopGroup-7-3] INFO  : Opened connection [connectionId{localValue:7, serverValue:43}] to localhost:27017
2024-05-21 18:38:13 [nioEventLoopGroup-7-5] INFO  : Opened connection [connectionId{localValue:9, serverValue:45}] to localhost:27017
2024-05-21 18:38:13 [reactor-http-nio-3] ERROR : [4f5f71cf-1]  500 Server Error for HTTP POST "/transactions/create"
java.lang.IllegalStateException: Could not resolve view with name 'transactions/create'.
	at org.springframework.web.reactive.result.view.ViewResolutionResultHandler.lambda$resolveViews$3(ViewResolutionResultHandler.java:278)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Exception handler project.transactionsservice.infrastructure.exceptions.ErrorHandler#handleNotFoundAccount(NotFoundProduct), error="Bank account not found" [DispatcherHandler]
	*__checkpoint ⇢ HTTP POST "/transactions/create" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.web.reactive.result.view.ViewResolutionResultHandler.lambda$resolveViews$3(ViewResolutionResultHandler.java:278)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:113)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:129)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:368)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onComplete(FluxConcatMap.java:276)
		at reactor.core.publisher.Operators.complete(Operators.java:137)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:144)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2400)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2196)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2070)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:258)
		at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:347)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2400)
		at reactor.core.publisher.MonoZip$ZipInner.onSubscribe(MonoZip.java:336)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:129)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onError(Operators.java:2065)
		at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:142)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:439)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:493)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:768)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 18:38:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:41:56 [reactor-http-nio-3] ERROR : [4f5f71cf-2]  500 Server Error for HTTP POST "/transactions/create"
java.lang.IllegalStateException: Could not resolve view with name 'transactions/create'.
	at org.springframework.web.reactive.result.view.ViewResolutionResultHandler.lambda$resolveViews$3(ViewResolutionResultHandler.java:278)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Exception handler project.transactionsservice.infrastructure.exceptions.ErrorHandler#handleNotFoundAccount(NotFoundProduct), error="Bank account not found" [DispatcherHandler]
	*__checkpoint ⇢ HTTP POST "/transactions/create" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.web.reactive.result.view.ViewResolutionResultHandler.lambda$resolveViews$3(ViewResolutionResultHandler.java:278)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:113)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:129)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:368)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onComplete(FluxConcatMap.java:276)
		at reactor.core.publisher.Operators.complete(Operators.java:137)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:144)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2400)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2196)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2070)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:258)
		at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:347)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2400)
		at reactor.core.publisher.MonoZip$ZipInner.onSubscribe(MonoZip.java:336)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:129)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onError(Operators.java:2065)
		at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:142)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:439)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:493)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:768)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 18:42:07 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:42:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:43:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:44:15 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 18:44:15 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716335055302, current=DOWN, previous=UP]
2024-05-21 18:44:15 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 18:44:15 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 18:44:17 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 18:44:20 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 18:44:20 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 18:44:20 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 18:44:29 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 22884 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 18:44:29 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 18:44:29 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 18:44:29 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 18:44:30 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 18:44:30 [restartedMain] INFO  : Finished Spring Data repository scanning in 111 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 18:44:30 [restartedMain] INFO  : BeanFactory id=2ccaf21d-c85e-3d95-bb03-755fe6a2ff40
2024-05-21 18:44:30 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:44:30 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:44:30 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:44:30 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3c8d7bc3, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@44fb579d]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 18:44:30 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 18:44:30 [cluster-ClusterId{value='664d31deaeaca6628b8000b5', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:47}] to localhost:27017
2024-05-21 18:44:30 [cluster-rtt-ClusterId{value='664d31deaeaca6628b8000b5', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:46}] to localhost:27017
2024-05-21 18:44:30 [cluster-ClusterId{value='664d31deaeaca6628b8000b5', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=52869800}
2024-05-21 18:44:31 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 18:44:31 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 18:44:31 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 18:44:31 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 18:44:31 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 18:44:31 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 18:44:31 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:44:31 [restartedMain] INFO  : Disable delta property : false
2024-05-21 18:44:31 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 18:44:31 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 18:44:31 [restartedMain] INFO  : Application is null : false
2024-05-21 18:44:31 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 18:44:31 [restartedMain] INFO  : Application version is -1: true
2024-05-21 18:44:31 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 18:44:32 [restartedMain] INFO  : The response status is 200
2024-05-21 18:44:32 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 18:44:32 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 18:44:32 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716335072179 with initial instances count: 2
2024-05-21 18:44:32 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 18:44:32 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716335072182, current=UP, previous=STARTING]
2024-05-21 18:44:32 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 18:44:32 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 18:44:32 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 18:44:32 [restartedMain] INFO  : Updating port to 8081
2024-05-21 18:44:32 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.489 seconds (JVM running for 4.411)
2024-05-21 18:44:38 [reactor-http-nio-3] ERROR : [8c904e23-1]  500 Server Error for HTTP POST "/transactions/create"
java.lang.IllegalStateException: Could not resolve view with name 'transactions/create'.
	at org.springframework.web.reactive.result.view.ViewResolutionResultHandler.lambda$resolveViews$3(ViewResolutionResultHandler.java:278)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Exception handler project.transactionsservice.infrastructure.exceptions.ErrorHandler#handleNotFoundAccount(NotFoundProduct), error="Bank account not found" [DispatcherHandler]
	*__checkpoint ⇢ HTTP POST "/transactions/create" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.web.reactive.result.view.ViewResolutionResultHandler.lambda$resolveViews$3(ViewResolutionResultHandler.java:278)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:113)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:129)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:368)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onComplete(FluxConcatMap.java:276)
		at reactor.core.publisher.Operators.complete(Operators.java:137)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:144)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2400)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2196)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2070)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:258)
		at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:347)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2400)
		at reactor.core.publisher.MonoZip$ZipInner.onSubscribe(MonoZip.java:336)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:129)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onError(Operators.java:2065)
		at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:142)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:439)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:493)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:768)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 18:46:48 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 18:46:48 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716335208084, current=DOWN, previous=UP]
2024-05-21 18:46:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 18:46:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 18:46:50 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 18:46:53 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 18:46:53 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 18:46:53 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 18:46:56 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 792 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 18:46:56 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 18:46:57 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 18:46:57 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 18:46:57 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 18:46:57 [restartedMain] INFO  : Finished Spring Data repository scanning in 99 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 18:46:57 [restartedMain] INFO  : BeanFactory id=2ccaf21d-c85e-3d95-bb03-755fe6a2ff40
2024-05-21 18:46:57 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:46:57 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:46:57 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:46:58 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@4fcf3f9e, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@157a4260]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 18:46:58 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 18:46:58 [cluster-ClusterId{value='664d327209e12533d617b993', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:49}] to localhost:27017
2024-05-21 18:46:58 [cluster-rtt-ClusterId{value='664d327209e12533d617b993', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:48}] to localhost:27017
2024-05-21 18:46:58 [cluster-ClusterId{value='664d327209e12533d617b993', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=51411400}
2024-05-21 18:46:58 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 18:46:58 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 18:46:58 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 18:46:59 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 18:46:59 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 18:46:59 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 18:46:59 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:46:59 [restartedMain] INFO  : Disable delta property : false
2024-05-21 18:46:59 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 18:46:59 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 18:46:59 [restartedMain] INFO  : Application is null : false
2024-05-21 18:46:59 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 18:46:59 [restartedMain] INFO  : Application version is -1: true
2024-05-21 18:46:59 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 18:46:59 [restartedMain] INFO  : The response status is 200
2024-05-21 18:46:59 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 18:46:59 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 18:46:59 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716335219462 with initial instances count: 3
2024-05-21 18:46:59 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 18:46:59 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716335219464, current=UP, previous=STARTING]
2024-05-21 18:46:59 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 18:46:59 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 18:46:59 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 18:46:59 [restartedMain] INFO  : Updating port to 8081
2024-05-21 18:46:59 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.097 seconds (JVM running for 3.759)
2024-05-21 18:47:18 [reactor-http-nio-3] ERROR : [a24b61ff-1]  500 Server Error for HTTP POST "/transactions/create"
java.lang.IllegalStateException: Could not resolve view with name 'transactions/create'.
	at org.springframework.web.reactive.result.view.ViewResolutionResultHandler.lambda$resolveViews$3(ViewResolutionResultHandler.java:278)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Exception handler project.transactionsservice.infrastructure.exceptions.ErrorHandler#handleNotFoundAccount(NotFoundProduct), error="Bank account not found" [DispatcherHandler]
	*__checkpoint ⇢ HTTP POST "/transactions/create" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.web.reactive.result.view.ViewResolutionResultHandler.lambda$resolveViews$3(ViewResolutionResultHandler.java:278)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:113)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:129)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:368)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onComplete(FluxConcatMap.java:276)
		at reactor.core.publisher.Operators.complete(Operators.java:137)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:144)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2400)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2196)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2070)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:258)
		at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:347)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2400)
		at reactor.core.publisher.MonoZip$ZipInner.onSubscribe(MonoZip.java:336)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:129)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onError(Operators.java:2065)
		at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:142)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:439)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:493)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:768)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 18:47:54 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 18:47:54 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716335274745, current=DOWN, previous=UP]
2024-05-21 18:47:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 18:47:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 18:47:56 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 18:47:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:48:02 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 3920 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 18:48:02 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 18:48:02 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 18:48:02 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 18:48:02 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 18:48:02 [restartedMain] INFO  : Finished Spring Data repository scanning in 118 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 18:48:03 [restartedMain] INFO  : BeanFactory id=2ccaf21d-c85e-3d95-bb03-755fe6a2ff40
2024-05-21 18:48:03 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:48:03 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:48:03 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:48:03 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@7a9e6f3c, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6fd05d99]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 18:48:03 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 18:48:03 [cluster-ClusterId{value='664d32b3ea15a22182dd129c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:51}] to localhost:27017
2024-05-21 18:48:03 [cluster-rtt-ClusterId{value='664d32b3ea15a22182dd129c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:50}] to localhost:27017
2024-05-21 18:48:03 [cluster-ClusterId{value='664d32b3ea15a22182dd129c', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=54259900}
2024-05-21 18:48:03 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 18:48:03 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 18:48:04 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 18:48:04 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 18:48:04 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 18:48:04 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 18:48:04 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:48:04 [restartedMain] INFO  : Disable delta property : false
2024-05-21 18:48:04 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 18:48:04 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 18:48:04 [restartedMain] INFO  : Application is null : false
2024-05-21 18:48:04 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 18:48:04 [restartedMain] INFO  : Application version is -1: true
2024-05-21 18:48:04 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 18:48:05 [restartedMain] INFO  : The response status is 200
2024-05-21 18:48:05 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 18:48:05 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 18:48:05 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716335285137 with initial instances count: 3
2024-05-21 18:48:05 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 18:48:05 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716335285140, current=UP, previous=STARTING]
2024-05-21 18:48:05 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 18:48:05 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 18:48:05 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 18:48:05 [restartedMain] INFO  : Updating port to 8081
2024-05-21 18:48:05 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.793 seconds (JVM running for 5.293)
2024-05-21 18:48:11 [reactor-http-nio-3] ERROR : [a8148eae-1]  500 Server Error for HTTP POST "/transactions/create"
java.lang.IllegalStateException: Could not resolve view with name 'transactions/create'.
	at org.springframework.web.reactive.result.view.ViewResolutionResultHandler.lambda$resolveViews$3(ViewResolutionResultHandler.java:278)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoMapFuseable] :
	reactor.core.publisher.Mono.map(Mono.java:3443)
	org.springframework.web.reactive.result.view.ViewResolutionResultHandler.resolveViews(ViewResolutionResultHandler.java:276)
Error has been observed at the following site(s):
	*____________Mono.map ⇢ at org.springframework.web.reactive.result.view.ViewResolutionResultHandler.resolveViews(ViewResolutionResultHandler.java:276)
	|_       Mono.flatMap ⇢ at org.springframework.web.reactive.result.view.ViewResolutionResultHandler.lambda$handleResult$1(ViewResolutionResultHandler.java:248)
	*________Mono.flatMap ⇢ at org.springframework.web.reactive.result.view.ViewResolutionResultHandler.handleResult(ViewResolutionResultHandler.java:197)
	|_         checkpoint ⇢ Exception handler project.transactionsservice.infrastructure.exceptions.ErrorHandler#handleNotFoundAccount(NotFoundProduct), error="Bank account not found" [DispatcherHandler]
	*________Mono.flatMap ⇢ at org.springframework.web.reactive.DispatcherHandler.lambda$handleResult$5(DispatcherHandler.java:182)
	*__Mono.onErrorResume ⇢ at org.springframework.web.reactive.DispatcherHandler.handleResult(DispatcherHandler.java:181)
	*________Mono.flatMap ⇢ at org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:154)
	*__________Mono.defer ⇢ at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)
	|_ Mono.onErrorResume ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:77)
	*__________Mono.error ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler$CheckpointInsertingHandler.handle(ExceptionHandlingWebHandler.java:98)
	|_         checkpoint ⇢ HTTP POST "/transactions/create" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.web.reactive.result.view.ViewResolutionResultHandler.lambda$resolveViews$3(ViewResolutionResultHandler.java:278)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:113)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:129)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:368)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onComplete(FluxConcatMap.java:276)
		at reactor.core.publisher.Operators.complete(Operators.java:137)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:144)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2400)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2196)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2070)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:258)
		at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:347)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2400)
		at reactor.core.publisher.MonoZip$ZipInner.onSubscribe(MonoZip.java:336)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:129)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onError(Operators.java:2065)
		at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:142)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:152)
		at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete(FluxPeekFuseable.java:277)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:439)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:493)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:768)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 18:48:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:52:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:53:04 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:53:49 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 18:53:49 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716335629518, current=DOWN, previous=UP]
2024-05-21 18:53:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 18:53:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 18:53:51 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 18:53:54 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 18:53:54 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 18:53:54 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 18:53:59 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 17356 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 18:53:59 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 18:53:59 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 18:53:59 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 18:53:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:54:36 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 18:54:36 [restartedMain] INFO  : Finished Spring Data repository scanning in 102 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 18:54:36 [restartedMain] INFO  : BeanFactory id=2ccaf21d-c85e-3d95-bb03-755fe6a2ff40
2024-05-21 18:54:36 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:54:36 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:54:36 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:54:37 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@13e992fe, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@38e8f715]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 18:54:37 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 18:54:37 [cluster-ClusterId{value='664d343d4121b779292a2730', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:52}] to localhost:27017
2024-05-21 18:54:37 [cluster-rtt-ClusterId{value='664d343d4121b779292a2730', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:53}] to localhost:27017
2024-05-21 18:54:37 [cluster-ClusterId{value='664d343d4121b779292a2730', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=100469500}
2024-05-21 18:54:37 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 18:54:37 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 18:54:38 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 18:54:38 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 18:54:38 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 18:54:38 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 18:54:38 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:54:38 [restartedMain] INFO  : Disable delta property : false
2024-05-21 18:54:38 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 18:54:38 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 18:54:38 [restartedMain] INFO  : Application is null : false
2024-05-21 18:54:38 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 18:54:38 [restartedMain] INFO  : Application version is -1: true
2024-05-21 18:54:38 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 18:54:38 [restartedMain] INFO  : The response status is 200
2024-05-21 18:54:39 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 18:54:39 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 18:54:39 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716335679011 with initial instances count: 2
2024-05-21 18:54:39 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 18:54:39 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716335679014, current=UP, previous=STARTING]
2024-05-21 18:54:39 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 18:54:39 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 18:54:39 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 18:54:39 [restartedMain] INFO  : Updating port to 8081
2024-05-21 18:54:39 [restartedMain] INFO  : Started TransactionsServiceApplication in 40.042 seconds (JVM running for 41.127)
2024-05-21 18:54:39 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 18:54:39 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716335679156, current=DOWN, previous=UP]
2024-05-21 18:54:39 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 18:54:39 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 18:54:41 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 18:54:44 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 18:54:44 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 18:54:44 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 18:54:46 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 17852 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 18:54:46 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 18:54:47 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 18:54:47 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 18:54:47 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 18:54:47 [restartedMain] INFO  : Finished Spring Data repository scanning in 115 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 18:54:47 [restartedMain] INFO  : BeanFactory id=2ccaf21d-c85e-3d95-bb03-755fe6a2ff40
2024-05-21 18:54:47 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:54:47 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:54:47 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:54:48 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@cc5cd61, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@18ba6834]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 18:54:48 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 18:54:48 [cluster-ClusterId{value='664d34489164c83955e89b78', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:54}] to localhost:27017
2024-05-21 18:54:48 [cluster-rtt-ClusterId{value='664d34489164c83955e89b78', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:55}] to localhost:27017
2024-05-21 18:54:48 [cluster-ClusterId{value='664d34489164c83955e89b78', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=56754300}
2024-05-21 18:54:48 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 18:54:48 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 18:54:49 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 18:54:49 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 18:54:49 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 18:54:49 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 18:54:49 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:54:49 [restartedMain] INFO  : Disable delta property : false
2024-05-21 18:54:49 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 18:54:49 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 18:54:49 [restartedMain] INFO  : Application is null : false
2024-05-21 18:54:49 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 18:54:49 [restartedMain] INFO  : Application version is -1: true
2024-05-21 18:54:49 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 18:54:49 [restartedMain] INFO  : The response status is 200
2024-05-21 18:54:49 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 18:54:49 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 18:54:49 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716335689770 with initial instances count: 2
2024-05-21 18:54:49 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 18:54:49 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716335689775, current=UP, previous=STARTING]
2024-05-21 18:54:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 18:54:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 18:54:49 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 18:54:49 [restartedMain] INFO  : Updating port to 8081
2024-05-21 18:54:49 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.434 seconds (JVM running for 4.079)
2024-05-21 18:54:53 [reactor-http-nio-3] ERROR : [c1d3ec67-1]  500 Server Error for HTTP POST "/transactions/create"
java.lang.IllegalStateException: Could not resolve view with name 'transactions/create'.
	at org.springframework.web.reactive.result.view.ViewResolutionResultHandler.lambda$resolveViews$3(ViewResolutionResultHandler.java:278)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Exception handler project.transactionsservice.infrastructure.exceptions.ErrorHandler#handleNotFoundAccount(NotFoundProduct), error="Bank account not found" [DispatcherHandler]
	*__checkpoint ⇢ HTTP POST "/transactions/create" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.web.reactive.result.view.ViewResolutionResultHandler.lambda$resolveViews$3(ViewResolutionResultHandler.java:278)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:113)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:129)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:368)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onComplete(FluxConcatMap.java:276)
		at reactor.core.publisher.Operators.complete(Operators.java:137)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:144)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2400)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2196)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2070)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:258)
		at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:347)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2400)
		at reactor.core.publisher.MonoZip$ZipInner.onSubscribe(MonoZip.java:336)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:129)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onError(Operators.java:2065)
		at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:142)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:439)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:493)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:768)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 18:57:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:58:22 [SpringApplicationShutdownHook] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 18:58:22 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716335902325, current=DOWN, previous=UP]
2024-05-21 18:58:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService: registering service...
2024-05-21 18:58:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - registration status: 204
2024-05-21 18:58:22 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 18:58:22 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716335902333, current=DOWN, previous=UP]
2024-05-21 18:58:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 18:58:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 18:58:22 [SpringApplicationShutdownHook] INFO  : Unregistering application CLIENTSERVICE with eureka with status DOWN
2024-05-21 18:58:22 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716335902343, current=DOWN, previous=UP]
2024-05-21 18:58:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083: registering service...
2024-05-21 18:58:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083 - registration status: 204
2024-05-21 18:58:24 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 18:58:24 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 18:58:24 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 18:58:27 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 18:58:27 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 37 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 50 more

2024-05-21 18:58:27 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 18:58:27 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 38 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 51 more

2024-05-21 18:58:27 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 18:58:27 [SpringApplicationShutdownHook] ERROR : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 18:58:27 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 18:58:27 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 18:58:27 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 37 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 50 more

2024-05-21 18:58:27 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 18:58:27 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 38 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 51 more

2024-05-21 18:58:27 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 18:58:27 [SpringApplicationShutdownHook] ERROR : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 18:58:27 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 18:58:27 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 18:58:27 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 39 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.connect0(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.base/java.net.Socket.connect(Socket.java:608)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 52 more

2024-05-21 18:58:27 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 18:58:27 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 40 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.connect0(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.base/java.net.Socket.connect(Socket.java:608)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 53 more

2024-05-21 18:58:27 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 18:58:27 [SpringApplicationShutdownHook] ERROR : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
2024-05-21 18:58:27 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 18:58:48 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 21280 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 18:58:48 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 18:58:48 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 18:58:48 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 18:58:49 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 18:58:49 [restartedMain] INFO  : Finished Spring Data repository scanning in 115 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 18:58:49 [restartedMain] INFO  : BeanFactory id=2ccaf21d-c85e-3d95-bb03-755fe6a2ff40
2024-05-21 18:58:49 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:58:49 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:58:49 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 18:58:50 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@7921d09e, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@1a4658d9]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 18:58:50 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 18:58:50 [cluster-rtt-ClusterId{value='664d353aa7e931425ea25898', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:57}] to localhost:27017
2024-05-21 18:58:50 [cluster-ClusterId{value='664d353aa7e931425ea25898', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:56}] to localhost:27017
2024-05-21 18:58:50 [cluster-ClusterId{value='664d353aa7e931425ea25898', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=54209700}
2024-05-21 18:58:50 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 18:58:50 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 18:58:50 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 18:58:50 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 18:58:51 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 18:58:51 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 18:58:51 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 18:58:51 [restartedMain] INFO  : Disable delta property : false
2024-05-21 18:58:51 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 18:58:51 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 18:58:51 [restartedMain] INFO  : Application is null : false
2024-05-21 18:58:51 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 18:58:51 [restartedMain] INFO  : Application version is -1: true
2024-05-21 18:58:51 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 18:58:51 [restartedMain] INFO  : The response status is 200
2024-05-21 18:58:51 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 18:58:51 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 18:58:51 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716335931447 with initial instances count: 0
2024-05-21 18:58:51 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 18:58:51 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716335931449, current=UP, previous=STARTING]
2024-05-21 18:58:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 18:58:51 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 18:58:51 [restartedMain] INFO  : Updating port to 8081
2024-05-21 18:58:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 18:58:51 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.456 seconds (JVM running for 4.092)
2024-05-21 18:59:21 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Disable delta property : false
2024-05-21 18:59:21 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Single vip registry refresh property : null
2024-05-21 18:59:21 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Force full registry fetch : false
2024-05-21 18:59:21 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application is null : false
2024-05-21 18:59:21 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Registered Applications size is zero : true
2024-05-21 18:59:21 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application version is -1: false
2024-05-21 18:59:21 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Getting all instance registry info from the eureka server
2024-05-21 18:59:21 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : The response status is 200
2024-05-21 19:00:02 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 17752 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalClient\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 19:00:02 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 19:00:02 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 19:00:02 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 19:00:02 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 19:00:03 [restartedMain] INFO  : Finished Spring Data repository scanning in 48 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 19:00:03 [restartedMain] INFO  : BeanFactory id=793773eb-fca8-379f-a0ba-c7b18fda5e40
2024-05-21 19:00:03 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:00:03 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:00:03 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:00:03 [restartedMain] INFO  : Tomcat initialized with port(s): 8083 (http)
2024-05-21 19:00:03 [restartedMain] INFO  : Initializing ProtocolHandler ["http-nio-8083"]
2024-05-21 19:00:03 [restartedMain] INFO  : Starting service [Tomcat]
2024-05-21 19:00:03 [restartedMain] INFO  : Starting Servlet engine: [Apache Tomcat/9.0.83]
2024-05-21 19:00:03 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@135a0b95, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@172c1ab0]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 19:00:03 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 19:00:03 [cluster-rtt-ClusterId{value='664d358375335a5dc7335025', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:58}] to localhost:27017
2024-05-21 19:00:03 [cluster-ClusterId{value='664d358375335a5dc7335025', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:59}] to localhost:27017
2024-05-21 19:00:03 [cluster-ClusterId{value='664d358375335a5dc7335025', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=41438800}
2024-05-21 19:00:03 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 19:00:03 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 19:00:04 [nioEventLoopGroup-2-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:60}] to localhost:27017
2024-05-21 19:00:04 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 19:00:04 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 19:00:04 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 19:00:04 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 19:00:04 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:00:04 [restartedMain] INFO  : Disable delta property : false
2024-05-21 19:00:04 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 19:00:04 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 19:00:04 [restartedMain] INFO  : Application is null : false
2024-05-21 19:00:04 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 19:00:04 [restartedMain] INFO  : Application version is -1: true
2024-05-21 19:00:04 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 19:00:05 [restartedMain] INFO  : The response status is 200
2024-05-21 19:00:05 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 19:00:05 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 19:00:05 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716336005318 with initial instances count: 1
2024-05-21 19:00:05 [restartedMain] INFO  : Registering application CLIENTSERVICE with eureka with status UP
2024-05-21 19:00:05 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716336005321, current=UP, previous=STARTING]
2024-05-21 19:00:05 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083: registering service...
2024-05-21 19:00:05 [restartedMain] INFO  : Starting ProtocolHandler ["http-nio-8083"]
2024-05-21 19:00:05 [restartedMain] INFO  : Tomcat started on port(s): 8083 (http) with context path ''
2024-05-21 19:00:05 [restartedMain] INFO  : Updating port to 8083
2024-05-21 19:00:05 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083 - registration status: 204
2024-05-21 19:00:05 [restartedMain] INFO  : Started FinalProjectApplication in 3.545 seconds (JVM running for 4.429)
2024-05-21 19:00:58 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 19:00:58 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 19:00:58 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 19:00:58 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 19:00:59 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 19:00:59 [restartedMain] INFO  : Finished Spring Data repository scanning in 101 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 19:00:59 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 19:00:59 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:00:59 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:00:59 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:01:00 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@ada68df, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 19:01:00 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 19:01:00 [cluster-rtt-ClusterId{value='664d35bc21c7f04e1d5df849', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:61}] to localhost:27017
2024-05-21 19:01:00 [cluster-ClusterId{value='664d35bc21c7f04e1d5df849', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:62}] to localhost:27017
2024-05-21 19:01:00 [cluster-ClusterId{value='664d35bc21c7f04e1d5df849', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=61107800}
2024-05-21 19:01:00 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 19:01:00 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 19:01:00 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 19:01:01 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 19:01:01 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 19:01:01 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 19:01:01 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:01:01 [restartedMain] INFO  : Disable delta property : false
2024-05-21 19:01:01 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 19:01:01 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 19:01:01 [restartedMain] INFO  : Application is null : false
2024-05-21 19:01:01 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 19:01:01 [restartedMain] INFO  : Application version is -1: true
2024-05-21 19:01:01 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 19:01:01 [restartedMain] INFO  : The response status is 200
2024-05-21 19:01:01 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 19:01:01 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 19:01:01 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716336061625 with initial instances count: 2
2024-05-21 19:01:01 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 19:01:01 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716336061627, current=UP, previous=STARTING]
2024-05-21 19:01:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 19:01:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 19:01:01 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 19:01:01 [restartedMain] INFO  : Updating port to 8080
2024-05-21 19:01:01 [restartedMain] INFO  : Started FinalProjectApplication in 3.961 seconds (JVM running for 4.988)
2024-05-21 19:01:32 [reactor-http-nio-3] WARN  : No servers available for service: accountsService
2024-05-21 19:01:32 [reactor-http-nio-3] WARN  : LoadBalancer does not contain an instance for the service accountsService
2024-05-21 19:01:32 [reactor-http-nio-3] ERROR : [d189f102-1]  500 Server Error for HTTP POST "/transactions/create"
org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable: 503 Service Unavailable from UNKNOWN 
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:245)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 503 from GET http://accountsService/accounts/account/72163252 [DefaultWebClient]
	*__checkpoint ⇢ Handler project.transactionsservice.application.controller.TransactionsController#createTransactions(TransactionDTO) [DispatcherHandler]
	*__checkpoint ⇢ HTTP POST "/transactions/create" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:245)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:207)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:101)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:152)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2402)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:104)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)
		at reactor.core.publisher.FluxJust.subscribe(FluxJust.java:68)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:98)
		at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)
		at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:453)
		at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:724)
		at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onNext(FluxFlattenIterable.java:256)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.complete(MonoIgnoreThen.java:292)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onNext(MonoIgnoreThen.java:187)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onComplete(FluxDematerialize.java:121)
		at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:91)
		at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)
		at reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:402)
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291)
		at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.request(FluxDematerialize.java:127)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:138)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:171)
		at reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onSubscribe(FluxDematerialize.java:77)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:263)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:129)
		at reactor.core.publisher.DrainUtils.postCompleteDrain(DrainUtils.java:132)
		at reactor.core.publisher.DrainUtils.postComplete(DrainUtils.java:187)
		at reactor.core.publisher.FluxMaterialize$MaterializeSubscriber.onComplete(FluxMaterialize.java:141)
		at reactor.core.publisher.FluxTake$TakeSubscriber.onComplete(FluxTake.java:153)
		at reactor.core.publisher.FluxTake$TakeSubscriber.onNext(FluxTake.java:133)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)
		at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onNext(FluxTimeout.java:180)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:129)
		at org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$FirstNonEmptyEmittingSubscriber.onComplete(FluxFirstNonEmptyEmitting.java:325)
		at reactor.core.publisher.Operators.complete(Operators.java:137)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:144)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
		at reactor.core.publisher.Flux.subscribe(Flux.java:8642)
		at org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$RaceCoordinator.subscribe(FluxFirstNonEmptyEmitting.java:203)
		at org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting.subscribe(FluxFirstNonEmptyEmitting.java:128)
		at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)
		at reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)
		at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)
		at reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
		at reactor.core.publisher.Operators.complete(Operators.java:137)
		at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
		at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)
		at reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:200)
		at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:57)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.complete(MonoIgnoreThen.java:292)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onNext(MonoIgnoreThen.java:187)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:258)
		at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:347)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:101)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:439)
		at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:656)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:276)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 19:02:36 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 19:02:36 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716336156591, current=DOWN, previous=UP]
2024-05-21 19:02:36 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 19:02:36 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 19:02:38 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 19:02:41 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 19:02:41 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 19:02:41 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 19:02:45 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 19152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 19:02:45 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 19:02:45 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 19:02:45 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 19:02:46 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 19:02:46 [restartedMain] INFO  : Finished Spring Data repository scanning in 108 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 19:02:46 [restartedMain] INFO  : BeanFactory id=2ccaf21d-c85e-3d95-bb03-755fe6a2ff40
2024-05-21 19:02:46 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:02:46 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:02:46 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:02:46 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@4fcf3f9e, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@157a4260]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 19:02:46 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 19:02:46 [cluster-ClusterId{value='664d3626debc920ff3db8064', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:63}] to localhost:27017
2024-05-21 19:02:46 [cluster-rtt-ClusterId{value='664d3626debc920ff3db8064', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:64}] to localhost:27017
2024-05-21 19:02:46 [cluster-ClusterId{value='664d3626debc920ff3db8064', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=55735700}
2024-05-21 19:02:46 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 19:02:46 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 19:02:47 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 19:02:47 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 19:02:47 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 19:02:47 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 19:02:47 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:02:47 [restartedMain] INFO  : Disable delta property : false
2024-05-21 19:02:47 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 19:02:47 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 19:02:47 [restartedMain] INFO  : Application is null : false
2024-05-21 19:02:47 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 19:02:47 [restartedMain] INFO  : Application version is -1: true
2024-05-21 19:02:47 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 19:02:48 [restartedMain] INFO  : The response status is 200
2024-05-21 19:02:48 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 19:02:48 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 19:02:48 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716336168041 with initial instances count: 3
2024-05-21 19:02:48 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 19:02:48 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716336168043, current=UP, previous=STARTING]
2024-05-21 19:02:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 19:02:48 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 19:02:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 19:02:48 [restartedMain] INFO  : Updating port to 8081
2024-05-21 19:02:48 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.138 seconds (JVM running for 3.775)
2024-05-21 19:03:00 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:66}] to localhost:27017
2024-05-21 19:03:00 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:65}] to localhost:27017
2024-05-21 19:03:00 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:67}] to localhost:27017
2024-05-21 19:05:04 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:06:01 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:07:47 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:09:58 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 19:09:58 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716336598216, current=DOWN, previous=UP]
2024-05-21 19:09:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 19:09:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 19:10:00 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 19:10:03 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 19:10:03 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 19:10:03 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 19:10:04 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:10:07 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 21728 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 19:10:07 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 19:10:07 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 19:10:07 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 19:10:07 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 19:10:07 [restartedMain] INFO  : Finished Spring Data repository scanning in 117 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 19:10:08 [restartedMain] INFO  : BeanFactory id=2ccaf21d-c85e-3d95-bb03-755fe6a2ff40
2024-05-21 19:10:08 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:10:08 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:10:08 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:10:08 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1ea5556, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@cc5cd61]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 19:10:08 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 19:10:08 [cluster-rtt-ClusterId{value='664d37e071fc032b5cb0af42', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:69}] to localhost:27017
2024-05-21 19:10:08 [cluster-ClusterId{value='664d37e071fc032b5cb0af42', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:68}] to localhost:27017
2024-05-21 19:10:08 [cluster-ClusterId{value='664d37e071fc032b5cb0af42', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=60957900}
2024-05-21 19:10:08 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 19:10:08 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 19:10:09 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 19:10:09 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 19:10:09 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 19:10:09 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 19:10:09 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:10:09 [restartedMain] INFO  : Disable delta property : false
2024-05-21 19:10:09 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 19:10:09 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 19:10:09 [restartedMain] INFO  : Application is null : false
2024-05-21 19:10:09 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 19:10:09 [restartedMain] INFO  : Application version is -1: true
2024-05-21 19:10:09 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 19:10:09 [restartedMain] INFO  : The response status is 200
2024-05-21 19:10:09 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 19:10:09 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 19:10:09 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716336609722 with initial instances count: 3
2024-05-21 19:10:09 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 19:10:09 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716336609724, current=UP, previous=STARTING]
2024-05-21 19:10:09 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 19:10:09 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 19:10:09 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 19:10:09 [restartedMain] INFO  : Updating port to 8081
2024-05-21 19:10:09 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.228 seconds (JVM running for 3.871)
2024-05-21 19:11:01 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:12:07 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 19:12:07 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716336727936, current=DOWN, previous=UP]
2024-05-21 19:12:07 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 19:12:07 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 19:12:10 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 19:12:13 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 19:12:13 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 19:12:13 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 19:12:16 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 23252 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 19:12:16 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 19:12:16 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 19:12:16 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 19:12:17 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 19:12:17 [restartedMain] INFO  : Finished Spring Data repository scanning in 108 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 19:12:17 [restartedMain] INFO  : BeanFactory id=2ccaf21d-c85e-3d95-bb03-755fe6a2ff40
2024-05-21 19:12:17 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:12:17 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:12:17 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:12:18 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@7921d09e, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@1a4658d9]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 19:12:18 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 19:12:18 [cluster-rtt-ClusterId{value='664d3862abbd390bdf9dfc2f', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:70}] to localhost:27017
2024-05-21 19:12:18 [cluster-ClusterId{value='664d3862abbd390bdf9dfc2f', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:71}] to localhost:27017
2024-05-21 19:12:18 [cluster-ClusterId{value='664d3862abbd390bdf9dfc2f', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=52720700}
2024-05-21 19:12:18 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 19:12:18 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 19:12:18 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 19:12:19 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 19:12:19 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 19:12:19 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 19:12:19 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:12:19 [restartedMain] INFO  : Disable delta property : false
2024-05-21 19:12:19 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 19:12:19 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 19:12:19 [restartedMain] INFO  : Application is null : false
2024-05-21 19:12:19 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 19:12:19 [restartedMain] INFO  : Application version is -1: true
2024-05-21 19:12:19 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 19:12:19 [restartedMain] INFO  : The response status is 200
2024-05-21 19:12:19 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 19:12:19 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 19:12:19 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716336739408 with initial instances count: 3
2024-05-21 19:12:19 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 19:12:19 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716336739410, current=UP, previous=STARTING]
2024-05-21 19:12:19 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 19:12:19 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 19:12:19 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 19:12:19 [restartedMain] INFO  : Updating port to 8081
2024-05-21 19:12:19 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.128 seconds (JVM running for 3.761)
2024-05-21 19:13:35 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 19:13:35 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716336815143, current=DOWN, previous=UP]
2024-05-21 19:13:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 19:13:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 19:13:37 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 19:13:40 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 19:13:40 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 19:13:40 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 19:13:44 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 9416 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 19:13:44 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 19:13:44 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 19:13:44 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 19:13:45 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 19:13:45 [restartedMain] INFO  : Finished Spring Data repository scanning in 123 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 19:13:45 [restartedMain] INFO  : BeanFactory id=2ccaf21d-c85e-3d95-bb03-755fe6a2ff40
2024-05-21 19:13:45 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:13:45 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:13:45 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:13:46 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3acc1b2a, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@498c1d49]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 19:13:46 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 19:13:46 [cluster-ClusterId{value='664d38baffe54c5b4508c7d6', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:72}] to localhost:27017
2024-05-21 19:13:46 [cluster-rtt-ClusterId{value='664d38baffe54c5b4508c7d6', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:73}] to localhost:27017
2024-05-21 19:13:46 [cluster-ClusterId{value='664d38baffe54c5b4508c7d6', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=81273200}
2024-05-21 19:13:46 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 19:13:46 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 19:13:46 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 19:13:47 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 19:13:47 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 19:13:47 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 19:13:47 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:13:47 [restartedMain] INFO  : Disable delta property : false
2024-05-21 19:13:47 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 19:13:47 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 19:13:47 [restartedMain] INFO  : Application is null : false
2024-05-21 19:13:47 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 19:13:47 [restartedMain] INFO  : Application version is -1: true
2024-05-21 19:13:47 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 19:13:47 [restartedMain] INFO  : The response status is 200
2024-05-21 19:13:47 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 19:13:47 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 19:13:47 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716336827518 with initial instances count: 3
2024-05-21 19:13:47 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 19:13:47 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716336827520, current=UP, previous=STARTING]
2024-05-21 19:13:47 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 19:13:47 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 19:13:47 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 19:13:47 [restartedMain] INFO  : Updating port to 8081
2024-05-21 19:13:47 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.435 seconds (JVM running for 4.103)
2024-05-21 19:15:04 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:16:01 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:18:47 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:20:05 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:21:01 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:21:26 [File Watcher] INFO  : Restarting due to 4 class path changes (0 additions, 4 deletions, 0 modifications)
2024-05-21 19:21:26 [Thread-5] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 19:21:26 [Thread-5] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716337286059, current=DOWN, previous=UP]
2024-05-21 19:21:26 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 19:21:26 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 19:21:28 [Thread-5] INFO  : Shutting down DiscoveryClient ...
2024-05-21 19:21:31 [Thread-5] INFO  : Unregistering ...
2024-05-21 19:21:31 [Thread-5] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 19:21:31 [Thread-5] INFO  : Completed shut down of DiscoveryClient
2024-05-21 19:21:31 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 9416 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 19:21:31 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 19:21:31 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 19:21:31 [restartedMain] INFO  : Finished Spring Data repository scanning in 29 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 19:21:31 [restartedMain] INFO  : BeanFactory id=2ccaf21d-c85e-3d95-bb03-755fe6a2ff40
2024-05-21 19:21:31 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:21:31 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:21:31 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:21:31 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@514473f3, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@498c1d49]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 19:21:31 [cluster-ClusterId{value='664d3a8bffe54c5b4508c7d7', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:3, serverValue:74}] to localhost:27017
2024-05-21 19:21:31 [cluster-rtt-ClusterId{value='664d3a8bffe54c5b4508c7d7', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:75}] to localhost:27017
2024-05-21 19:21:31 [cluster-ClusterId{value='664d3a8bffe54c5b4508c7d7', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2078200}
2024-05-21 19:21:31 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 19:21:31 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 19:21:31 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 19:21:32 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 19:21:32 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 19:21:32 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 19:21:32 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 19:21:32 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:21:32 [restartedMain] INFO  : Disable delta property : false
2024-05-21 19:21:32 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 19:21:32 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 19:21:32 [restartedMain] INFO  : Application is null : false
2024-05-21 19:21:32 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 19:21:32 [restartedMain] INFO  : Application version is -1: true
2024-05-21 19:21:32 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 19:21:32 [restartedMain] INFO  : The response status is 200
2024-05-21 19:21:32 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 19:21:32 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 19:21:32 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716337292370 with initial instances count: 3
2024-05-21 19:21:32 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 19:21:32 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716337292372, current=UP, previous=STARTING]
2024-05-21 19:21:32 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 19:21:32 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 19:21:32 [restartedMain] INFO  : Updating port to 8081
2024-05-21 19:21:32 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 19:21:32 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.265 seconds (JVM running for 468.923)
2024-05-21 19:21:32 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 19:21:33 [File Watcher] INFO  : Restarting due to 4 class path changes (4 additions, 0 deletions, 0 modifications)
2024-05-21 19:21:33 [Thread-17] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 19:21:33 [Thread-17] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716337293502, current=DOWN, previous=UP]
2024-05-21 19:21:33 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 19:21:33 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 19:21:35 [Thread-17] INFO  : Shutting down DiscoveryClient ...
2024-05-21 19:21:38 [Thread-17] INFO  : Unregistering ...
2024-05-21 19:21:38 [Thread-17] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 19:21:38 [Thread-17] INFO  : Completed shut down of DiscoveryClient
2024-05-21 19:21:38 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 9416 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 19:21:38 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 19:21:39 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 19:21:39 [restartedMain] INFO  : Finished Spring Data repository scanning in 35 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 19:21:39 [restartedMain] INFO  : BeanFactory id=2ccaf21d-c85e-3d95-bb03-755fe6a2ff40
2024-05-21 19:21:39 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:21:39 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:21:39 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:21:39 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@38d9fef2, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@498c1d49]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 19:21:39 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 19:21:39 [cluster-rtt-ClusterId{value='664d3a93ffe54c5b4508c7d8', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:5, serverValue:76}] to localhost:27017
2024-05-21 19:21:39 [cluster-ClusterId{value='664d3a93ffe54c5b4508c7d8', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:77}] to localhost:27017
2024-05-21 19:21:39 [cluster-ClusterId{value='664d3a93ffe54c5b4508c7d8', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3582700}
2024-05-21 19:21:39 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 19:21:39 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 19:21:39 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 19:21:40 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 19:21:40 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 19:21:40 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 19:21:40 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:21:40 [restartedMain] INFO  : Disable delta property : false
2024-05-21 19:21:40 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 19:21:40 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 19:21:40 [restartedMain] INFO  : Application is null : false
2024-05-21 19:21:40 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 19:21:40 [restartedMain] INFO  : Application version is -1: true
2024-05-21 19:21:40 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 19:21:40 [restartedMain] INFO  : The response status is 200
2024-05-21 19:21:40 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 19:21:40 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 19:21:40 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716337300285 with initial instances count: 3
2024-05-21 19:21:40 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 19:21:40 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716337300287, current=UP, previous=STARTING]
2024-05-21 19:21:40 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 19:21:40 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 19:21:40 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 19:21:40 [restartedMain] INFO  : Updating port to 8081
2024-05-21 19:21:40 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.839 seconds (JVM running for 476.92)
2024-05-21 19:21:40 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 19:25:05 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:26:01 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:26:40 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:26:53 [File Watcher] INFO  : Restarting due to 2 class path changes (0 additions, 2 deletions, 0 modifications)
2024-05-21 19:26:53 [Thread-24] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 19:26:53 [Thread-24] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716337613596, current=DOWN, previous=UP]
2024-05-21 19:26:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 19:26:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 19:26:55 [Thread-24] INFO  : Shutting down DiscoveryClient ...
2024-05-21 19:26:58 [Thread-24] INFO  : Unregistering ...
2024-05-21 19:26:58 [Thread-24] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 19:26:58 [Thread-24] INFO  : Completed shut down of DiscoveryClient
2024-05-21 19:26:58 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 9416 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 19:26:58 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 19:26:59 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 19:26:59 [restartedMain] INFO  : Finished Spring Data repository scanning in 15 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 19:26:59 [restartedMain] INFO  : BeanFactory id=529c7199-6198-3fa8-b634-4ce338ca4c9a
2024-05-21 19:26:59 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:26:59 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:26:59 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:26:59 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'project.transactionsservice.domain.ports.TransactionsPort' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2024-05-21 19:26:59 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-21 19:26:59 [restartedMain] ERROR : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in project.transactionsservice.application.service.domainService.TransactionsDomainService required a bean of type 'project.transactionsservice.domain.ports.TransactionsPort' that could not be found.


Action:

Consider defining a bean of type 'project.transactionsservice.domain.ports.TransactionsPort' in your configuration.

2024-05-21 19:30:05 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:31:01 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:32:47 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 9416 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 19:32:47 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 19:32:47 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 19:32:47 [restartedMain] INFO  : Finished Spring Data repository scanning in 13 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 19:32:47 [restartedMain] INFO  : BeanFactory id=2433a89a-8dd1-3ca9-82db-4ee99722cedb
2024-05-21 19:32:47 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:32:47 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:32:47 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:32:47 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'project.transactionsservice.application.service.TransactionsService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2024-05-21 19:32:47 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-21 19:32:47 [restartedMain] ERROR : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in project.transactionsservice.application.controller.TransactionsController required a bean of type 'project.transactionsservice.application.service.TransactionsService' that could not be found.


Action:

Consider defining a bean of type 'project.transactionsservice.application.service.TransactionsService' in your configuration.

2024-05-21 19:35:00 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 9416 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 19:35:00 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 19:35:01 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 19:35:01 [restartedMain] INFO  : Finished Spring Data repository scanning in 36 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 19:35:01 [restartedMain] INFO  : BeanFactory id=2433a89a-8dd1-3ca9-82db-4ee99722cedb
2024-05-21 19:35:01 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:35:01 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:35:01 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:35:01 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'project.transactionsservice.application.service.TransactionsService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2024-05-21 19:35:01 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-21 19:35:01 [restartedMain] ERROR : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in project.transactionsservice.application.controller.TransactionsController required a bean of type 'project.transactionsservice.application.service.TransactionsService' that could not be found.


Action:

Consider defining a bean of type 'project.transactionsservice.application.service.TransactionsService' in your configuration.

2024-05-21 19:35:02 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 9416 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 19:35:02 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 19:35:03 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 19:35:03 [restartedMain] INFO  : Finished Spring Data repository scanning in 16 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 19:35:03 [restartedMain] INFO  : BeanFactory id=02816227-f576-3909-92aa-517c7fd990cf
2024-05-21 19:35:03 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:35:03 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:35:03 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:35:03 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'project.transactionsservice.application.service.TransactionsService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2024-05-21 19:35:03 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-21 19:35:03 [restartedMain] ERROR : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in project.transactionsservice.application.controller.TransactionsController required a bean of type 'project.transactionsservice.application.service.TransactionsService' that could not be found.


Action:

Consider defining a bean of type 'project.transactionsservice.application.service.TransactionsService' in your configuration.

2024-05-21 19:35:05 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:35:05 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 9416 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 19:35:05 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 19:35:05 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 19:35:05 [restartedMain] INFO  : Finished Spring Data repository scanning in 14 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 19:35:06 [restartedMain] INFO  : BeanFactory id=02816227-f576-3909-92aa-517c7fd990cf
2024-05-21 19:35:06 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:35:06 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:35:06 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:35:06 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'project.transactionsservice.application.service.TransactionsService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2024-05-21 19:35:06 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-21 19:35:06 [restartedMain] ERROR : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in project.transactionsservice.application.controller.TransactionsController required a bean of type 'project.transactionsservice.application.service.TransactionsService' that could not be found.


Action:

Consider defining a bean of type 'project.transactionsservice.application.service.TransactionsService' in your configuration.

2024-05-21 19:35:07 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 9416 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 19:35:07 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 19:35:07 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 19:35:07 [restartedMain] INFO  : Finished Spring Data repository scanning in 11 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 19:35:07 [restartedMain] INFO  : BeanFactory id=02816227-f576-3909-92aa-517c7fd990cf
2024-05-21 19:35:07 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:35:07 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:35:07 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:35:07 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'project.transactionsservice.application.service.TransactionsService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2024-05-21 19:35:07 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-21 19:35:07 [restartedMain] ERROR : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in project.transactionsservice.application.controller.TransactionsController required a bean of type 'project.transactionsservice.application.service.TransactionsService' that could not be found.


Action:

Consider defining a bean of type 'project.transactionsservice.application.service.TransactionsService' in your configuration.

2024-05-21 19:36:01 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:40:05 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:41:01 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:41:04 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 16680 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 19:41:04 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 19:41:04 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 19:41:04 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 19:41:04 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 19:41:04 [restartedMain] INFO  : Finished Spring Data repository scanning in 118 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 19:41:05 [restartedMain] INFO  : BeanFactory id=2ccaf21d-c85e-3d95-bb03-755fe6a2ff40
2024-05-21 19:41:05 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:41:05 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:41:05 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:41:05 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@48a76298, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6cdcf0de]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 19:41:05 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 19:41:05 [cluster-rtt-ClusterId{value='664d3f21f3de8910fc205683', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:78}] to localhost:27017
2024-05-21 19:41:05 [cluster-ClusterId{value='664d3f21f3de8910fc205683', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:79}] to localhost:27017
2024-05-21 19:41:05 [cluster-ClusterId{value='664d3f21f3de8910fc205683', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=51578900}
2024-05-21 19:41:05 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 19:41:05 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 19:41:06 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 19:41:06 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 19:41:06 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 19:41:06 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 19:41:06 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:41:06 [restartedMain] INFO  : Disable delta property : false
2024-05-21 19:41:06 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 19:41:06 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 19:41:06 [restartedMain] INFO  : Application is null : false
2024-05-21 19:41:06 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 19:41:06 [restartedMain] INFO  : Application version is -1: true
2024-05-21 19:41:06 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 19:41:06 [restartedMain] INFO  : The response status is 200
2024-05-21 19:41:06 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 19:41:06 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 19:41:06 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716338466799 with initial instances count: 2
2024-05-21 19:41:06 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 19:41:06 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716338466801, current=UP, previous=STARTING]
2024-05-21 19:41:06 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 19:41:06 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 19:41:06 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 19:41:06 [restartedMain] INFO  : Updating port to 8081
2024-05-21 19:41:06 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.347 seconds (JVM running for 4.065)
2024-05-21 19:41:13 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:80}] to localhost:27017
2024-05-21 19:42:45 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 19:42:45 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716338565851, current=DOWN, previous=UP]
2024-05-21 19:42:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 19:42:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 19:42:47 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 19:42:50 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 19:42:50 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 19:42:50 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 19:42:55 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 17524 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 19:42:55 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 19:42:55 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 19:42:55 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 19:42:56 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 19:42:56 [restartedMain] INFO  : Finished Spring Data repository scanning in 116 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 19:42:56 [restartedMain] INFO  : BeanFactory id=2ccaf21d-c85e-3d95-bb03-755fe6a2ff40
2024-05-21 19:42:56 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:42:56 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:42:56 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:42:57 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@cc5cd61, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@18ba6834]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 19:42:57 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 19:42:57 [cluster-rtt-ClusterId{value='664d3f91fc659147f4b7e9c2', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:81}] to localhost:27017
2024-05-21 19:42:57 [cluster-ClusterId{value='664d3f91fc659147f4b7e9c2', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:82}] to localhost:27017
2024-05-21 19:42:57 [cluster-ClusterId{value='664d3f91fc659147f4b7e9c2', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=61692100}
2024-05-21 19:42:57 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 19:42:57 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 19:42:57 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 19:42:57 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 19:42:58 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 19:42:58 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 19:42:58 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:42:58 [restartedMain] INFO  : Disable delta property : false
2024-05-21 19:42:58 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 19:42:58 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 19:42:58 [restartedMain] INFO  : Application is null : false
2024-05-21 19:42:58 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 19:42:58 [restartedMain] INFO  : Application version is -1: true
2024-05-21 19:42:58 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 19:42:58 [restartedMain] INFO  : The response status is 200
2024-05-21 19:42:58 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 19:42:58 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 19:42:58 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716338578393 with initial instances count: 3
2024-05-21 19:42:58 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 19:42:58 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716338578395, current=UP, previous=STARTING]
2024-05-21 19:42:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 19:42:58 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 19:42:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 19:42:58 [restartedMain] INFO  : Updating port to 8081
2024-05-21 19:42:58 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.267 seconds (JVM running for 3.882)
2024-05-21 19:43:07 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:83}] to localhost:27017
2024-05-21 19:45:05 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:46:01 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:46:23 [File Watcher] INFO  : Restarting due to 2 class path changes (0 additions, 2 deletions, 0 modifications)
2024-05-21 19:46:23 [Thread-5] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 19:46:23 [Thread-5] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716338783232, current=DOWN, previous=UP]
2024-05-21 19:46:23 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 19:46:23 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 19:46:25 [Thread-5] INFO  : Shutting down DiscoveryClient ...
2024-05-21 19:46:28 [Thread-5] INFO  : Unregistering ...
2024-05-21 19:46:28 [Thread-5] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 19:46:28 [Thread-5] INFO  : Completed shut down of DiscoveryClient
2024-05-21 19:46:28 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 17524 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 19:46:28 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 19:46:28 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 19:46:28 [restartedMain] INFO  : Finished Spring Data repository scanning in 30 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 19:46:28 [restartedMain] INFO  : BeanFactory id=529c7199-6198-3fa8-b634-4ce338ca4c9a
2024-05-21 19:46:28 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:46:28 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:46:28 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:46:28 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'project.transactionsservice.domain.ports.TransactionsPort' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2024-05-21 19:46:28 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-21 19:46:29 [restartedMain] ERROR : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in project.transactionsservice.application.service.domainService.TransactionsDomainService required a bean of type 'project.transactionsservice.domain.ports.TransactionsPort' that could not be found.


Action:

Consider defining a bean of type 'project.transactionsservice.domain.ports.TransactionsPort' in your configuration.

2024-05-21 19:50:05 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:50:33 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 17524 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 19:50:33 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 19:50:34 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 19:50:34 [restartedMain] INFO  : Finished Spring Data repository scanning in 13 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 19:50:34 [restartedMain] INFO  : BeanFactory id=2ccaf21d-c85e-3d95-bb03-755fe6a2ff40
2024-05-21 19:50:34 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:50:34 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:50:34 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:50:34 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@6831019f, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@18ba6834]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 19:50:34 [cluster-ClusterId{value='664d415afc659147f4b7e9c4', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:85}] to localhost:27017
2024-05-21 19:50:34 [cluster-rtt-ClusterId{value='664d415afc659147f4b7e9c4', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:5, serverValue:84}] to localhost:27017
2024-05-21 19:50:34 [cluster-ClusterId{value='664d415afc659147f4b7e9c4', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1306700}
2024-05-21 19:50:34 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 19:50:34 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 19:50:34 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 19:50:34 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 19:50:34 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 19:50:34 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 19:50:34 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 19:50:34 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:50:34 [restartedMain] INFO  : Disable delta property : false
2024-05-21 19:50:34 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 19:50:34 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 19:50:34 [restartedMain] INFO  : Application is null : false
2024-05-21 19:50:34 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 19:50:34 [restartedMain] INFO  : Application version is -1: true
2024-05-21 19:50:34 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 19:50:34 [restartedMain] INFO  : The response status is 200
2024-05-21 19:50:34 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 19:50:34 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 19:50:34 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716339034501 with initial instances count: 2
2024-05-21 19:50:34 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 19:50:34 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716339034503, current=UP, previous=STARTING]
2024-05-21 19:50:34 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 19:50:34 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 19:50:34 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 19:50:34 [restartedMain] INFO  : Updating port to 8081
2024-05-21 19:50:34 [restartedMain] INFO  : Started TransactionsServiceApplication in 0.79 seconds (JVM running for 459.94)
2024-05-21 19:50:34 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 19:51:01 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:51:10 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 19:51:10 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716339070855, current=DOWN, previous=UP]
2024-05-21 19:51:10 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 19:51:10 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 19:51:12 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 19:51:15 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 19:51:15 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 19:51:15 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 19:51:20 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 19464 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 19:51:20 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 19:51:20 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 19:51:20 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 19:51:20 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 19:51:21 [restartedMain] INFO  : Finished Spring Data repository scanning in 107 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 19:51:21 [restartedMain] INFO  : BeanFactory id=2ccaf21d-c85e-3d95-bb03-755fe6a2ff40
2024-05-21 19:51:21 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:51:21 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:51:21 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:51:21 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3fbc7ab8, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@1073ba30]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 19:51:21 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 19:51:21 [cluster-rtt-ClusterId{value='664d418927bb6b3802c30dca', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:87}] to localhost:27017
2024-05-21 19:51:21 [cluster-ClusterId{value='664d418927bb6b3802c30dca', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:86}] to localhost:27017
2024-05-21 19:51:21 [cluster-ClusterId{value='664d418927bb6b3802c30dca', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=59730500}
2024-05-21 19:51:21 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 19:51:21 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 19:51:22 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 19:51:22 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 19:51:22 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 19:51:22 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 19:51:22 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:51:22 [restartedMain] INFO  : Disable delta property : false
2024-05-21 19:51:22 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 19:51:22 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 19:51:22 [restartedMain] INFO  : Application is null : false
2024-05-21 19:51:22 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 19:51:22 [restartedMain] INFO  : Application version is -1: true
2024-05-21 19:51:22 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 19:51:22 [restartedMain] INFO  : The response status is 200
2024-05-21 19:51:22 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 19:51:22 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 19:51:22 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716339082940 with initial instances count: 3
2024-05-21 19:51:22 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 19:51:22 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716339082942, current=UP, previous=STARTING]
2024-05-21 19:51:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 19:51:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 19:51:22 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 19:51:22 [restartedMain] INFO  : Updating port to 8081
2024-05-21 19:51:23 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.171 seconds (JVM running for 3.799)
2024-05-21 19:51:30 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:88}] to localhost:27017
2024-05-21 19:54:22 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 19:54:22 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716339262707, current=DOWN, previous=UP]
2024-05-21 19:54:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 19:54:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 19:54:24 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 19:54:27 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 19:54:27 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 19:54:27 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 19:54:32 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 5752 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 19:54:32 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 19:54:32 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 19:54:32 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 19:54:33 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 19:54:33 [restartedMain] INFO  : Finished Spring Data repository scanning in 109 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 19:54:33 [restartedMain] INFO  : BeanFactory id=2ccaf21d-c85e-3d95-bb03-755fe6a2ff40
2024-05-21 19:54:33 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:54:33 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:54:33 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 19:54:33 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@7921d09e, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@1a4658d9]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 19:54:33 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 19:54:33 [cluster-rtt-ClusterId{value='664d42496b961a1a64d3479f', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:89}] to localhost:27017
2024-05-21 19:54:33 [cluster-ClusterId{value='664d42496b961a1a64d3479f', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:90}] to localhost:27017
2024-05-21 19:54:33 [cluster-ClusterId{value='664d42496b961a1a64d3479f', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=53528400}
2024-05-21 19:54:34 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 19:54:34 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 19:54:34 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 19:54:34 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 19:54:34 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 19:54:34 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 19:54:34 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:54:34 [restartedMain] INFO  : Disable delta property : false
2024-05-21 19:54:34 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 19:54:34 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 19:54:34 [restartedMain] INFO  : Application is null : false
2024-05-21 19:54:34 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 19:54:34 [restartedMain] INFO  : Application version is -1: true
2024-05-21 19:54:34 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 19:54:35 [restartedMain] INFO  : The response status is 200
2024-05-21 19:54:35 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 19:54:35 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 19:54:35 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716339275192 with initial instances count: 2
2024-05-21 19:54:35 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 19:54:35 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716339275194, current=UP, previous=STARTING]
2024-05-21 19:54:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 19:54:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 19:54:35 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 19:54:35 [restartedMain] INFO  : Updating port to 8081
2024-05-21 19:54:35 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.21 seconds (JVM running for 3.828)
2024-05-21 19:54:41 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:91}] to localhost:27017
2024-05-21 19:55:05 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:56:01 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 19:59:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 20:00:05 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 20:01:01 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 20:05:32 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 20:05:32 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716339932272, current=DOWN, previous=UP]
2024-05-21 20:05:32 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 20:05:32 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 20:05:34 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 20:05:37 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 20:05:37 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 20:05:37 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 20:05:41 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 2308 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 20:05:41 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 20:05:41 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 20:05:41 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 20:05:42 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 20:05:42 [restartedMain] INFO  : Finished Spring Data repository scanning in 127 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 20:05:43 [restartedMain] INFO  : BeanFactory id=2ccaf21d-c85e-3d95-bb03-755fe6a2ff40
2024-05-21 20:05:43 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 20:05:43 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 20:05:43 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 20:05:43 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@45620254, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@1dd421df]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 20:05:43 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 20:05:43 [cluster-rtt-ClusterId{value='664d44e7fc5d0650b2d452a7', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:94}] to localhost:27017
2024-05-21 20:05:43 [cluster-ClusterId{value='664d44e7fc5d0650b2d452a7', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:93}] to localhost:27017
2024-05-21 20:05:43 [cluster-ClusterId{value='664d44e7fc5d0650b2d452a7', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=51556300}
2024-05-21 20:05:43 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 20:05:44 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 20:05:44 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 20:05:44 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 20:05:45 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 20:05:45 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 20:05:45 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 20:05:45 [restartedMain] INFO  : Disable delta property : false
2024-05-21 20:05:45 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 20:05:45 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 20:05:45 [restartedMain] INFO  : Application is null : false
2024-05-21 20:05:45 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 20:05:45 [restartedMain] INFO  : Application version is -1: true
2024-05-21 20:05:45 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 20:05:45 [restartedMain] INFO  : The response status is 200
2024-05-21 20:05:45 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 20:05:45 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 20:05:45 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716339945492 with initial instances count: 3
2024-05-21 20:05:45 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 20:05:45 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716339945494, current=UP, previous=STARTING]
2024-05-21 20:05:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 20:05:45 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 20:05:45 [restartedMain] INFO  : Updating port to 8081
2024-05-21 20:05:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 20:05:45 [restartedMain] INFO  : Started TransactionsServiceApplication in 4.347 seconds (JVM running for 5.44)
2024-05-21 20:06:02 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:95}] to localhost:27017
2024-05-21 20:06:08 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 20:07:05 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 20:10:45 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 20:11:08 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 20:12:05 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 20:15:45 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 20:16:08 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 20:16:48 [File Watcher] INFO  : Restarting due to 2 class path changes (0 additions, 2 deletions, 0 modifications)
2024-05-21 20:16:48 [Thread-5] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 20:16:48 [Thread-5] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716340608090, current=DOWN, previous=UP]
2024-05-21 20:16:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 20:16:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 20:16:50 [Thread-5] INFO  : Shutting down DiscoveryClient ...
2024-05-21 20:16:53 [Thread-5] INFO  : Unregistering ...
2024-05-21 20:16:53 [Thread-5] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 20:16:53 [Thread-5] INFO  : Completed shut down of DiscoveryClient
2024-05-21 20:16:55 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 18864 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 20:16:55 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 20:16:55 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 20:16:55 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 20:16:56 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 20:16:56 [restartedMain] INFO  : Finished Spring Data repository scanning in 133 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 20:16:56 [restartedMain] INFO  : BeanFactory id=2ccaf21d-c85e-3d95-bb03-755fe6a2ff40
2024-05-21 20:16:56 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 20:16:56 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 20:16:56 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 20:16:56 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@57e6ae2a, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7ea987ca]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 20:16:57 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 20:16:57 [cluster-rtt-ClusterId{value='664d4788e5e8c76dd325d5ae', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:96}] to localhost:27017
2024-05-21 20:16:57 [cluster-ClusterId{value='664d4788e5e8c76dd325d5ae', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:97}] to localhost:27017
2024-05-21 20:16:57 [cluster-ClusterId{value='664d4788e5e8c76dd325d5ae', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=58635500}
2024-05-21 20:16:57 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 20:16:57 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 20:16:57 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 20:16:57 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 20:16:58 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 20:16:58 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 20:16:58 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 20:16:58 [restartedMain] INFO  : Disable delta property : false
2024-05-21 20:16:58 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 20:16:58 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 20:16:58 [restartedMain] INFO  : Application is null : false
2024-05-21 20:16:58 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 20:16:58 [restartedMain] INFO  : Application version is -1: true
2024-05-21 20:16:58 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 20:16:58 [restartedMain] INFO  : The response status is 200
2024-05-21 20:16:58 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 20:16:58 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 20:16:58 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716340618356 with initial instances count: 3
2024-05-21 20:16:58 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 20:16:58 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716340618357, current=UP, previous=STARTING]
2024-05-21 20:16:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 20:16:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 20:16:58 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 20:16:58 [restartedMain] INFO  : Updating port to 8081
2024-05-21 20:16:58 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.358 seconds (JVM running for 4.073)
2024-05-21 20:17:00 [reactor-http-nio-3] ERROR : [6276a408-1]  500 Server Error for HTTP POST "/transactions/create"
java.lang.IllegalStateException: Could not resolve view with name 'transactions/create'.
	at org.springframework.web.reactive.result.view.ViewResolutionResultHandler.lambda$resolveViews$3(ViewResolutionResultHandler.java:278)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Exception handler project.transactionsservice.infrastructure.exceptions.ErrorHandler#handleWrongClientType(InvalidClient), error="Client not allowed to do the transaction" [DispatcherHandler]
	*__checkpoint ⇢ HTTP POST "/transactions/create" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.web.reactive.result.view.ViewResolutionResultHandler.lambda$resolveViews$3(ViewResolutionResultHandler.java:278)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:113)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:129)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:368)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onComplete(FluxConcatMap.java:276)
		at reactor.core.publisher.Operators.complete(Operators.java:137)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:144)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2400)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2196)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2070)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:258)
		at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:347)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2400)
		at reactor.core.publisher.MonoZip$ZipInner.onSubscribe(MonoZip.java:336)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:129)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onError(Operators.java:2065)
		at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:135)
		at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:57)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:439)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:493)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:768)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 20:17:05 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 20:17:31 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:98}] to localhost:27017
2024-05-21 20:17:31 [nioEventLoopGroup-3-3] ERROR : [6276a408-2]  500 Server Error for HTTP POST "/transactions/create"
java.lang.IllegalStateException: Could not resolve view with name 'transactions/create'.
	at org.springframework.web.reactive.result.view.ViewResolutionResultHandler.lambda$resolveViews$3(ViewResolutionResultHandler.java:278)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Exception handler project.transactionsservice.infrastructure.exceptions.ErrorHandler#handleInvalidTransaction(InvalidTransaction), error="Date parsing error" [DispatcherHandler]
	*__checkpoint ⇢ HTTP POST "/transactions/create" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.web.reactive.result.view.ViewResolutionResultHandler.lambda$resolveViews$3(ViewResolutionResultHandler.java:278)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:113)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:129)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:368)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onComplete(FluxConcatMap.java:276)
		at reactor.core.publisher.Operators.complete(Operators.java:137)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:144)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2400)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2196)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2070)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:258)
		at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:347)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2400)
		at reactor.core.publisher.MonoZip$ZipInner.onSubscribe(MonoZip.java:336)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:129)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onError(Operators.java:2065)
		at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:129)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:129)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.deferredComplete(FluxUsingWhen.java:392)
		at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:527)
		at reactor.core.publisher.Operators.complete(Operators.java:137)
		at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:384)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2060)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:260)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:368)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onComplete(FluxConcatMap.java:276)
		at reactor.core.publisher.FluxCreate$BaseSink.complete(FluxCreate.java:463)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:869)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.complete(FluxCreate.java:817)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.drainLoop(FluxCreate.java:247)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.drain(FluxCreate.java:213)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.complete(FluxCreate.java:204)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.lambda$recurseCursor$4(BatchCursorFlux.java:98)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:171)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
		at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:549)
		at com.mongodb.internal.operation.AsyncQueryBatchCursor.next(AsyncQueryBatchCursor.java:174)
		at com.mongodb.reactivestreams.client.internal.BatchCursor.lambda$next$0(BatchCursor.java:35)
		at reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:58)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.Mono.subscribeWith(Mono.java:4605)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4318)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.recurseCursor(BatchCursorFlux.java:104)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.lambda$subscribe$0(BatchCursorFlux.java:56)
		at reactor.core.publisher.LambdaMonoSubscriber.onNext(LambdaMonoSubscriber.java:171)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
		at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:549)
		at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$2(OperationExecutorImpl.java:92)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
		at com.mongodb.internal.async.function.RetryingAsyncCallbackSupplier$RetryingCallback.onResult(RetryingAsyncCallbackSupplier.java:114)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
		at com.mongodb.internal.operation.FindOperation$2.onResult(FindOperation.java:792)
		at com.mongodb.internal.operation.CommandOperationHelper.lambda$transformingReadCallback$10(CommandOperationHelper.java:331)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor$2.onResult(DefaultServer.java:276)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.CommandProtocolImpl$1.onResult(CommandProtocolImpl.java:84)
		at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection$1.onResult(DefaultConnectionPool.java:684)
		at com.mongodb.internal.connection.UsageTrackingInternalConnection$2.onResult(UsageTrackingInternalConnection.java:159)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:521)
		at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:498)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:821)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:785)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:266)
		at com.mongodb.internal.connection.InternalStreamConnection.readAsync(InternalStreamConnection.java:642)
		at com.mongodb.internal.connection.InternalStreamConnection.access$600(InternalStreamConnection.java:86)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:775)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:760)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
		at com.mongodb.connection.netty.NettyStream.handleReadResponse(NettyStream.java:347)
		at com.mongodb.connection.netty.NettyStream.access$1100(NettyStream.java:105)
		at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:421)
		at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:418)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 20:18:30 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 20:18:30 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716340710707, current=DOWN, previous=UP]
2024-05-21 20:18:30 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 20:18:30 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 20:18:32 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 20:18:35 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 20:18:35 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 20:18:35 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 20:18:39 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 7324 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 20:18:39 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 20:18:39 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 20:18:39 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 20:18:40 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 20:18:40 [restartedMain] INFO  : Finished Spring Data repository scanning in 100 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 20:18:40 [restartedMain] INFO  : BeanFactory id=2ccaf21d-c85e-3d95-bb03-755fe6a2ff40
2024-05-21 20:18:40 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 20:18:40 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 20:18:40 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 20:18:40 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@11b854f3, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3fbc7ab8]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 20:18:40 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 20:18:40 [cluster-rtt-ClusterId{value='664d47f08d20536a33e81d87', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:100}] to localhost:27017
2024-05-21 20:18:40 [cluster-ClusterId{value='664d47f08d20536a33e81d87', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:99}] to localhost:27017
2024-05-21 20:18:40 [cluster-ClusterId{value='664d47f08d20536a33e81d87', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=45629700}
2024-05-21 20:18:41 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 20:18:41 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 20:18:41 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 20:18:41 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 20:18:41 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 20:18:41 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 20:18:41 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 20:18:41 [restartedMain] INFO  : Disable delta property : false
2024-05-21 20:18:41 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 20:18:41 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 20:18:41 [restartedMain] INFO  : Application is null : false
2024-05-21 20:18:41 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 20:18:41 [restartedMain] INFO  : Application version is -1: true
2024-05-21 20:18:41 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 20:18:42 [restartedMain] INFO  : The response status is 200
2024-05-21 20:18:42 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 20:18:42 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 20:18:42 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716340722095 with initial instances count: 3
2024-05-21 20:18:42 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 20:18:42 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716340722097, current=UP, previous=STARTING]
2024-05-21 20:18:42 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 20:18:42 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 20:18:42 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 20:18:42 [restartedMain] INFO  : Updating port to 8081
2024-05-21 20:18:42 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.118 seconds (JVM running for 3.752)
2024-05-21 20:19:14 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:101}] to localhost:27017
2024-05-21 20:20:41 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 20:20:41 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716340841859, current=DOWN, previous=UP]
2024-05-21 20:20:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 20:20:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 20:20:43 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 20:20:46 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 20:20:46 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 20:20:46 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 20:20:50 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 10824 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 20:20:50 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 20:20:50 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 20:20:50 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 20:20:51 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 20:20:51 [restartedMain] INFO  : Finished Spring Data repository scanning in 155 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 20:20:51 [restartedMain] INFO  : BeanFactory id=2ccaf21d-c85e-3d95-bb03-755fe6a2ff40
2024-05-21 20:20:51 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 20:20:51 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 20:20:51 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 20:20:52 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1f1f9370, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2f71fb4f]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 20:20:52 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 20:20:52 [cluster-ClusterId{value='664d48731b667700de4682b0', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:105}] to localhost:27017
2024-05-21 20:20:52 [cluster-rtt-ClusterId{value='664d48731b667700de4682b0', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:106}] to localhost:27017
2024-05-21 20:20:52 [cluster-ClusterId{value='664d48731b667700de4682b0', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=59824000}
2024-05-21 20:20:52 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 20:20:52 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 20:20:52 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 20:20:52 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 20:20:52 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 20:20:52 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 20:20:52 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 20:20:52 [restartedMain] INFO  : Disable delta property : false
2024-05-21 20:20:52 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 20:20:52 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 20:20:52 [restartedMain] INFO  : Application is null : false
2024-05-21 20:20:52 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 20:20:52 [restartedMain] INFO  : Application version is -1: true
2024-05-21 20:20:52 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 20:20:53 [restartedMain] INFO  : The response status is 200
2024-05-21 20:20:53 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 20:20:53 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 20:20:53 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716340853253 with initial instances count: 3
2024-05-21 20:20:53 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 20:20:53 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716340853255, current=UP, previous=STARTING]
2024-05-21 20:20:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 20:20:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 20:20:53 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 20:20:53 [restartedMain] INFO  : Updating port to 8081
2024-05-21 20:20:53 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.249 seconds (JVM running for 3.859)
2024-05-21 20:21:08 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 20:21:52 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:107}] to localhost:27017
2024-05-21 20:22:05 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 20:25:52 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 20:26:08 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 20:27:05 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 20:30:52 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 20:31:08 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 20:32:05 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 20:35:52 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 20:36:08 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 20:51:48 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 20:54:28 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-21 20:54:28 [Thread-5] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 20:54:28 [Thread-5] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716342868229, current=DOWN, previous=UP]
2024-05-21 20:54:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 20:54:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 20:54:30 [Thread-5] INFO  : Shutting down DiscoveryClient ...
2024-05-21 20:54:33 [Thread-5] INFO  : Unregistering ...
2024-05-21 20:54:33 [Thread-5] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 20:54:33 [Thread-5] INFO  : Completed shut down of DiscoveryClient
2024-05-21 20:54:33 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 10824 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 20:54:33 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 20:54:33 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 20:54:33 [restartedMain] INFO  : Finished Spring Data repository scanning in 12 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 20:54:33 [restartedMain] INFO  : BeanFactory id=2ccaf21d-c85e-3d95-bb03-755fe6a2ff40
2024-05-21 20:54:33 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 20:54:33 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 20:54:33 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 20:54:33 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@6efe45d, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2f71fb4f]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 20:54:33 [cluster-rtt-ClusterId{value='664d50591b667700de4682b6', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:5, serverValue:111}] to localhost:27017
2024-05-21 20:54:33 [cluster-ClusterId{value='664d50591b667700de4682b6', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:112}] to localhost:27017
2024-05-21 20:54:33 [cluster-ClusterId{value='664d50591b667700de4682b6', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1493700}
2024-05-21 20:54:33 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 20:54:33 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 20:54:33 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 20:54:34 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 20:54:34 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 20:54:34 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 20:54:34 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 20:54:34 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 20:54:34 [restartedMain] INFO  : Disable delta property : false
2024-05-21 20:54:34 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 20:54:34 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 20:54:34 [restartedMain] INFO  : Application is null : false
2024-05-21 20:54:34 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 20:54:34 [restartedMain] INFO  : Application version is -1: true
2024-05-21 20:54:34 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 20:54:34 [restartedMain] INFO  : The response status is 200
2024-05-21 20:54:34 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 20:54:34 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 20:54:34 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716342874176 with initial instances count: 3
2024-05-21 20:54:34 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 20:54:34 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716342874178, current=UP, previous=STARTING]
2024-05-21 20:54:34 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 20:54:34 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 20:54:34 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 20:54:34 [restartedMain] INFO  : Updating port to 8081
2024-05-21 20:54:34 [restartedMain] INFO  : Started TransactionsServiceApplication in 0.874 seconds (JVM running for 2024.737)
2024-05-21 20:54:34 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 20:54:35 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-21 20:54:35 [Thread-17] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 20:54:35 [Thread-17] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716342875411, current=DOWN, previous=UP]
2024-05-21 20:54:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 20:54:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 20:54:37 [Thread-17] INFO  : Shutting down DiscoveryClient ...
2024-05-21 20:54:40 [Thread-17] INFO  : Unregistering ...
2024-05-21 20:54:40 [Thread-17] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 20:54:40 [Thread-17] INFO  : Completed shut down of DiscoveryClient
2024-05-21 20:54:40 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 10824 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 20:54:40 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 20:54:40 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 20:54:40 [restartedMain] INFO  : Finished Spring Data repository scanning in 17 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 20:54:40 [restartedMain] INFO  : BeanFactory id=2ccaf21d-c85e-3d95-bb03-755fe6a2ff40
2024-05-21 20:54:40 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 20:54:40 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 20:54:40 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 20:54:40 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@76e3520, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2f71fb4f]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 20:54:40 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 20:54:40 [cluster-rtt-ClusterId{value='664d50601b667700de4682b7', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:113}] to localhost:27017
2024-05-21 20:54:40 [cluster-ClusterId{value='664d50601b667700de4682b7', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:114}] to localhost:27017
2024-05-21 20:54:40 [cluster-ClusterId{value='664d50601b667700de4682b7', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2282500}
2024-05-21 20:54:40 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 20:54:40 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 20:54:41 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 20:54:41 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 20:54:41 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 20:54:41 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 20:54:41 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 20:54:41 [restartedMain] INFO  : Disable delta property : false
2024-05-21 20:54:41 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 20:54:41 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 20:54:41 [restartedMain] INFO  : Application is null : false
2024-05-21 20:54:41 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 20:54:41 [restartedMain] INFO  : Application version is -1: true
2024-05-21 20:54:41 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 20:54:41 [restartedMain] INFO  : The response status is 200
2024-05-21 20:54:41 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 20:54:41 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 20:54:41 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716342881190 with initial instances count: 3
2024-05-21 20:54:41 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 20:54:41 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716342881191, current=UP, previous=STARTING]
2024-05-21 20:54:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 20:54:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 20:54:41 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 20:54:41 [restartedMain] INFO  : Updating port to 8081
2024-05-21 20:54:41 [restartedMain] INFO  : Started TransactionsServiceApplication in 0.711 seconds (JVM running for 2031.749)
2024-05-21 20:54:41 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 20:55:52 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 20:56:48 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 20:59:28 [nioEventLoopGroup-3-3] ERROR : Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: com.mongodb.MongoException: next() called after the cursor was closed.
Caused by: com.mongodb.MongoException: next() called after the cursor was closed.
	at com.mongodb.internal.operation.AsyncQueryBatchCursor.next(AsyncQueryBatchCursor.java:166)
	at com.mongodb.reactivestreams.client.internal.BatchCursor.lambda$next$0(BatchCursor.java:35)
	at reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:58)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
	at reactor.core.publisher.Mono.subscribeWith(Mono.java:4605)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4318)
	at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.recurseCursor(BatchCursorFlux.java:104)
	at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.lambda$subscribe$0(BatchCursorFlux.java:56)
	at reactor.core.publisher.LambdaMonoSubscriber.onNext(LambdaMonoSubscriber.java:171)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
	at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:549)
	at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$2(OperationExecutorImpl.java:92)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.async.function.RetryingAsyncCallbackSupplier$RetryingCallback.onResult(RetryingAsyncCallbackSupplier.java:114)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.operation.FindOperation$2.onResult(FindOperation.java:792)
	at com.mongodb.internal.operation.CommandOperationHelper.lambda$transformingReadCallback$10(CommandOperationHelper.java:331)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor$2.onResult(DefaultServer.java:276)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.CommandProtocolImpl$1.onResult(CommandProtocolImpl.java:84)
	at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection$1.onResult(DefaultConnectionPool.java:684)
	at com.mongodb.internal.connection.UsageTrackingInternalConnection$2.onResult(UsageTrackingInternalConnection.java:159)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:521)
	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:498)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:821)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:785)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:266)
	at com.mongodb.internal.connection.InternalStreamConnection.readAsync(InternalStreamConnection.java:642)
	at com.mongodb.internal.connection.InternalStreamConnection.access$600(InternalStreamConnection.java:86)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:775)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:760)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
	at com.mongodb.connection.netty.NettyStream.handleReadResponse(NettyStream.java:347)
	at com.mongodb.connection.netty.NettyStream.access$1100(NettyStream.java:105)
	at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:421)
	at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:418)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 20:59:28 [nioEventLoopGroup-7-3] INFO  : Opened connection [connectionId{localValue:8, serverValue:120}] to localhost:27017
2024-05-21 20:59:41 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:00:31 [nioEventLoopGroup-3-5] ERROR : Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: com.mongodb.MongoException: next() called after the cursor was closed.
Caused by: com.mongodb.MongoException: next() called after the cursor was closed.
	at com.mongodb.internal.operation.AsyncQueryBatchCursor.next(AsyncQueryBatchCursor.java:166)
	at com.mongodb.reactivestreams.client.internal.BatchCursor.lambda$next$0(BatchCursor.java:35)
	at reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:58)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
	at reactor.core.publisher.Mono.subscribeWith(Mono.java:4605)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4318)
	at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.recurseCursor(BatchCursorFlux.java:104)
	at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.lambda$subscribe$0(BatchCursorFlux.java:56)
	at reactor.core.publisher.LambdaMonoSubscriber.onNext(LambdaMonoSubscriber.java:171)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
	at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:549)
	at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$2(OperationExecutorImpl.java:92)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.async.function.RetryingAsyncCallbackSupplier$RetryingCallback.onResult(RetryingAsyncCallbackSupplier.java:114)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:95)
	at com.mongodb.internal.operation.FindOperation$2.onResult(FindOperation.java:792)
	at com.mongodb.internal.operation.CommandOperationHelper.lambda$transformingReadCallback$10(CommandOperationHelper.java:331)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor$2.onResult(DefaultServer.java:276)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.CommandProtocolImpl$1.onResult(CommandProtocolImpl.java:84)
	at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection$1.onResult(DefaultConnectionPool.java:684)
	at com.mongodb.internal.connection.UsageTrackingInternalConnection$2.onResult(UsageTrackingInternalConnection.java:159)
	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:521)
	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:498)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:821)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:785)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:266)
	at com.mongodb.internal.connection.InternalStreamConnection.readAsync(InternalStreamConnection.java:642)
	at com.mongodb.internal.connection.InternalStreamConnection.access$600(InternalStreamConnection.java:86)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:775)
	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:760)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:645)
	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:642)
	at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:319)
	at com.mongodb.connection.netty.NettyStream.handleReadResponse(NettyStream.java:347)
	at com.mongodb.connection.netty.NettyStream.access$1100(NettyStream.java:105)
	at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:421)
	at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:418)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 21:00:52 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:01:48 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:04:41 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:05:52 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:06:48 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:09:41 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:10:52 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:11:48 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:14:41 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:15:52 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:16:48 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:19:41 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:20:52 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:21:48 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:23:45 [File Watcher] INFO  : Restarting due to 2 class path changes (0 additions, 2 deletions, 0 modifications)
2024-05-21 21:23:45 [Thread-24] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 21:23:45 [Thread-24] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716344625012, current=DOWN, previous=UP]
2024-05-21 21:23:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 21:23:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 21:23:47 [Thread-24] INFO  : Shutting down DiscoveryClient ...
2024-05-21 21:23:50 [Thread-24] INFO  : Unregistering ...
2024-05-21 21:23:50 [Thread-24] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 21:23:50 [Thread-24] INFO  : Completed shut down of DiscoveryClient
2024-05-21 21:23:50 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 10824 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 21:23:50 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 21:23:50 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 21:23:50 [restartedMain] INFO  : Finished Spring Data repository scanning in 18 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 21:23:51 [restartedMain] INFO  : BeanFactory id=4766f13b-9364-3d4b-8d86-2d30bd8cd887
2024-05-21 21:23:51 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 21:23:51 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 21:23:51 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 21:23:51 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\infrastructure\adapters\TransactionsAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionStrategyFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\infrastructure\factory\TransactionStrategyFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'project.transactionsservice.infrastructure.strategies.transactions.TransactionStrategy' available: expected single matching bean but found 2: depositStrategy,withdrawalStrategy
2024-05-21 21:23:51 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-21 21:23:51 [restartedMain] ERROR : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in project.transactionsservice.infrastructure.factory.TransactionStrategyFactory required a single bean, but 2 were found:
	- depositStrategy: defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\infrastructure\strategies\transactions\DepositStrategy.class]
	- withdrawalStrategy: defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\infrastructure\strategies\transactions\WithdrawalStrategy.class]


Action:

Consider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed

2024-05-21 21:23:52 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 10824 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 21:23:52 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 21:23:52 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 21:23:52 [restartedMain] INFO  : Finished Spring Data repository scanning in 11 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 21:23:52 [restartedMain] INFO  : BeanFactory id=4766f13b-9364-3d4b-8d86-2d30bd8cd887
2024-05-21 21:23:52 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 21:23:52 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 21:23:52 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 21:23:52 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\infrastructure\adapters\TransactionsAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionStrategyFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\infrastructure\factory\TransactionStrategyFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'project.transactionsservice.infrastructure.strategies.transactions.TransactionStrategy' available: expected single matching bean but found 2: depositStrategy,withdrawalStrategy
2024-05-21 21:23:52 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-21 21:23:52 [restartedMain] ERROR : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in project.transactionsservice.infrastructure.factory.TransactionStrategyFactory required a single bean, but 2 were found:
	- depositStrategy: defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\infrastructure\strategies\transactions\DepositStrategy.class]
	- withdrawalStrategy: defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\infrastructure\strategies\transactions\WithdrawalStrategy.class]


Action:

Consider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed

2024-05-21 21:25:52 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:26:11 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 10824 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 21:26:11 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 21:26:11 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 21:26:11 [restartedMain] INFO  : Finished Spring Data repository scanning in 18 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 21:26:12 [restartedMain] INFO  : BeanFactory id=c9928795-3efd-34fc-a82d-a62e17545b31
2024-05-21 21:26:12 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 21:26:12 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 21:26:12 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 21:26:12 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\infrastructure\adapters\TransactionsAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionStrategyFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\infrastructure\factory\TransactionStrategyFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'project.transactionsservice.infrastructure.strategies.transactions.TransactionStrategy' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2024-05-21 21:26:12 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-21 21:26:12 [restartedMain] ERROR : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in project.transactionsservice.infrastructure.factory.TransactionStrategyFactory required a bean of type 'project.transactionsservice.infrastructure.strategies.transactions.TransactionStrategy' that could not be found.


Action:

Consider defining a bean of type 'project.transactionsservice.infrastructure.strategies.transactions.TransactionStrategy' in your configuration.

2024-05-21 21:26:13 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 10824 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 21:26:13 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 21:26:13 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 21:26:13 [restartedMain] INFO  : Finished Spring Data repository scanning in 12 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 21:26:13 [restartedMain] INFO  : BeanFactory id=4766f13b-9364-3d4b-8d86-2d30bd8cd887
2024-05-21 21:26:13 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 21:26:13 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 21:26:13 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 21:26:13 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsAdapter' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\infrastructure\adapters\TransactionsAdapter.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionStrategyFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\infrastructure\factory\TransactionStrategyFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'project.transactionsservice.infrastructure.strategies.transactions.TransactionStrategy' available: expected single matching bean but found 2: depositStrategy,withdrawalStrategy
2024-05-21 21:26:13 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-21 21:26:13 [restartedMain] ERROR : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in project.transactionsservice.infrastructure.factory.TransactionStrategyFactory required a single bean, but 2 were found:
	- depositStrategy: defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\infrastructure\strategies\transactions\DepositStrategy.class]
	- withdrawalStrategy: defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\infrastructure\strategies\transactions\WithdrawalStrategy.class]


Action:

Consider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed

2024-05-21 21:26:48 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:28:05 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 10824 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 21:28:05 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 21:28:05 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 21:28:05 [restartedMain] INFO  : Finished Spring Data repository scanning in 16 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 21:28:05 [restartedMain] INFO  : BeanFactory id=167ea27f-0bf5-3fc0-9105-b459c242e429
2024-05-21 21:28:05 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 21:28:05 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 21:28:05 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 21:28:05 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionsAdapter': Resolution of declared constructors on bean Class [project.transactionsservice.infrastructure.adapters.TransactionsAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1852737a] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/infrastructure/factory/TransactionStrategyFactory
2024-05-21 21:28:05 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-21 21:28:05 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\controller\TransactionsController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionsAdapter': Resolution of declared constructors on bean Class [project.transactionsservice.infrastructure.adapters.TransactionsAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1852737a] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/infrastructure/factory/TransactionStrategyFactory
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.transactionsservice.TransactionsServiceApplication.main(TransactionsServiceApplication.java:16)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionsDomainService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes\project\transactionsservice\application\service\domainService\TransactionsDomainService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionsAdapter': Resolution of declared constructors on bean Class [project.transactionsservice.infrastructure.adapters.TransactionsAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1852737a] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/infrastructure/factory/TransactionStrategyFactory
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 22 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionsAdapter': Resolution of declared constructors on bean Class [project.transactionsservice.infrastructure.adapters.TransactionsAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1852737a] failed; nested exception is java.lang.NoClassDefFoundError: project/transactionsservice/infrastructure/factory/TransactionStrategyFactory
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 36 common frames omitted
Caused by: java.lang.NoClassDefFoundError: project/transactionsservice/infrastructure/factory/TransactionStrategyFactory
	at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3429)
	at java.base/java.lang.Class.getDeclaredConstructors(Class.java:2608)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:313)
	... 49 common frames omitted
Caused by: java.lang.ClassNotFoundException: project.transactionsservice.infrastructure.factory.TransactionStrategyFactory
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:495)
	at java.base/java.lang.Class.forName(Class.java:474)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 53 common frames omitted
2024-05-21 21:30:15 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 24316 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 21:30:15 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 21:30:15 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 21:30:15 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 21:30:15 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 21:30:15 [restartedMain] INFO  : Finished Spring Data repository scanning in 109 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 21:30:15 [restartedMain] INFO  : BeanFactory id=4766f13b-9364-3d4b-8d86-2d30bd8cd887
2024-05-21 21:30:16 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 21:30:16 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 21:30:16 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 21:30:16 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@331c1317, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@86ee11b]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 21:30:16 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 21:30:16 [cluster-ClusterId{value='664d58b8d0efc677f60c7873', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:121}] to localhost:27017
2024-05-21 21:30:16 [cluster-rtt-ClusterId{value='664d58b8d0efc677f60c7873', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:122}] to localhost:27017
2024-05-21 21:30:16 [cluster-ClusterId{value='664d58b8d0efc677f60c7873', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=47053700}
2024-05-21 21:30:16 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-21 21:30:16 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 21:30:17 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 21:30:17 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 21:30:17 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 21:30:17 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 21:30:17 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:30:17 [restartedMain] INFO  : Disable delta property : false
2024-05-21 21:30:17 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 21:30:17 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 21:30:17 [restartedMain] INFO  : Application is null : false
2024-05-21 21:30:17 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 21:30:17 [restartedMain] INFO  : Application version is -1: true
2024-05-21 21:30:17 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 21:30:17 [restartedMain] INFO  : The response status is 200
2024-05-21 21:30:17 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 21:30:17 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 21:30:17 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716345017701 with initial instances count: 2
2024-05-21 21:30:17 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 21:30:17 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716345017702, current=UP, previous=STARTING]
2024-05-21 21:30:17 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 21:30:17 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 21:30:17 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 21:30:17 [restartedMain] INFO  : Updating port to 8081
2024-05-21 21:30:17 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.254 seconds (JVM running for 4.225)
2024-05-21 21:30:52 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:31:48 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:32:16 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:123}] to localhost:27017
2024-05-21 21:35:17 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:35:52 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:36:48 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:44:12 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:44:47 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:45:43 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:49:12 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:49:47 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:50:43 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:54:12 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:54:47 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:55:43 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:59:12 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 21:59:47 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:00:43 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:04:12 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:04:47 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:05:43 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:06:38 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-21 22:06:38 [Thread-1] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:06:38 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716347198729, current=DOWN, previous=UP]
2024-05-21 22:06:38 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:06:38 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:06:40 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:06:43 [Thread-1] INFO  : Unregistering ...
2024-05-21 22:06:43 [Thread-1] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:06:43 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:06:44 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:06:44 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:06:44 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:06:44 [restartedMain] INFO  : Finished Spring Data repository scanning in 19 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:06:44 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:06:44 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:06:44 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:06:44 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:06:44 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@78412ffe, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:06:44 [cluster-ClusterId{value='664d614421c7f04e1d5df84a', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:130}] to localhost:27017
2024-05-21 22:06:44 [cluster-rtt-ClusterId{value='664d614421c7f04e1d5df84a', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:131}] to localhost:27017
2024-05-21 22:06:44 [cluster-ClusterId{value='664d614421c7f04e1d5df84a', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1506200}
2024-05-21 22:06:44 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:06:44 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:06:44 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:06:45 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:06:45 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:06:45 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:06:45 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:06:45 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:06:45 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:06:45 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:06:45 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:06:45 [restartedMain] INFO  : Application is null : false
2024-05-21 22:06:45 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:06:45 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:06:45 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:06:45 [restartedMain] INFO  : The response status is 200
2024-05-21 22:06:45 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:06:45 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:06:45 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716347205371 with initial instances count: 2
2024-05-21 22:06:45 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:06:45 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716347205372, current=UP, previous=STARTING]
2024-05-21 22:06:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:06:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:06:45 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:06:45 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:06:45 [restartedMain] INFO  : Started FinalProjectApplication in 1.485 seconds (JVM running for 11148.714)
2024-05-21 22:06:45 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:06:46 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-21 22:06:46 [Thread-15] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:06:46 [Thread-15] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716347206587, current=DOWN, previous=UP]
2024-05-21 22:06:46 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:06:46 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:06:48 [Thread-15] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:06:51 [Thread-15] INFO  : Unregistering ...
2024-05-21 22:06:51 [Thread-15] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:06:51 [Thread-15] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:06:51 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:06:51 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:06:51 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:06:51 [restartedMain] INFO  : Finished Spring Data repository scanning in 15 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:06:52 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:06:52 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:06:52 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:06:52 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:06:52 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@2e11ffd, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:06:52 [cluster-rtt-ClusterId{value='664d614c21c7f04e1d5df84b', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:9, serverValue:132}] to localhost:27017
2024-05-21 22:06:52 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:06:52 [cluster-ClusterId{value='664d614c21c7f04e1d5df84b', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:8, serverValue:133}] to localhost:27017
2024-05-21 22:06:52 [cluster-ClusterId{value='664d614c21c7f04e1d5df84b', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3009400}
2024-05-21 22:06:52 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:06:52 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:06:52 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:06:52 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:06:52 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:06:52 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:06:52 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:06:52 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:06:52 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:06:52 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:06:52 [restartedMain] INFO  : Application is null : false
2024-05-21 22:06:52 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:06:52 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:06:52 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:06:52 [restartedMain] INFO  : The response status is 200
2024-05-21 22:06:52 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:06:52 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:06:52 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716347212615 with initial instances count: 2
2024-05-21 22:06:52 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:06:52 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716347212616, current=UP, previous=STARTING]
2024-05-21 22:06:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:06:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:06:52 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:06:52 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:06:52 [restartedMain] INFO  : Started FinalProjectApplication in 0.994 seconds (JVM running for 11155.956)
2024-05-21 22:06:52 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:09:12 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:09:47 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:09:55 [File Watcher] INFO  : Restarting due to 3 class path changes (0 additions, 3 deletions, 0 modifications)
2024-05-21 22:09:55 [Thread-22] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:09:55 [Thread-22] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716347395714, current=DOWN, previous=UP]
2024-05-21 22:09:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:09:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:09:57 [Thread-22] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:10:00 [Thread-22] INFO  : Unregistering ...
2024-05-21 22:10:00 [Thread-22] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:10:00 [Thread-22] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:10:00 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:10:00 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:10:01 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:10:01 [restartedMain] INFO  : Finished Spring Data repository scanning in 32 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:10:01 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:10:01 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:10:01 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:10:01 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:10:01 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@459825f7, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:10:01 [cluster-ClusterId{value='664d620921c7f04e1d5df84c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:10, serverValue:134}] to localhost:27017
2024-05-21 22:10:01 [cluster-rtt-ClusterId{value='664d620921c7f04e1d5df84c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:11, serverValue:135}] to localhost:27017
2024-05-21 22:10:01 [cluster-ClusterId{value='664d620921c7f04e1d5df84c', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1922700}
2024-05-21 22:10:01 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:10:01 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:10:01 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:10:01 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:10:01 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:10:01 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:10:01 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:10:01 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:10:01 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:10:01 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:10:01 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:10:01 [restartedMain] INFO  : Application is null : false
2024-05-21 22:10:01 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:10:01 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:10:01 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:10:01 [restartedMain] INFO  : The response status is 200
2024-05-21 22:10:01 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:10:01 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:10:01 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716347401937 with initial instances count: 3
2024-05-21 22:10:01 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:10:01 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716347401937, current=UP, previous=STARTING]
2024-05-21 22:10:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:10:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:10:01 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:10:01 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:10:02 [restartedMain] INFO  : Started FinalProjectApplication in 1.244 seconds (JVM running for 11345.329)
2024-05-21 22:10:02 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:10:03 [File Watcher] INFO  : Restarting due to 3 class path changes (3 additions, 0 deletions, 0 modifications)
2024-05-21 22:10:03 [Thread-36] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:10:03 [Thread-36] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716347403048, current=DOWN, previous=UP]
2024-05-21 22:10:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:10:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:10:05 [Thread-36] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:10:08 [Thread-36] INFO  : Unregistering ...
2024-05-21 22:10:08 [Thread-36] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:10:08 [Thread-36] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:10:08 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:10:08 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:10:08 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:10:08 [restartedMain] INFO  : Finished Spring Data repository scanning in 14 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:10:08 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:10:08 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:10:08 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:10:08 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:10:08 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@44d47d77, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:10:08 [cluster-ClusterId{value='664d621021c7f04e1d5df84d', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:12, serverValue:137}] to localhost:27017
2024-05-21 22:10:08 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:10:08 [cluster-rtt-ClusterId{value='664d621021c7f04e1d5df84d', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:13, serverValue:136}] to localhost:27017
2024-05-21 22:10:08 [cluster-ClusterId{value='664d621021c7f04e1d5df84d', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1304200}
2024-05-21 22:10:08 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:10:08 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:10:08 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:10:08 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:10:08 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:10:08 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:10:08 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:10:08 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:10:08 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:10:08 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:10:08 [restartedMain] INFO  : Application is null : false
2024-05-21 22:10:08 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:10:08 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:10:08 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:10:09 [restartedMain] INFO  : The response status is 200
2024-05-21 22:10:09 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:10:09 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:10:09 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716347409012 with initial instances count: 3
2024-05-21 22:10:09 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:10:09 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716347409012, current=UP, previous=STARTING]
2024-05-21 22:10:09 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:10:09 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:10:09 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:10:09 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:10:09 [restartedMain] INFO  : Started FinalProjectApplication in 0.924 seconds (JVM running for 11352.375)
2024-05-21 22:10:09 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:11:43 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-21 22:11:43 [Thread-50] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:11:43 [Thread-50] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716347503864, current=DOWN, previous=UP]
2024-05-21 22:11:43 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:11:43 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:11:45 [Thread-50] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:11:48 [Thread-50] INFO  : Unregistering ...
2024-05-21 22:11:48 [Thread-50] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:11:48 [Thread-50] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:11:49 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:11:49 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:11:49 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:11:49 [restartedMain] INFO  : Finished Spring Data repository scanning in 20 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:11:49 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:11:49 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:11:49 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:11:49 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:11:49 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3504a787, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:11:49 [cluster-rtt-ClusterId{value='664d627521c7f04e1d5df84e', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:15, serverValue:139}] to localhost:27017
2024-05-21 22:11:49 [cluster-ClusterId{value='664d627521c7f04e1d5df84e', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:14, serverValue:138}] to localhost:27017
2024-05-21 22:11:49 [cluster-ClusterId{value='664d627521c7f04e1d5df84e', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1210100}
2024-05-21 22:11:49 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:11:49 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:11:49 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:11:49 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:11:49 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:11:49 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:11:49 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:11:49 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:11:49 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:11:49 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:11:49 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:11:49 [restartedMain] INFO  : Application is null : false
2024-05-21 22:11:49 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:11:49 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:11:49 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:11:49 [restartedMain] INFO  : The response status is 200
2024-05-21 22:11:49 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:11:49 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:11:49 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716347509973 with initial instances count: 3
2024-05-21 22:11:49 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:11:49 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716347509973, current=UP, previous=STARTING]
2024-05-21 22:11:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:11:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:11:49 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:11:49 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:11:50 [restartedMain] INFO  : Started FinalProjectApplication in 1.084 seconds (JVM running for 11453.337)
2024-05-21 22:11:50 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:11:51 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-21 22:11:51 [Thread-64] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:11:51 [Thread-64] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716347511170, current=DOWN, previous=UP]
2024-05-21 22:11:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:11:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:11:53 [Thread-64] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:11:56 [Thread-64] INFO  : Unregistering ...
2024-05-21 22:11:56 [Thread-64] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:11:56 [Thread-64] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:11:56 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:11:56 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:11:56 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:11:56 [restartedMain] INFO  : Finished Spring Data repository scanning in 25 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:11:56 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:11:56 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:11:56 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:11:56 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:11:56 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1bdd9c40, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:11:56 [cluster-rtt-ClusterId{value='664d627c21c7f04e1d5df84f', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:17, serverValue:141}] to localhost:27017
2024-05-21 22:11:56 [cluster-ClusterId{value='664d627c21c7f04e1d5df84f', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:16, serverValue:140}] to localhost:27017
2024-05-21 22:11:56 [cluster-ClusterId{value='664d627c21c7f04e1d5df84f', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1278100}
2024-05-21 22:11:56 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:11:56 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:11:56 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:11:57 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:11:57 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:11:57 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:11:57 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:11:57 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:11:57 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:11:57 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:11:57 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:11:57 [restartedMain] INFO  : Application is null : false
2024-05-21 22:11:57 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:11:57 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:11:57 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:11:57 [restartedMain] INFO  : The response status is 200
2024-05-21 22:11:57 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:11:57 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:11:57 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716347517404 with initial instances count: 3
2024-05-21 22:11:57 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:11:57 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716347517405, current=UP, previous=STARTING]
2024-05-21 22:11:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:11:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:11:57 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:11:57 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:11:57 [restartedMain] INFO  : Started FinalProjectApplication in 1.233 seconds (JVM running for 11460.774)
2024-05-21 22:11:57 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:14:12 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:14:43 [File Watcher] INFO  : Restarting due to 2 class path changes (0 additions, 2 deletions, 0 modifications)
2024-05-21 22:14:43 [Thread-78] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:14:43 [Thread-78] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716347683984, current=DOWN, previous=UP]
2024-05-21 22:14:43 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:14:43 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:14:46 [Thread-78] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:14:47 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:14:49 [Thread-78] INFO  : Unregistering ...
2024-05-21 22:14:49 [Thread-78] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:14:49 [Thread-78] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:14:49 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:14:49 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:14:49 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:14:50 [restartedMain] INFO  : Finished Spring Data repository scanning in 47 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:14:50 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:14:50 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:14:50 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:14:50 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:14:50 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@5b879800, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:14:50 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:14:50 [cluster-rtt-ClusterId{value='664d632a21c7f04e1d5df850', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:19, serverValue:143}] to localhost:27017
2024-05-21 22:14:50 [cluster-ClusterId{value='664d632a21c7f04e1d5df850', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:18, serverValue:142}] to localhost:27017
2024-05-21 22:14:50 [cluster-ClusterId{value='664d632a21c7f04e1d5df850', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=5496000}
2024-05-21 22:14:50 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:14:50 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:14:50 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:14:50 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:14:50 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:14:50 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:14:50 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:14:50 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:14:50 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:14:50 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:14:50 [restartedMain] INFO  : Application is null : false
2024-05-21 22:14:50 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:14:50 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:14:50 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:14:50 [restartedMain] INFO  : The response status is 200
2024-05-21 22:14:50 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:14:50 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:14:50 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716347690742 with initial instances count: 3
2024-05-21 22:14:50 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:14:50 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716347690743, current=UP, previous=STARTING]
2024-05-21 22:14:50 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:14:50 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:14:50 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:14:50 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:14:50 [restartedMain] INFO  : Started FinalProjectApplication in 1.708 seconds (JVM running for 11634.105)
2024-05-21 22:14:50 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:14:51 [File Watcher] INFO  : Restarting due to 2 class path changes (2 additions, 0 deletions, 0 modifications)
2024-05-21 22:14:51 [Thread-92] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:14:51 [Thread-92] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716347691966, current=DOWN, previous=UP]
2024-05-21 22:14:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:14:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:14:54 [Thread-92] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:14:57 [Thread-92] INFO  : Unregistering ...
2024-05-21 22:14:57 [Thread-92] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:14:57 [Thread-92] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:14:57 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:14:57 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:14:57 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:14:57 [restartedMain] INFO  : Finished Spring Data repository scanning in 15 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:14:57 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:14:57 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:14:57 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:14:57 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:14:57 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@2de38a4, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:14:57 [cluster-ClusterId{value='664d633121c7f04e1d5df851', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:20, serverValue:144}] to localhost:27017
2024-05-21 22:14:57 [cluster-ClusterId{value='664d633121c7f04e1d5df851', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1380900}
2024-05-21 22:14:57 [cluster-rtt-ClusterId{value='664d633121c7f04e1d5df851', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:21, serverValue:145}] to localhost:27017
2024-05-21 22:14:57 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:14:57 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:14:57 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:14:57 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:14:57 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:14:57 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:14:57 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:14:57 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:14:57 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:14:57 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:14:57 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:14:57 [restartedMain] INFO  : Application is null : false
2024-05-21 22:14:57 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:14:57 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:14:57 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:14:57 [restartedMain] INFO  : The response status is 200
2024-05-21 22:14:57 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:14:57 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:14:57 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716347697904 with initial instances count: 3
2024-05-21 22:14:57 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:14:57 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716347697905, current=UP, previous=STARTING]
2024-05-21 22:14:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:14:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:14:57 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:14:57 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:14:58 [restartedMain] INFO  : Started FinalProjectApplication in 0.887 seconds (JVM running for 11641.261)
2024-05-21 22:14:58 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:15:09 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-21 22:15:09 [Thread-106] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:15:09 [Thread-106] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716347709421, current=DOWN, previous=UP]
2024-05-21 22:15:09 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:15:09 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:15:11 [Thread-106] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:15:14 [Thread-106] INFO  : Unregistering ...
2024-05-21 22:15:14 [Thread-106] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:15:14 [Thread-106] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:15:14 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:15:14 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:15:14 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:15:14 [restartedMain] INFO  : Finished Spring Data repository scanning in 16 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:15:14 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:15:14 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:15:14 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:15:14 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:15:15 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@97fc73a, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:15:15 [cluster-rtt-ClusterId{value='664d634321c7f04e1d5df852', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:22, serverValue:146}] to localhost:27017
2024-05-21 22:15:15 [cluster-ClusterId{value='664d634321c7f04e1d5df852', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:23, serverValue:147}] to localhost:27017
2024-05-21 22:15:15 [cluster-ClusterId{value='664d634321c7f04e1d5df852', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1147400}
2024-05-21 22:15:15 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:15:15 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:15:15 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:15:15 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:15:15 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:15:15 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:15:15 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:15:15 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:15:15 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:15:15 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:15:15 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:15:15 [restartedMain] INFO  : Application is null : false
2024-05-21 22:15:15 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:15:15 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:15:15 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:15:15 [restartedMain] INFO  : The response status is 200
2024-05-21 22:15:15 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:15:15 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:15:15 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716347715358 with initial instances count: 3
2024-05-21 22:15:15 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:15:15 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716347715360, current=UP, previous=STARTING]
2024-05-21 22:15:15 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:15:15 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:15:15 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:15:15 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:15:15 [restartedMain] INFO  : Started FinalProjectApplication in 0.908 seconds (JVM running for 11658.718)
2024-05-21 22:15:15 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:15:16 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-21 22:15:16 [Thread-120] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:15:16 [Thread-120] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716347716582, current=DOWN, previous=UP]
2024-05-21 22:15:16 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:15:16 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:15:18 [Thread-120] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:15:21 [Thread-120] INFO  : Unregistering ...
2024-05-21 22:15:21 [Thread-120] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:15:21 [Thread-120] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:15:21 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:15:21 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:15:21 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:15:21 [restartedMain] INFO  : Finished Spring Data repository scanning in 19 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:15:22 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:15:22 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:15:22 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:15:22 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:15:22 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@580859ee, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:15:22 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:15:22 [cluster-rtt-ClusterId{value='664d634a21c7f04e1d5df853', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:25, serverValue:148}] to localhost:27017
2024-05-21 22:15:22 [cluster-ClusterId{value='664d634a21c7f04e1d5df853', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:24, serverValue:149}] to localhost:27017
2024-05-21 22:15:22 [cluster-ClusterId{value='664d634a21c7f04e1d5df853', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2973800}
2024-05-21 22:15:22 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:15:22 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:15:22 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:15:22 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:15:22 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:15:22 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:15:22 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:15:22 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:15:22 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:15:22 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:15:22 [restartedMain] INFO  : Application is null : false
2024-05-21 22:15:22 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:15:22 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:15:22 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:15:22 [restartedMain] INFO  : The response status is 200
2024-05-21 22:15:22 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:15:22 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:15:22 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716347722452 with initial instances count: 3
2024-05-21 22:15:22 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:15:22 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716347722453, current=UP, previous=STARTING]
2024-05-21 22:15:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:15:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:15:22 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:15:22 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:15:22 [restartedMain] INFO  : Started FinalProjectApplication in 0.856 seconds (JVM running for 11665.805)
2024-05-21 22:15:22 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:16:06 [File Watcher] INFO  : Restarting due to 2 class path changes (0 additions, 2 deletions, 0 modifications)
2024-05-21 22:16:06 [Thread-134] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:16:06 [Thread-134] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716347766063, current=DOWN, previous=UP]
2024-05-21 22:16:06 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:16:06 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:16:08 [Thread-134] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:16:11 [Thread-134] INFO  : Unregistering ...
2024-05-21 22:16:11 [Thread-134] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:16:11 [Thread-134] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:16:11 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:16:11 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:16:11 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:16:11 [restartedMain] INFO  : Finished Spring Data repository scanning in 17 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:16:11 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:16:11 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:16:11 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:16:11 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:16:11 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@25b51b34, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:16:11 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:16:11 [cluster-ClusterId{value='664d637b21c7f04e1d5df854', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:26, serverValue:150}] to localhost:27017
2024-05-21 22:16:11 [cluster-rtt-ClusterId{value='664d637b21c7f04e1d5df854', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:27, serverValue:151}] to localhost:27017
2024-05-21 22:16:11 [cluster-ClusterId{value='664d637b21c7f04e1d5df854', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2499800}
2024-05-21 22:16:11 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:16:11 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:16:11 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:16:11 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:16:12 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:16:12 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:16:12 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:16:12 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:16:12 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:16:12 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:16:12 [restartedMain] INFO  : Application is null : false
2024-05-21 22:16:12 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:16:12 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:16:12 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:16:12 [restartedMain] INFO  : The response status is 200
2024-05-21 22:16:12 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:16:12 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:16:12 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716347772030 with initial instances count: 3
2024-05-21 22:16:12 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:16:12 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716347772031, current=UP, previous=STARTING]
2024-05-21 22:16:12 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:16:12 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:16:12 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:16:12 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:16:12 [restartedMain] INFO  : Started FinalProjectApplication in 0.935 seconds (JVM running for 11715.377)
2024-05-21 22:16:12 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:16:13 [File Watcher] INFO  : Restarting due to 2 class path changes (2 additions, 0 deletions, 0 modifications)
2024-05-21 22:16:13 [Thread-148] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:16:13 [Thread-148] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716347773269, current=DOWN, previous=UP]
2024-05-21 22:16:13 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:16:13 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:16:15 [Thread-148] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:16:18 [Thread-148] INFO  : Unregistering ...
2024-05-21 22:16:18 [Thread-148] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:16:18 [Thread-148] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:16:18 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:16:18 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:16:18 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:16:18 [restartedMain] INFO  : Finished Spring Data repository scanning in 17 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:16:18 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:16:18 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:16:18 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:16:18 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:16:18 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@42d920ef, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:16:18 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:16:18 [cluster-ClusterId{value='664d638221c7f04e1d5df855', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:29, serverValue:153}] to localhost:27017
2024-05-21 22:16:18 [cluster-rtt-ClusterId{value='664d638221c7f04e1d5df855', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:28, serverValue:152}] to localhost:27017
2024-05-21 22:16:18 [cluster-ClusterId{value='664d638221c7f04e1d5df855', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1353700}
2024-05-21 22:16:18 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:16:18 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:16:19 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:16:19 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:16:19 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:16:19 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:16:19 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:16:19 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:16:19 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:16:19 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:16:19 [restartedMain] INFO  : Application is null : false
2024-05-21 22:16:19 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:16:19 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:16:19 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:16:19 [restartedMain] INFO  : The response status is 200
2024-05-21 22:16:19 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:16:19 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:16:19 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716347779561 with initial instances count: 3
2024-05-21 22:16:19 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:16:19 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716347779563, current=UP, previous=STARTING]
2024-05-21 22:16:19 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:16:19 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:16:19 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:16:19 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:16:19 [restartedMain] INFO  : Started FinalProjectApplication in 1.407 seconds (JVM running for 11723.072)
2024-05-21 22:16:19 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:18:22 [File Watcher] INFO  : Restarting due to 3 class path changes (0 additions, 3 deletions, 0 modifications)
2024-05-21 22:18:22 [Thread-162] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:18:22 [Thread-162] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716347902640, current=DOWN, previous=UP]
2024-05-21 22:18:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:18:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:18:24 [Thread-162] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:18:27 [Thread-162] INFO  : Unregistering ...
2024-05-21 22:18:27 [Thread-162] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:18:27 [Thread-162] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:18:27 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:18:27 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:18:28 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:18:28 [restartedMain] INFO  : Finished Spring Data repository scanning in 14 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:18:28 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:18:28 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:18:28 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:18:28 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:18:28 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@632041ee, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:18:28 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:18:28 [cluster-ClusterId{value='664d640421c7f04e1d5df856', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:30, serverValue:155}] to localhost:27017
2024-05-21 22:18:28 [cluster-rtt-ClusterId{value='664d640421c7f04e1d5df856', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:31, serverValue:154}] to localhost:27017
2024-05-21 22:18:28 [cluster-ClusterId{value='664d640421c7f04e1d5df856', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1148600}
2024-05-21 22:18:28 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:18:28 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:18:28 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:18:28 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:18:28 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:18:28 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:18:28 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:18:28 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:18:28 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:18:28 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:18:28 [restartedMain] INFO  : Application is null : false
2024-05-21 22:18:28 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:18:28 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:18:28 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:18:28 [restartedMain] INFO  : The response status is 200
2024-05-21 22:18:28 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:18:28 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:18:28 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716347908646 with initial instances count: 3
2024-05-21 22:18:28 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:18:28 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716347908647, current=UP, previous=STARTING]
2024-05-21 22:18:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:18:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:18:28 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:18:28 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:18:28 [restartedMain] INFO  : Started FinalProjectApplication in 0.927 seconds (JVM running for 11851.974)
2024-05-21 22:18:28 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:18:29 [File Watcher] INFO  : Restarting due to 3 class path changes (3 additions, 0 deletions, 0 modifications)
2024-05-21 22:18:29 [Thread-176] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:18:29 [Thread-176] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716347909874, current=DOWN, previous=UP]
2024-05-21 22:18:29 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:18:29 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:18:31 [Thread-176] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:18:34 [Thread-176] INFO  : Unregistering ...
2024-05-21 22:18:34 [Thread-176] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:18:34 [Thread-176] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:18:35 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:18:35 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:18:35 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:18:35 [restartedMain] INFO  : Finished Spring Data repository scanning in 14 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:18:35 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:18:35 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:18:35 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:18:35 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:18:35 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@23bf3f27, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:18:35 [cluster-ClusterId{value='664d640b21c7f04e1d5df857', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:32, serverValue:156}] to localhost:27017
2024-05-21 22:18:35 [cluster-rtt-ClusterId{value='664d640b21c7f04e1d5df857', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:33, serverValue:157}] to localhost:27017
2024-05-21 22:18:35 [cluster-ClusterId{value='664d640b21c7f04e1d5df857', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1271000}
2024-05-21 22:18:35 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:18:35 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:18:35 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:18:35 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:18:35 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:18:35 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:18:35 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:18:35 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:18:35 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:18:35 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:18:35 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:18:35 [restartedMain] INFO  : Application is null : false
2024-05-21 22:18:35 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:18:35 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:18:35 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:18:35 [restartedMain] INFO  : The response status is 200
2024-05-21 22:18:35 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:18:35 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:18:35 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716347915696 with initial instances count: 3
2024-05-21 22:18:35 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:18:35 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716347915697, current=UP, previous=STARTING]
2024-05-21 22:18:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:18:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:18:35 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:18:35 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:18:35 [restartedMain] INFO  : Started FinalProjectApplication in 0.804 seconds (JVM running for 11859.056)
2024-05-21 22:18:35 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:19:12 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:19:47 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:19:48 [File Watcher] INFO  : Restarting due to 3 class path changes (0 additions, 3 deletions, 0 modifications)
2024-05-21 22:19:48 [Thread-190] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:19:48 [Thread-190] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716347988975, current=DOWN, previous=UP]
2024-05-21 22:19:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:19:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:19:51 [Thread-190] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:19:54 [Thread-190] INFO  : Unregistering ...
2024-05-21 22:19:54 [Thread-190] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:19:54 [Thread-190] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:19:54 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:19:54 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:19:54 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:19:54 [restartedMain] INFO  : Finished Spring Data repository scanning in 15 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:19:54 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:19:54 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:19:54 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:19:54 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:19:54 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@7fe9bebf, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:19:54 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:19:54 [cluster-rtt-ClusterId{value='664d645a21c7f04e1d5df858', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:35, serverValue:158}] to localhost:27017
2024-05-21 22:19:54 [cluster-ClusterId{value='664d645a21c7f04e1d5df858', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:34, serverValue:159}] to localhost:27017
2024-05-21 22:19:54 [cluster-ClusterId{value='664d645a21c7f04e1d5df858', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1846400}
2024-05-21 22:19:54 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:19:54 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:19:54 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:19:54 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:19:54 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:19:54 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:19:54 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:19:54 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:19:54 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:19:54 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:19:54 [restartedMain] INFO  : Application is null : false
2024-05-21 22:19:54 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:19:54 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:19:54 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:19:54 [restartedMain] INFO  : The response status is 200
2024-05-21 22:19:54 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:19:54 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:19:54 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716347994956 with initial instances count: 3
2024-05-21 22:19:54 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:19:54 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716347994957, current=UP, previous=STARTING]
2024-05-21 22:19:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:19:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:19:54 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:19:54 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:19:55 [restartedMain] INFO  : Started FinalProjectApplication in 0.972 seconds (JVM running for 11938.331)
2024-05-21 22:19:55 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:19:56 [File Watcher] INFO  : Restarting due to 3 class path changes (3 additions, 0 deletions, 0 modifications)
2024-05-21 22:19:56 [Thread-204] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:19:56 [Thread-204] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716347996199, current=DOWN, previous=UP]
2024-05-21 22:19:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:19:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:19:58 [Thread-204] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:20:01 [Thread-204] INFO  : Unregistering ...
2024-05-21 22:20:01 [Thread-204] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:20:01 [Thread-204] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:20:01 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:20:01 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:20:01 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:20:01 [restartedMain] INFO  : Finished Spring Data repository scanning in 25 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:20:01 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:20:01 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:20:01 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:20:01 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:20:01 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3d3f0d99, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:20:01 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:20:01 [cluster-rtt-ClusterId{value='664d646121c7f04e1d5df859', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:37, serverValue:160}] to localhost:27017
2024-05-21 22:20:01 [cluster-ClusterId{value='664d646121c7f04e1d5df859', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:36, serverValue:161}] to localhost:27017
2024-05-21 22:20:01 [cluster-ClusterId{value='664d646121c7f04e1d5df859', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1925900}
2024-05-21 22:20:01 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:20:01 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:20:02 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:20:02 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:20:02 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:20:02 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:20:02 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:20:02 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:20:02 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:20:02 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:20:02 [restartedMain] INFO  : Application is null : false
2024-05-21 22:20:02 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:20:02 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:20:02 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:20:02 [restartedMain] INFO  : The response status is 200
2024-05-21 22:20:02 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:20:02 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:20:02 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716348002257 with initial instances count: 3
2024-05-21 22:20:02 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:20:02 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716348002257, current=UP, previous=STARTING]
2024-05-21 22:20:02 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:20:02 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:20:02 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:20:02 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:20:02 [restartedMain] INFO  : Started FinalProjectApplication in 0.984 seconds (JVM running for 11945.596)
2024-05-21 22:20:02 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:20:29 [File Watcher] INFO  : Restarting due to 2 class path changes (0 additions, 2 deletions, 0 modifications)
2024-05-21 22:20:29 [Thread-218] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:20:29 [Thread-218] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716348029161, current=DOWN, previous=UP]
2024-05-21 22:20:29 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:20:29 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:20:31 [Thread-218] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:20:34 [DiscoveryClient-0] WARN  : task supervisor shutting down, can't accept the task
2024-05-21 22:20:34 [Thread-218] INFO  : Unregistering ...
2024-05-21 22:20:34 [Thread-218] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:20:34 [Thread-218] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:20:34 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:20:34 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:20:34 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:20:34 [restartedMain] INFO  : Finished Spring Data repository scanning in 23 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:20:34 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:20:34 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:20:34 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:20:34 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:20:34 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@7435ae50, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:20:34 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:20:34 [cluster-rtt-ClusterId{value='664d648221c7f04e1d5df85a', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:39, serverValue:163}] to localhost:27017
2024-05-21 22:20:34 [cluster-ClusterId{value='664d648221c7f04e1d5df85a', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:38, serverValue:162}] to localhost:27017
2024-05-21 22:20:34 [cluster-ClusterId{value='664d648221c7f04e1d5df85a', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1509000}
2024-05-21 22:20:34 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:20:34 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:20:35 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:20:35 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:20:35 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:20:35 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:20:35 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:20:35 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:20:35 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:20:35 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:20:35 [restartedMain] INFO  : Application is null : false
2024-05-21 22:20:35 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:20:35 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:20:35 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:20:35 [restartedMain] INFO  : The response status is 200
2024-05-21 22:20:35 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:20:35 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:20:35 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716348035274 with initial instances count: 3
2024-05-21 22:20:35 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:20:35 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716348035275, current=UP, previous=STARTING]
2024-05-21 22:20:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:20:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:20:35 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:20:35 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:20:35 [restartedMain] INFO  : Started FinalProjectApplication in 1.091 seconds (JVM running for 11978.661)
2024-05-21 22:20:35 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:20:36 [File Watcher] INFO  : Restarting due to 2 class path changes (2 additions, 0 deletions, 0 modifications)
2024-05-21 22:20:36 [Thread-232] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:20:36 [Thread-232] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716348036407, current=DOWN, previous=UP]
2024-05-21 22:20:36 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:20:36 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:20:38 [Thread-232] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:20:41 [Thread-232] INFO  : Unregistering ...
2024-05-21 22:20:41 [Thread-232] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:20:41 [Thread-232] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:20:41 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:20:41 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:20:41 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:20:41 [restartedMain] INFO  : Finished Spring Data repository scanning in 20 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:20:41 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:20:41 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:20:41 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:20:41 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:20:42 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@5fbef186, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:20:42 [cluster-rtt-ClusterId{value='664d648a21c7f04e1d5df85b', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:40, serverValue:164}] to localhost:27017
2024-05-21 22:20:42 [cluster-ClusterId{value='664d648a21c7f04e1d5df85b', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:41, serverValue:165}] to localhost:27017
2024-05-21 22:20:42 [cluster-ClusterId{value='664d648a21c7f04e1d5df85b', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1219900}
2024-05-21 22:20:42 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:20:42 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:20:42 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:20:42 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:20:42 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:20:42 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:20:42 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:20:42 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:20:42 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:20:42 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:20:42 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:20:42 [restartedMain] INFO  : Application is null : false
2024-05-21 22:20:42 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:20:42 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:20:42 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:20:42 [restartedMain] INFO  : The response status is 200
2024-05-21 22:20:42 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:20:42 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:20:42 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716348042599 with initial instances count: 3
2024-05-21 22:20:42 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:20:42 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716348042601, current=UP, previous=STARTING]
2024-05-21 22:20:42 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:20:42 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:20:42 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:20:42 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:20:42 [restartedMain] INFO  : Started FinalProjectApplication in 1.182 seconds (JVM running for 11985.972)
2024-05-21 22:20:42 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:21:13 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-21 22:21:13 [Thread-246] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:21:13 [Thread-246] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716348073619, current=DOWN, previous=UP]
2024-05-21 22:21:13 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:21:13 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:21:15 [Thread-246] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:21:18 [Thread-246] INFO  : Unregistering ...
2024-05-21 22:21:18 [Thread-246] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:21:18 [Thread-246] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:21:18 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:21:18 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:21:19 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:21:19 [restartedMain] INFO  : Finished Spring Data repository scanning in 19 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:21:19 [restartedMain] INFO  : BeanFactory id=17859221-2abb-31ec-830d-0082f82654b4
2024-05-21 22:21:19 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:21:19 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:21:19 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:21:19 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'BARepoFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\factory\BARepoFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsAccAdapter': Resolution of declared constructors on bean Class [project.infrastructure.adapters.SavingsAccAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@7fddf264] failed; nested exception is java.lang.NoClassDefFoundError: project/domain/validations/SaveDomainValidations
2024-05-21 22:21:19 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-21 22:21:19 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'BARepoFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\factory\BARepoFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsAccAdapter': Resolution of declared constructors on bean Class [project.infrastructure.adapters.SavingsAccAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@7fddf264] failed; nested exception is java.lang.NoClassDefFoundError: project/domain/validations/SaveDomainValidations
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'BARepoFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\factory\BARepoFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsAccAdapter': Resolution of declared constructors on bean Class [project.infrastructure.adapters.SavingsAccAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@7fddf264] failed; nested exception is java.lang.NoClassDefFoundError: project/domain/validations/SaveDomainValidations
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 22 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'BARepoFactory' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\infrastructure\factory\BARepoFactory.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsAccAdapter': Resolution of declared constructors on bean Class [project.infrastructure.adapters.SavingsAccAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@7fddf264] failed; nested exception is java.lang.NoClassDefFoundError: project/domain/validations/SaveDomainValidations
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 36 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'savingsAccAdapter': Resolution of declared constructors on bean Class [project.infrastructure.adapters.SavingsAccAdapter] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@7fddf264] failed; nested exception is java.lang.NoClassDefFoundError: project/domain/validations/SaveDomainValidations
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 50 common frames omitted
Caused by: java.lang.NoClassDefFoundError: project/domain/validations/SaveDomainValidations
	at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3429)
	at java.base/java.lang.Class.getDeclaredConstructors(Class.java:2608)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:313)
	... 63 common frames omitted
Caused by: java.lang.ClassNotFoundException: project.domain.validations.SaveDomainValidations
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:495)
	at java.base/java.lang.Class.forName(Class.java:474)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 67 common frames omitted
2024-05-21 22:21:47 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:21:47 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:21:47 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:21:47 [restartedMain] INFO  : Finished Spring Data repository scanning in 18 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:21:47 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:21:47 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:21:47 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:21:47 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:21:48 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@5ffbc742, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:21:48 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:21:48 [cluster-rtt-ClusterId{value='664d64cc21c7f04e1d5df85c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:42, serverValue:166}] to localhost:27017
2024-05-21 22:21:48 [cluster-ClusterId{value='664d64cc21c7f04e1d5df85c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:43, serverValue:167}] to localhost:27017
2024-05-21 22:21:48 [cluster-ClusterId{value='664d64cc21c7f04e1d5df85c', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1904000}
2024-05-21 22:21:48 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:21:48 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:21:48 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:21:48 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:21:48 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:21:48 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:21:48 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:21:48 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:21:48 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:21:48 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:21:48 [restartedMain] INFO  : Application is null : false
2024-05-21 22:21:48 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:21:48 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:21:48 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:21:48 [restartedMain] INFO  : The response status is 200
2024-05-21 22:21:48 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:21:48 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:21:48 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716348108394 with initial instances count: 2
2024-05-21 22:21:48 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:21:48 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716348108395, current=UP, previous=STARTING]
2024-05-21 22:21:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:21:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:21:48 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:21:48 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:21:48 [restartedMain] INFO  : Started FinalProjectApplication in 0.897 seconds (JVM running for 12051.739)
2024-05-21 22:21:48 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:22:58 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-21 22:22:58 [Thread-260] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:22:58 [Thread-260] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716348178910, current=DOWN, previous=UP]
2024-05-21 22:22:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:22:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:23:00 [Thread-260] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:23:03 [Thread-260] INFO  : Unregistering ...
2024-05-21 22:23:03 [Thread-260] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:23:03 [Thread-260] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:23:04 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:23:04 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:23:04 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:23:04 [restartedMain] INFO  : Finished Spring Data repository scanning in 17 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:23:04 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:23:04 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:23:04 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:23:04 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:23:04 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@5c399be3, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:23:04 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:23:04 [cluster-rtt-ClusterId{value='664d651821c7f04e1d5df85d', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:45, serverValue:168}] to localhost:27017
2024-05-21 22:23:04 [cluster-ClusterId{value='664d651821c7f04e1d5df85d', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:44, serverValue:169}] to localhost:27017
2024-05-21 22:23:04 [cluster-ClusterId{value='664d651821c7f04e1d5df85d', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1481500}
2024-05-21 22:23:04 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:23:04 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:23:04 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:23:05 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:23:05 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:23:05 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:23:05 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:23:05 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:23:05 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:23:05 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:23:05 [restartedMain] INFO  : Application is null : false
2024-05-21 22:23:05 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:23:05 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:23:05 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:23:05 [restartedMain] INFO  : The response status is 200
2024-05-21 22:23:05 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:23:05 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:23:05 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716348185093 with initial instances count: 3
2024-05-21 22:23:05 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:23:05 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716348185094, current=UP, previous=STARTING]
2024-05-21 22:23:05 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:23:05 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:23:05 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:23:05 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:23:05 [restartedMain] INFO  : Started FinalProjectApplication in 1.138 seconds (JVM running for 12128.486)
2024-05-21 22:23:05 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:24:08 [File Watcher] INFO  : Restarting due to 2 class path changes (0 additions, 2 deletions, 0 modifications)
2024-05-21 22:24:08 [Thread-278] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:24:08 [Thread-278] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716348248041, current=DOWN, previous=UP]
2024-05-21 22:24:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:24:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:24:10 [Thread-278] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:24:12 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:24:13 [Thread-278] INFO  : Unregistering ...
2024-05-21 22:24:13 [Thread-278] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:24:13 [Thread-278] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:24:13 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:24:13 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:24:13 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:24:13 [restartedMain] INFO  : Finished Spring Data repository scanning in 15 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:24:13 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:24:13 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:24:13 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:24:13 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:24:13 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@686c1709, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:24:13 [cluster-ClusterId{value='664d655d21c7f04e1d5df85e', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:46, serverValue:170}] to localhost:27017
2024-05-21 22:24:13 [cluster-rtt-ClusterId{value='664d655d21c7f04e1d5df85e', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:47, serverValue:171}] to localhost:27017
2024-05-21 22:24:13 [cluster-ClusterId{value='664d655d21c7f04e1d5df85e', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1375800}
2024-05-21 22:24:13 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:24:13 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:24:13 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:24:13 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:24:13 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:24:13 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:24:13 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:24:13 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:24:13 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:24:13 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:24:13 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:24:13 [restartedMain] INFO  : Application is null : false
2024-05-21 22:24:13 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:24:13 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:24:13 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:24:13 [restartedMain] INFO  : The response status is 200
2024-05-21 22:24:13 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:24:13 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:24:13 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716348253967 with initial instances count: 3
2024-05-21 22:24:13 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:24:13 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716348253968, current=UP, previous=STARTING]
2024-05-21 22:24:13 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:24:13 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:24:13 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:24:13 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:24:14 [restartedMain] INFO  : Started FinalProjectApplication in 0.87 seconds (JVM running for 12197.329)
2024-05-21 22:24:14 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:24:47 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:25:10 [File Watcher] INFO  : Restarting due to 2 class path changes (0 additions, 2 deletions, 0 modifications)
2024-05-21 22:25:10 [Thread-292] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:25:10 [Thread-292] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716348310745, current=DOWN, previous=UP]
2024-05-21 22:25:10 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:25:10 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:25:12 [Thread-292] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:25:15 [DiscoveryClient-0] WARN  : task supervisor shutting down, can't accept the task
2024-05-21 22:25:15 [Thread-292] INFO  : Unregistering ...
2024-05-21 22:25:15 [Thread-292] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:25:15 [Thread-292] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:25:16 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:25:16 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:25:16 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:25:16 [restartedMain] INFO  : Finished Spring Data repository scanning in 19 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:25:16 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:25:16 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:25:16 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:25:16 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:25:16 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@715e099d, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:25:16 [cluster-ClusterId{value='664d659c21c7f04e1d5df85f', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:49, serverValue:172}] to localhost:27017
2024-05-21 22:25:16 [cluster-rtt-ClusterId{value='664d659c21c7f04e1d5df85f', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:48, serverValue:173}] to localhost:27017
2024-05-21 22:25:16 [cluster-ClusterId{value='664d659c21c7f04e1d5df85f', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1350600}
2024-05-21 22:25:16 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:25:16 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:25:16 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:25:16 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:25:16 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:25:16 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:25:16 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:25:16 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:25:16 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:25:16 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:25:16 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:25:16 [restartedMain] INFO  : Application is null : false
2024-05-21 22:25:16 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:25:16 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:25:16 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:25:16 [restartedMain] INFO  : The response status is 200
2024-05-21 22:25:16 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:25:16 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:25:16 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716348316879 with initial instances count: 3
2024-05-21 22:25:16 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:25:16 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716348316880, current=UP, previous=STARTING]
2024-05-21 22:25:16 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:25:16 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:25:16 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:25:16 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:25:17 [restartedMain] INFO  : Started FinalProjectApplication in 1.11 seconds (JVM running for 12260.239)
2024-05-21 22:25:17 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:28:38 [File Watcher] INFO  : Restarting due to 9 class path changes (0 additions, 9 deletions, 0 modifications)
2024-05-21 22:28:38 [Thread-306] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:28:38 [Thread-306] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716348518601, current=DOWN, previous=UP]
2024-05-21 22:28:38 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:28:38 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:28:40 [Thread-306] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:28:43 [Thread-306] INFO  : Unregistering ...
2024-05-21 22:28:43 [Thread-306] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:28:43 [Thread-306] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:28:43 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:28:43 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:28:44 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:28:44 [restartedMain] INFO  : Finished Spring Data repository scanning in 19 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:28:44 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:28:44 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:28:44 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:28:44 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:28:44 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@48a43393, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:28:44 [cluster-rtt-ClusterId{value='664d666c21c7f04e1d5df860', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:51, serverValue:174}] to localhost:27017
2024-05-21 22:28:44 [cluster-ClusterId{value='664d666c21c7f04e1d5df860', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:50, serverValue:175}] to localhost:27017
2024-05-21 22:28:44 [cluster-ClusterId{value='664d666c21c7f04e1d5df860', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1653100}
2024-05-21 22:28:44 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:28:44 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:28:44 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:28:44 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:28:44 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:28:44 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:28:44 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:28:44 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:28:44 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:28:44 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:28:44 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:28:44 [restartedMain] INFO  : Application is null : false
2024-05-21 22:28:44 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:28:44 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:28:44 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:28:44 [restartedMain] INFO  : The response status is 200
2024-05-21 22:28:44 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:28:44 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:28:44 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716348524875 with initial instances count: 2
2024-05-21 22:28:44 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:28:44 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716348524875, current=UP, previous=STARTING]
2024-05-21 22:28:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:28:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:28:44 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:28:44 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:28:45 [restartedMain] INFO  : Started FinalProjectApplication in 1.235 seconds (JVM running for 12468.261)
2024-05-21 22:28:45 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:29:12 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:29:13 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-21 22:29:13 [Thread-320] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:29:13 [Thread-320] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716348553844, current=DOWN, previous=UP]
2024-05-21 22:29:13 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:29:13 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:29:15 [Thread-320] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:29:18 [Thread-320] INFO  : Unregistering ...
2024-05-21 22:29:18 [Thread-320] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:29:18 [Thread-320] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:29:19 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:29:19 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:29:19 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:29:19 [restartedMain] INFO  : Finished Spring Data repository scanning in 25 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:29:19 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:29:19 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:29:19 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:29:19 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:29:19 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1dcb63d7, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:29:19 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:29:19 [cluster-rtt-ClusterId{value='664d668f21c7f04e1d5df861', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:52, serverValue:176}] to localhost:27017
2024-05-21 22:29:19 [cluster-ClusterId{value='664d668f21c7f04e1d5df861', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:53, serverValue:177}] to localhost:27017
2024-05-21 22:29:19 [cluster-ClusterId{value='664d668f21c7f04e1d5df861', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1494900}
2024-05-21 22:29:19 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:29:19 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:29:19 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:29:19 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:29:19 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:29:19 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:29:19 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:29:19 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:29:19 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:29:19 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:29:19 [restartedMain] INFO  : Application is null : false
2024-05-21 22:29:19 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:29:19 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:29:19 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:29:19 [restartedMain] INFO  : The response status is 200
2024-05-21 22:29:19 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:29:19 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:29:19 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716348559823 with initial instances count: 3
2024-05-21 22:29:19 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:29:19 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716348559824, current=UP, previous=STARTING]
2024-05-21 22:29:19 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:29:19 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:29:19 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:29:19 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:29:19 [restartedMain] INFO  : Started FinalProjectApplication in 0.915 seconds (JVM running for 12503.17)
2024-05-21 22:29:19 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:29:39 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-21 22:29:39 [Thread-334] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:29:39 [Thread-334] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716348579610, current=DOWN, previous=UP]
2024-05-21 22:29:39 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:29:39 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:29:41 [Thread-334] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:29:44 [Thread-334] INFO  : Unregistering ...
2024-05-21 22:29:44 [Thread-334] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:29:44 [Thread-334] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:29:44 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:29:44 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:29:45 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:29:45 [restartedMain] INFO  : Finished Spring Data repository scanning in 17 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:29:45 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:29:45 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:29:45 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:29:45 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:29:45 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1456c2ae, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:29:45 [cluster-ClusterId{value='664d66a921c7f04e1d5df862', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:54, serverValue:179}] to localhost:27017
2024-05-21 22:29:45 [cluster-rtt-ClusterId{value='664d66a921c7f04e1d5df862', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:55, serverValue:178}] to localhost:27017
2024-05-21 22:29:45 [cluster-ClusterId{value='664d66a921c7f04e1d5df862', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1307000}
2024-05-21 22:29:45 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:29:45 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:29:45 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:29:45 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:29:45 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:29:45 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:29:45 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:29:45 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:29:45 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:29:45 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:29:45 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:29:45 [restartedMain] INFO  : Application is null : false
2024-05-21 22:29:45 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:29:45 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:29:45 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:29:45 [restartedMain] INFO  : The response status is 200
2024-05-21 22:29:45 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:29:45 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:29:45 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716348585630 with initial instances count: 3
2024-05-21 22:29:45 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:29:45 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716348585631, current=UP, previous=STARTING]
2024-05-21 22:29:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:29:45 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:29:45 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:29:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:29:45 [restartedMain] INFO  : Started FinalProjectApplication in 0.982 seconds (JVM running for 12528.988)
2024-05-21 22:29:45 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:29:47 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:31:09 [File Watcher] INFO  : Restarting due to 4 class path changes (0 additions, 4 deletions, 0 modifications)
2024-05-21 22:31:09 [Thread-348] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:31:09 [Thread-348] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716348669155, current=DOWN, previous=UP]
2024-05-21 22:31:09 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:31:09 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:31:11 [Thread-348] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:31:14 [Thread-348] INFO  : Unregistering ...
2024-05-21 22:31:14 [Thread-348] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:31:14 [Thread-348] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:31:14 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:31:14 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:31:14 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:31:14 [restartedMain] INFO  : Finished Spring Data repository scanning in 18 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:31:14 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:31:14 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:31:14 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:31:14 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:31:14 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@2f647d49, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:31:14 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:31:14 [cluster-ClusterId{value='664d670221c7f04e1d5df863', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:56, serverValue:180}] to localhost:27017
2024-05-21 22:31:14 [cluster-rtt-ClusterId{value='664d670221c7f04e1d5df863', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:57, serverValue:181}] to localhost:27017
2024-05-21 22:31:14 [cluster-ClusterId{value='664d670221c7f04e1d5df863', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1375300}
2024-05-21 22:31:14 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:31:14 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:31:14 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:31:15 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:31:15 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:31:15 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:31:15 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:31:15 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:31:15 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:31:15 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:31:15 [restartedMain] INFO  : Application is null : false
2024-05-21 22:31:15 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:31:15 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:31:15 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:31:15 [restartedMain] INFO  : The response status is 200
2024-05-21 22:31:15 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:31:15 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:31:15 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716348675180 with initial instances count: 2
2024-05-21 22:31:15 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:31:15 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716348675181, current=UP, previous=STARTING]
2024-05-21 22:31:15 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:31:15 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:31:15 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:31:15 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:31:15 [restartedMain] INFO  : Started FinalProjectApplication in 0.978 seconds (JVM running for 12618.526)
2024-05-21 22:31:15 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:33:47 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-21 22:33:47 [Thread-362] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:33:47 [Thread-362] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716348827765, current=DOWN, previous=UP]
2024-05-21 22:33:47 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:33:47 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:33:49 [Thread-362] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:33:52 [Thread-362] INFO  : Unregistering ...
2024-05-21 22:33:52 [Thread-362] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:33:52 [Thread-362] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:33:53 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:33:53 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:33:53 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:33:53 [restartedMain] INFO  : Finished Spring Data repository scanning in 13 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:33:53 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:33:53 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:33:53 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:33:53 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:33:53 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1cf0772, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:33:53 [cluster-ClusterId{value='664d67a121c7f04e1d5df864', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:59, serverValue:183}] to localhost:27017
2024-05-21 22:33:53 [cluster-rtt-ClusterId{value='664d67a121c7f04e1d5df864', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:58, serverValue:182}] to localhost:27017
2024-05-21 22:33:53 [cluster-ClusterId{value='664d67a121c7f04e1d5df864', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1216800}
2024-05-21 22:33:53 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:33:53 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:33:53 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:33:53 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:33:53 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:33:53 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:33:53 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:33:53 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:33:53 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:33:53 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:33:53 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:33:53 [restartedMain] INFO  : Application is null : false
2024-05-21 22:33:53 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:33:53 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:33:53 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:33:53 [restartedMain] INFO  : The response status is 200
2024-05-21 22:33:53 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:33:53 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:33:53 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716348833994 with initial instances count: 3
2024-05-21 22:33:53 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:33:53 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716348833995, current=UP, previous=STARTING]
2024-05-21 22:33:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:33:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:33:54 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:33:54 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:33:54 [restartedMain] INFO  : Started FinalProjectApplication in 1.169 seconds (JVM running for 12777.343)
2024-05-21 22:33:54 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:33:59 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-21 22:33:59 [Thread-376] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:33:59 [Thread-376] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716348839081, current=DOWN, previous=UP]
2024-05-21 22:33:59 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:33:59 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:34:01 [Thread-376] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:34:04 [Thread-376] INFO  : Unregistering ...
2024-05-21 22:34:04 [Thread-376] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:34:04 [Thread-376] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:34:04 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:34:04 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:34:04 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:34:04 [restartedMain] INFO  : Finished Spring Data repository scanning in 17 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:34:04 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:34:04 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:34:04 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:34:04 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:34:04 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@26c6d856, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:34:04 [cluster-ClusterId{value='664d67ac21c7f04e1d5df865', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:61, serverValue:184}] to localhost:27017
2024-05-21 22:34:04 [cluster-ClusterId{value='664d67ac21c7f04e1d5df865', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1054500}
2024-05-21 22:34:04 [cluster-rtt-ClusterId{value='664d67ac21c7f04e1d5df865', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:60, serverValue:185}] to localhost:27017
2024-05-21 22:34:04 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:34:04 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:34:04 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:34:04 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:34:04 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:34:04 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:34:04 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:34:04 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:34:04 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:34:04 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:34:04 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:34:04 [restartedMain] INFO  : Application is null : false
2024-05-21 22:34:04 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:34:04 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:34:04 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:34:04 [restartedMain] INFO  : The response status is 200
2024-05-21 22:34:04 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:34:04 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:34:04 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716348844833 with initial instances count: 3
2024-05-21 22:34:04 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:34:04 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716348844834, current=UP, previous=STARTING]
2024-05-21 22:34:04 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:34:04 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:34:04 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:34:04 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:34:04 [restartedMain] INFO  : Started FinalProjectApplication in 0.758 seconds (JVM running for 12788.172)
2024-05-21 22:34:04 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:34:12 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:34:47 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:35:00 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-21 22:35:00 [Thread-390] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:35:00 [Thread-390] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716348900843, current=DOWN, previous=UP]
2024-05-21 22:35:00 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:35:00 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:35:02 [Thread-390] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:35:05 [DiscoveryClient-0] WARN  : task supervisor shutting down, can't accept the task
2024-05-21 22:35:05 [Thread-390] INFO  : Unregistering ...
2024-05-21 22:35:05 [Thread-390] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:35:05 [Thread-390] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:35:06 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:35:06 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:35:06 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:35:06 [restartedMain] INFO  : Finished Spring Data repository scanning in 58 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:35:06 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:35:06 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:35:06 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:35:06 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:35:06 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@5b4027ec, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:35:06 [cluster-ClusterId{value='664d67ea21c7f04e1d5df866', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:62, serverValue:186}] to localhost:27017
2024-05-21 22:35:06 [cluster-rtt-ClusterId{value='664d67ea21c7f04e1d5df866', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:63, serverValue:187}] to localhost:27017
2024-05-21 22:35:06 [cluster-ClusterId{value='664d67ea21c7f04e1d5df866', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1217600}
2024-05-21 22:35:06 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:35:06 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:35:06 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:35:06 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:35:07 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:35:07 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:35:07 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:35:07 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:35:07 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:35:07 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:35:07 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:35:07 [restartedMain] INFO  : Application is null : false
2024-05-21 22:35:07 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:35:07 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:35:07 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:35:07 [restartedMain] INFO  : The response status is 200
2024-05-21 22:35:07 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:35:07 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:35:07 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716348907074 with initial instances count: 3
2024-05-21 22:35:07 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:35:07 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716348907075, current=UP, previous=STARTING]
2024-05-21 22:35:07 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:35:07 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:35:07 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:35:07 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:35:07 [restartedMain] INFO  : Started FinalProjectApplication in 1.204 seconds (JVM running for 12850.45)
2024-05-21 22:35:07 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:37:45 [File Watcher] INFO  : Restarting due to 2 class path changes (0 additions, 2 deletions, 0 modifications)
2024-05-21 22:37:45 [Thread-404] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:37:45 [Thread-404] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716349065332, current=DOWN, previous=UP]
2024-05-21 22:37:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:37:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:37:47 [Thread-404] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:37:50 [Thread-404] INFO  : Unregistering ...
2024-05-21 22:37:50 [Thread-404] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:37:50 [Thread-404] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:37:50 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:37:50 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:37:50 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:37:50 [restartedMain] INFO  : Finished Spring Data repository scanning in 18 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:37:50 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:37:50 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:37:50 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:37:50 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:37:50 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@7c097c24, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:37:50 [cluster-rtt-ClusterId{value='664d688e21c7f04e1d5df867', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:65, serverValue:189}] to localhost:27017
2024-05-21 22:37:50 [cluster-ClusterId{value='664d688e21c7f04e1d5df867', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:64, serverValue:188}] to localhost:27017
2024-05-21 22:37:50 [cluster-ClusterId{value='664d688e21c7f04e1d5df867', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1099000}
2024-05-21 22:37:50 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:37:50 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:37:50 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:37:51 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:37:51 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:37:51 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:37:51 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:37:51 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:37:51 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:37:51 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:37:51 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:37:51 [restartedMain] INFO  : Application is null : false
2024-05-21 22:37:51 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:37:51 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:37:51 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:37:51 [restartedMain] INFO  : The response status is 200
2024-05-21 22:37:51 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:37:51 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:37:51 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716349071280 with initial instances count: 3
2024-05-21 22:37:51 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:37:51 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716349071283, current=UP, previous=STARTING]
2024-05-21 22:37:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:37:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:37:51 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:37:51 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:37:51 [restartedMain] INFO  : Started FinalProjectApplication in 0.913 seconds (JVM running for 13014.626)
2024-05-21 22:37:51 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:39:12 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:39:21 [File Watcher] INFO  : Restarting due to 2 class path changes (0 additions, 2 deletions, 0 modifications)
2024-05-21 22:39:21 [Thread-418] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:39:21 [Thread-418] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716349161940, current=DOWN, previous=UP]
2024-05-21 22:39:21 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:39:21 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:39:24 [Thread-418] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:39:27 [Thread-418] INFO  : Unregistering ...
2024-05-21 22:39:27 [Thread-418] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:39:27 [Thread-418] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:39:27 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:39:27 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:39:27 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:39:27 [restartedMain] INFO  : Finished Spring Data repository scanning in 21 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:39:27 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:39:27 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:39:27 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:39:27 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:39:27 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@60ccc0bc, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:39:27 [cluster-rtt-ClusterId{value='664d68ef21c7f04e1d5df868', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:67, serverValue:190}] to localhost:27017
2024-05-21 22:39:27 [cluster-ClusterId{value='664d68ef21c7f04e1d5df868', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:66, serverValue:191}] to localhost:27017
2024-05-21 22:39:27 [cluster-ClusterId{value='664d68ef21c7f04e1d5df868', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1327500}
2024-05-21 22:39:27 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:39:27 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:39:27 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:39:27 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:39:27 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:39:27 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:39:27 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:39:27 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:39:27 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:39:27 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:39:27 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:39:27 [restartedMain] INFO  : Application is null : false
2024-05-21 22:39:27 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:39:27 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:39:27 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:39:27 [restartedMain] INFO  : The response status is 200
2024-05-21 22:39:27 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:39:27 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:39:27 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716349167836 with initial instances count: 3
2024-05-21 22:39:27 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:39:27 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716349167837, current=UP, previous=STARTING]
2024-05-21 22:39:27 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:39:27 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:39:27 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:39:27 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:39:27 [restartedMain] INFO  : Started FinalProjectApplication in 0.852 seconds (JVM running for 13111.177)
2024-05-21 22:39:27 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:39:47 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:41:38 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-21 22:41:38 [Thread-432] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:41:38 [Thread-432] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716349298864, current=DOWN, previous=UP]
2024-05-21 22:41:38 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:41:38 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:41:40 [Thread-432] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:41:43 [Thread-432] INFO  : Unregistering ...
2024-05-21 22:41:43 [Thread-432] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:41:43 [Thread-432] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:41:44 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:41:44 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:41:44 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:41:44 [restartedMain] INFO  : Finished Spring Data repository scanning in 13 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:41:44 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:41:44 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:41:44 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:41:44 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:41:44 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@625b93b0, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:41:44 [cluster-rtt-ClusterId{value='664d697821c7f04e1d5df869', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:69, serverValue:192}] to localhost:27017
2024-05-21 22:41:44 [cluster-ClusterId{value='664d697821c7f04e1d5df869', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:68, serverValue:193}] to localhost:27017
2024-05-21 22:41:44 [cluster-ClusterId{value='664d697821c7f04e1d5df869', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1277200}
2024-05-21 22:41:44 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:41:44 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:41:44 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:41:44 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:41:44 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:41:44 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:41:44 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:41:44 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:41:44 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:41:44 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:41:44 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:41:44 [restartedMain] INFO  : Application is null : false
2024-05-21 22:41:44 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:41:44 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:41:44 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:41:44 [restartedMain] INFO  : The response status is 200
2024-05-21 22:41:44 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:41:44 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:41:44 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716349304812 with initial instances count: 2
2024-05-21 22:41:44 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:41:44 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716349304814, current=UP, previous=STARTING]
2024-05-21 22:41:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:41:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:41:44 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:41:44 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:41:44 [restartedMain] INFO  : Started FinalProjectApplication in 0.959 seconds (JVM running for 13248.219)
2024-05-21 22:41:44 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:42:24 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-21 22:42:24 [Thread-446] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:42:24 [Thread-446] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716349344072, current=DOWN, previous=UP]
2024-05-21 22:42:24 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:42:24 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:42:26 [Thread-446] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:42:29 [Thread-446] INFO  : Unregistering ...
2024-05-21 22:42:29 [Thread-446] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:42:29 [Thread-446] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:42:29 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:42:29 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:42:29 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:42:29 [restartedMain] INFO  : Finished Spring Data repository scanning in 24 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:42:29 [restartedMain] INFO  : BeanFactory id=34a10837-68d2-387d-af79-5bffef690ab9
2024-05-21 22:42:29 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:42:29 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:42:29 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:42:29 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'domainBAccountService': Resolution of declared constructors on bean Class [project.application.service.domainService.DomainBAccountService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@2a5a5f6f] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/factory/BARepoFactory
2024-05-21 22:42:29 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-21 22:42:29 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'domainBAccountService': Resolution of declared constructors on bean Class [project.application.service.domainService.DomainBAccountService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@2a5a5f6f] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/factory/BARepoFactory
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'domainBAccountService': Resolution of declared constructors on bean Class [project.application.service.domainService.DomainBAccountService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@2a5a5f6f] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/factory/BARepoFactory
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 22 common frames omitted
Caused by: java.lang.NoClassDefFoundError: project/infrastructure/factory/BARepoFactory
	at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3429)
	at java.base/java.lang.Class.getDeclaredConstructors(Class.java:2608)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:313)
	... 35 common frames omitted
Caused by: java.lang.ClassNotFoundException: project.infrastructure.factory.BARepoFactory
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:495)
	at java.base/java.lang.Class.forName(Class.java:474)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 39 common frames omitted
2024-05-21 22:43:07 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:43:07 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:43:08 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:43:08 [restartedMain] INFO  : Finished Spring Data repository scanning in 34 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:43:08 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:43:08 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:43:08 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:43:08 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:43:08 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@80bb392, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:43:08 [cluster-ClusterId{value='664d69cc21c7f04e1d5df86a', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:70, serverValue:194}] to localhost:27017
2024-05-21 22:43:08 [cluster-rtt-ClusterId{value='664d69cc21c7f04e1d5df86a', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:71, serverValue:195}] to localhost:27017
2024-05-21 22:43:08 [cluster-ClusterId{value='664d69cc21c7f04e1d5df86a', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1574200}
2024-05-21 22:43:08 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:43:08 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:43:08 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:43:08 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:43:08 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:43:08 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:43:08 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:43:08 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:43:08 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:43:08 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:43:08 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:43:08 [restartedMain] INFO  : Application is null : false
2024-05-21 22:43:08 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:43:08 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:43:08 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:43:08 [restartedMain] INFO  : The response status is 200
2024-05-21 22:43:08 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:43:08 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:43:08 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716349388968 with initial instances count: 2
2024-05-21 22:43:08 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:43:08 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716349388968, current=UP, previous=STARTING]
2024-05-21 22:43:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:43:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:43:08 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:43:08 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:43:09 [restartedMain] INFO  : Started FinalProjectApplication in 1.784 seconds (JVM running for 13332.327)
2024-05-21 22:43:09 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:43:15 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-21 22:43:15 [Thread-460] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:43:15 [Thread-460] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716349395329, current=DOWN, previous=UP]
2024-05-21 22:43:15 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:43:15 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:43:17 [Thread-460] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:43:20 [Thread-460] INFO  : Unregistering ...
2024-05-21 22:43:20 [Thread-460] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:43:20 [Thread-460] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:43:20 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:43:20 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:43:20 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:43:20 [restartedMain] INFO  : Finished Spring Data repository scanning in 14 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:43:20 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:43:20 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:43:20 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:43:20 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:43:20 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@2f6e5175, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:43:20 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:43:20 [cluster-rtt-ClusterId{value='664d69d821c7f04e1d5df86b', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:73, serverValue:196}] to localhost:27017
2024-05-21 22:43:20 [cluster-ClusterId{value='664d69d821c7f04e1d5df86b', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:72, serverValue:197}] to localhost:27017
2024-05-21 22:43:20 [cluster-ClusterId{value='664d69d821c7f04e1d5df86b', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1484500}
2024-05-21 22:43:20 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:43:20 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:43:21 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:43:21 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:43:21 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:43:21 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:43:21 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:43:21 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:43:21 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:43:21 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:43:21 [restartedMain] INFO  : Application is null : false
2024-05-21 22:43:21 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:43:21 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:43:21 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:43:21 [restartedMain] INFO  : The response status is 200
2024-05-21 22:43:21 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:43:21 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:43:21 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716349401236 with initial instances count: 3
2024-05-21 22:43:21 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:43:21 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716349401236, current=UP, previous=STARTING]
2024-05-21 22:43:21 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:43:21 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:43:21 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:43:21 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:43:21 [restartedMain] INFO  : Started FinalProjectApplication in 0.812 seconds (JVM running for 13344.58)
2024-05-21 22:43:21 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:43:30 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-21 22:43:30 [Thread-478] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:43:30 [Thread-478] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716349410816, current=DOWN, previous=UP]
2024-05-21 22:43:30 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:43:30 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:43:32 [Thread-478] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:43:35 [Thread-478] INFO  : Unregistering ...
2024-05-21 22:43:35 [Thread-478] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:43:35 [Thread-478] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:43:36 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:43:36 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:43:36 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:43:36 [restartedMain] INFO  : Finished Spring Data repository scanning in 12 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:43:36 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:43:36 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:43:36 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:43:36 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:43:36 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@69df2bc0, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:43:36 [cluster-ClusterId{value='664d69e821c7f04e1d5df86c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:74, serverValue:199}] to localhost:27017
2024-05-21 22:43:36 [cluster-ClusterId{value='664d69e821c7f04e1d5df86c', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1253000}
2024-05-21 22:43:36 [cluster-rtt-ClusterId{value='664d69e821c7f04e1d5df86c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:75, serverValue:198}] to localhost:27017
2024-05-21 22:43:36 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:43:36 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:43:36 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:43:36 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:43:36 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:43:36 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:43:36 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:43:36 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:43:36 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:43:36 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:43:36 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:43:36 [restartedMain] INFO  : Application is null : false
2024-05-21 22:43:36 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:43:36 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:43:36 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:43:36 [restartedMain] INFO  : The response status is 200
2024-05-21 22:43:36 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:43:36 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:43:36 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716349416648 with initial instances count: 3
2024-05-21 22:43:36 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:43:36 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716349416648, current=UP, previous=STARTING]
2024-05-21 22:43:36 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:43:36 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:43:36 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:43:36 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:43:36 [restartedMain] INFO  : Started FinalProjectApplication in 0.773 seconds (JVM running for 13359.988)
2024-05-21 22:43:36 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:44:12 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:44:33 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-21 22:44:33 [Thread-492] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:44:33 [Thread-492] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716349473053, current=DOWN, previous=UP]
2024-05-21 22:44:33 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:44:33 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:44:35 [Thread-492] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:44:38 [DiscoveryClient-0] WARN  : task supervisor shutting down, can't accept the task
2024-05-21 22:44:38 [Thread-492] INFO  : Unregistering ...
2024-05-21 22:44:38 [Thread-492] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:44:38 [Thread-492] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:44:38 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:44:38 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:44:38 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:44:38 [restartedMain] INFO  : Finished Spring Data repository scanning in 26 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:44:38 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:44:38 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:44:38 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:44:38 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:44:38 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@2fcd1ac2, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:44:38 [cluster-rtt-ClusterId{value='664d6a2621c7f04e1d5df86d', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:77, serverValue:200}] to localhost:27017
2024-05-21 22:44:38 [cluster-ClusterId{value='664d6a2621c7f04e1d5df86d', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:76, serverValue:201}] to localhost:27017
2024-05-21 22:44:38 [cluster-ClusterId{value='664d6a2621c7f04e1d5df86d', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1768100}
2024-05-21 22:44:38 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:44:38 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:44:38 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:44:38 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:44:39 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:44:39 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:44:39 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:44:39 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:44:39 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:44:39 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:44:39 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:44:39 [restartedMain] INFO  : Application is null : false
2024-05-21 22:44:39 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:44:39 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:44:39 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:44:39 [restartedMain] INFO  : The response status is 200
2024-05-21 22:44:39 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:44:39 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:44:39 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716349479103 with initial instances count: 3
2024-05-21 22:44:39 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:44:39 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716349479104, current=UP, previous=STARTING]
2024-05-21 22:44:39 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:44:39 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:44:39 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:44:39 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:44:39 [restartedMain] INFO  : Started FinalProjectApplication in 0.963 seconds (JVM running for 13422.454)
2024-05-21 22:44:39 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:44:47 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:45:53 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-21 22:45:53 [Thread-506] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:45:53 [Thread-506] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716349553485, current=DOWN, previous=UP]
2024-05-21 22:45:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:45:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:45:55 [Thread-506] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:45:58 [Thread-506] INFO  : Unregistering ...
2024-05-21 22:45:58 [Thread-506] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:45:58 [Thread-506] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:45:59 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:45:59 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:45:59 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:45:59 [restartedMain] INFO  : Finished Spring Data repository scanning in 13 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:45:59 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:45:59 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:45:59 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:45:59 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:45:59 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@54a14859, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:45:59 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:45:59 [cluster-rtt-ClusterId{value='664d6a7721c7f04e1d5df86e', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:79, serverValue:202}] to localhost:27017
2024-05-21 22:45:59 [cluster-ClusterId{value='664d6a7721c7f04e1d5df86e', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:78, serverValue:203}] to localhost:27017
2024-05-21 22:45:59 [cluster-ClusterId{value='664d6a7721c7f04e1d5df86e', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=21373300}
2024-05-21 22:45:59 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:45:59 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:45:59 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:46:00 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:46:00 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:46:00 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:46:00 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:46:00 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:46:00 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:46:00 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:46:00 [restartedMain] INFO  : Application is null : false
2024-05-21 22:46:00 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:46:00 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:46:00 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:46:00 [restartedMain] INFO  : The response status is 200
2024-05-21 22:46:00 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:46:00 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:46:00 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716349560174 with initial instances count: 3
2024-05-21 22:46:00 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:46:00 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716349560175, current=UP, previous=STARTING]
2024-05-21 22:46:00 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:46:00 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:46:00 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:46:00 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:46:00 [restartedMain] INFO  : Started FinalProjectApplication in 1.626 seconds (JVM running for 13503.541)
2024-05-21 22:46:00 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:46:29 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-21 22:46:29 [Thread-520] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:46:29 [Thread-520] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716349589165, current=DOWN, previous=UP]
2024-05-21 22:46:29 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:46:29 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:46:31 [Thread-520] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:46:34 [Thread-520] INFO  : Unregistering ...
2024-05-21 22:46:34 [Thread-520] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - deregister  status: 200
2024-05-21 22:46:34 [Thread-520] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:46:34 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:46:34 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:46:34 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:46:34 [restartedMain] INFO  : Finished Spring Data repository scanning in 12 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:46:34 [restartedMain] INFO  : BeanFactory id=ee48dc6a-d0a3-336e-8039-f19accfae938
2024-05-21 22:46:34 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:46:34 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:46:34 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:46:34 [restartedMain] WARN  : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@3bbd8e8e] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
2024-05-21 22:46:34 [restartedMain] INFO  : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-05-21 22:46:34 [restartedMain] ERROR : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bankAccountController' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\controller\BankAccountController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@3bbd8e8e] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:929)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at project.FinalProjectApplication.main(FinalProjectApplication.java:16)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'domainBAccountService' defined in file [C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes\project\application\service\domainService\DomainBAccountService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@3bbd8e8e] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 22 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'BARepoFactory': Resolution of declared constructors on bean Class [project.infrastructure.factory.BARepoFactory] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@3bbd8e8e] failed; nested exception is java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 36 common frames omitted
Caused by: java.lang.NoClassDefFoundError: project/infrastructure/adapters/CurrAccAdapter
	at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3429)
	at java.base/java.lang.Class.getDeclaredConstructors(Class.java:2608)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:313)
	... 49 common frames omitted
Caused by: java.lang.ClassNotFoundException: project.infrastructure.adapters.CurrAccAdapter
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:495)
	at java.base/java.lang.Class.forName(Class.java:474)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 53 common frames omitted
2024-05-21 22:47:52 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 17152 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 22:47:52 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 22:47:52 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 22:47:52 [restartedMain] INFO  : Finished Spring Data repository scanning in 11 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-21 22:47:52 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-21 22:47:52 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:47:52 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:47:52 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 22:47:52 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@a3b5165, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6e32bdb]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 22:47:52 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:47:52 [cluster-rtt-ClusterId{value='664d6ae821c7f04e1d5df86f', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:80, serverValue:204}] to localhost:27017
2024-05-21 22:47:52 [cluster-ClusterId{value='664d6ae821c7f04e1d5df86f', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:81, serverValue:205}] to localhost:27017
2024-05-21 22:47:52 [cluster-ClusterId{value='664d6ae821c7f04e1d5df86f', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1047400}
2024-05-21 22:47:52 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 22:47:52 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 22:47:52 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 22:47:53 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 22:47:53 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 22:47:53 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 22:47:53 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 22:47:53 [restartedMain] INFO  : Disable delta property : false
2024-05-21 22:47:53 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 22:47:53 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 22:47:53 [restartedMain] INFO  : Application is null : false
2024-05-21 22:47:53 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 22:47:53 [restartedMain] INFO  : Application version is -1: true
2024-05-21 22:47:53 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 22:47:53 [restartedMain] INFO  : The response status is 200
2024-05-21 22:47:53 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 22:47:53 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 22:47:53 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716349673031 with initial instances count: 2
2024-05-21 22:47:53 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-21 22:47:53 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716349673032, current=UP, previous=STARTING]
2024-05-21 22:47:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:47:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:47:53 [restartedMain] INFO  : Netty started on port 8080
2024-05-21 22:47:53 [restartedMain] INFO  : Updating port to 8080
2024-05-21 22:47:53 [restartedMain] INFO  : Started FinalProjectApplication in 0.729 seconds (JVM running for 13616.381)
2024-05-21 22:47:53 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 22:47:56 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 22:47:56 [SpringApplicationShutdownHook] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 22:47:56 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716349676042, current=DOWN, previous=UP]
2024-05-21 22:47:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080: registering service...
2024-05-21 22:47:56 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716349676031, current=DOWN, previous=UP]
2024-05-21 22:47:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 22:47:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - registration status: 204
2024-05-21 22:47:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 22:47:56 [SpringApplicationShutdownHook] INFO  : Unregistering application CLIENTSERVICE with eureka with status DOWN
2024-05-21 22:47:56 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716349676077, current=DOWN, previous=UP]
2024-05-21 22:47:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083: registering service...
2024-05-21 22:47:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083 - registration status: 204
2024-05-21 22:47:57 [DiscoveryClient-HeartbeatExecutor-0] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on PUT request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Software caused connection abort: recv failed; nested exception is java.net.SocketException: Software caused connection abort: recv failed stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Software caused connection abort: recv failed; nested exception is java.net.SocketException: Software caused connection abort: recv failed
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.net.SocketException: Software caused connection abort: recv failed
	at java.base/java.net.SocketInputStream.socketRead0(Native Method)
	at java.base/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:168)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
	at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:137)
	at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:153)
	at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:280)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:163)
	at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:157)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:272)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 19 more

2024-05-21 22:47:57 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getDelta(RestTemplateEurekaHttpClient.java:155)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 22 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.connect0(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.base/java.net.Socket.connect(Socket.java:608)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 35 more

2024-05-21 22:47:57 [DiscoveryClient-HeartbeatExecutor-0] WARN  : Request execution failed with message: I/O error on PUT request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Software caused connection abort: recv failed; nested exception is java.net.SocketException: Software caused connection abort: recv failed
2024-05-21 22:47:57 [DiscoveryClient-CacheRefreshExecutor-0] WARN  : Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 22:47:57 [DiscoveryClient-HeartbeatExecutor-0] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 20 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.connect0(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.base/java.net.Socket.connect(Socket.java:608)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 33 more

2024-05-21 22:47:57 [DiscoveryClient-HeartbeatExecutor-0] WARN  : Request execution failed with message: I/O error on PUT request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 22:47:57 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getDelta(RestTemplateEurekaHttpClient.java:155)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 23 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.connect0(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.base/java.net.Socket.connect(Socket.java:608)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 36 more

2024-05-21 22:47:57 [DiscoveryClient-CacheRefreshExecutor-0] WARN  : Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 22:47:57 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)

2024-05-21 22:47:57 [DiscoveryClient-HeartbeatExecutor-0] ERROR : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2024-05-21 22:47:58 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:47:58 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:47:58 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 22:48:01 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 22:48:01 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService:8080": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService:8080": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 37 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 50 more

2024-05-21 22:48:01 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService:8080": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 22:48:01 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService:8080": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService:8080": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 38 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 51 more

2024-05-21 22:48:01 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService:8080": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 22:48:01 [SpringApplicationShutdownHook] ERROR : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService:8080 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 22:48:01 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:48:01 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 22:48:01 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 37 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 50 more

2024-05-21 22:48:01 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 22:48:01 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 38 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 51 more

2024-05-21 22:48:01 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 22:48:01 [SpringApplicationShutdownHook] ERROR : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 22:48:01 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 22:48:01 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 22:48:01 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 40 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.connect0(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.base/java.net.Socket.connect(Socket.java:608)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 53 more

2024-05-21 22:48:01 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 22:48:01 [SpringApplicationShutdownHook] ERROR : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
2024-05-21 22:48:01 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
