2024-05-23 00:01:45 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 00:06:45 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 00:11:45 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 00:16:45 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 00:21:45 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 00:26:45 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 00:31:45 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 00:36:45 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 00:41:45 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 00:46:45 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 00:51:45 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 00:56:45 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 01:01:45 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 01:06:45 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 01:11:45 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 01:16:45 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 09:20:46 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 09:25:46 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 09:30:46 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 09:35:46 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 09:40:46 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 09:45:36 [SpringApplicationShutdownHook] INFO  : Unregistering application CLIENTSERVICE with eureka with status DOWN
2024-05-23 09:45:36 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716475536390, current=DOWN, previous=UP]
2024-05-23 09:45:36 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083: registering service...
2024-05-23 09:45:36 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083 - registration status: 204
2024-05-23 09:45:38 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-23 09:45:41 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-23 09:45:41 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 39 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.connect0(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.base/java.net.Socket.connect(Socket.java:608)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 52 more

2024-05-23 09:45:41 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-23 09:45:41 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 40 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.connect0(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.base/java.net.Socket.connect(Socket.java:608)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 53 more

2024-05-23 09:45:41 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-23 09:45:41 [SpringApplicationShutdownHook] ERROR : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
2024-05-23 09:45:41 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-23 17:24:03 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 10504 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalClient\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-23 17:24:03 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-23 17:24:03 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-23 17:24:03 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-23 17:24:04 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-23 17:24:04 [restartedMain] INFO  : Finished Spring Data repository scanning in 61 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-23 17:24:04 [restartedMain] INFO  : BeanFactory id=793773eb-fca8-379f-a0ba-c7b18fda5e40
2024-05-23 17:24:04 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 17:24:04 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 17:24:04 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 17:24:04 [restartedMain] INFO  : Tomcat initialized with port(s): 8083 (http)
2024-05-23 17:24:04 [restartedMain] INFO  : Initializing ProtocolHandler ["http-nio-8083"]
2024-05-23 17:24:04 [restartedMain] INFO  : Starting service [Tomcat]
2024-05-23 17:24:04 [restartedMain] INFO  : Starting Servlet engine: [Apache Tomcat/9.0.83]
2024-05-23 17:24:05 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@16f6733e, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@8d80679]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-23 17:24:05 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-23 17:24:05 [cluster-rtt-ClusterId{value='664fc205d88af70b57b8b0c8', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:2}] to localhost:27017
2024-05-23 17:24:05 [cluster-ClusterId{value='664fc205d88af70b57b8b0c8', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:1}] to localhost:27017
2024-05-23 17:24:05 [cluster-ClusterId{value='664fc205d88af70b57b8b0c8', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=65954700}
2024-05-23 17:24:05 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-23 17:24:05 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-23 17:24:05 [nioEventLoopGroup-2-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:3}] to localhost:27017
2024-05-23 17:24:06 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-23 17:24:07 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-23 17:24:07 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-23 17:24:07 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-23 17:24:07 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-23 17:24:07 [restartedMain] INFO  : Disable delta property : false
2024-05-23 17:24:07 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-23 17:24:07 [restartedMain] INFO  : Force full registry fetch : false
2024-05-23 17:24:07 [restartedMain] INFO  : Application is null : false
2024-05-23 17:24:07 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-23 17:24:07 [restartedMain] INFO  : Application version is -1: true
2024-05-23 17:24:07 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-23 17:24:08 [restartedMain] INFO  : The response status is 200
2024-05-23 17:24:08 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-23 17:24:08 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-23 17:24:08 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716503048231 with initial instances count: 0
2024-05-23 17:24:08 [restartedMain] INFO  : Registering application CLIENTSERVICE with eureka with status UP
2024-05-23 17:24:08 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716503048236, current=UP, previous=STARTING]
2024-05-23 17:24:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083: registering service...
2024-05-23 17:24:08 [restartedMain] INFO  : Starting ProtocolHandler ["http-nio-8083"]
2024-05-23 17:24:08 [restartedMain] INFO  : Tomcat started on port(s): 8083 (http) with context path ''
2024-05-23 17:24:08 [restartedMain] INFO  : Updating port to 8083
2024-05-23 17:24:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083 - registration status: 204
2024-05-23 17:24:08 [restartedMain] INFO  : Started FinalProjectApplication in 5.889 seconds (JVM running for 7.058)
2024-05-23 17:24:38 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Disable delta property : false
2024-05-23 17:24:38 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Single vip registry refresh property : null
2024-05-23 17:24:38 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Force full registry fetch : false
2024-05-23 17:24:38 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application is null : false
2024-05-23 17:24:38 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Registered Applications size is zero : true
2024-05-23 17:24:38 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application version is -1: false
2024-05-23 17:24:38 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Getting all instance registry info from the eureka server
2024-05-23 17:24:38 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : The response status is 200
2024-05-23 17:25:15 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 12140 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-23 17:25:15 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-23 17:25:15 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-23 17:25:15 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-23 17:25:16 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-23 17:25:16 [restartedMain] INFO  : Finished Spring Data repository scanning in 112 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-23 17:25:16 [restartedMain] INFO  : BeanFactory id=a1e38bde-9f06-3be3-aa6c-98a8147f649e
2024-05-23 17:25:16 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 17:25:16 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 17:25:16 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 17:25:17 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@73f69ad3, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3b1e52e9]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-23 17:25:17 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3e1f8001, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3b1e52e9]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-23 17:25:17 [cluster-ClusterId{value='664fc24dde3dcc6e7437d4e2', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:3, serverValue:7}] to localhost:27017
2024-05-23 17:25:17 [cluster-rtt-ClusterId{value='664fc24dde3dcc6e7437d4e2', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:6}] to localhost:27017
2024-05-23 17:25:17 [cluster-rtt-ClusterId{value='664fc24cde3dcc6e7437d4e1', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:8}] to localhost:27017
2024-05-23 17:25:17 [cluster-ClusterId{value='664fc24cde3dcc6e7437d4e1', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:9}] to localhost:27017
2024-05-23 17:25:17 [cluster-ClusterId{value='664fc24dde3dcc6e7437d4e2', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=47146200}
2024-05-23 17:25:17 [cluster-ClusterId{value='664fc24cde3dcc6e7437d4e1', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=47135300}
2024-05-23 17:25:17 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-23 17:25:17 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-23 17:25:17 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-23 17:25:17 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-23 17:25:17 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-23 17:25:18 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-23 17:25:18 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-23 17:25:18 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-23 17:25:18 [restartedMain] INFO  : Disable delta property : false
2024-05-23 17:25:18 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-23 17:25:18 [restartedMain] INFO  : Force full registry fetch : false
2024-05-23 17:25:18 [restartedMain] INFO  : Application is null : false
2024-05-23 17:25:18 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-23 17:25:18 [restartedMain] INFO  : Application version is -1: true
2024-05-23 17:25:18 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-23 17:25:18 [restartedMain] INFO  : The response status is 200
2024-05-23 17:25:18 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-23 17:25:18 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-23 17:25:18 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716503118332 with initial instances count: 2
2024-05-23 17:25:18 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-23 17:25:18 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716503118334, current=UP, previous=STARTING]
2024-05-23 17:25:18 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-23 17:25:18 [restartedMain] INFO  : Netty started on port 8081
2024-05-23 17:25:18 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-23 17:25:18 [restartedMain] INFO  : Updating port to 8081
2024-05-23 17:25:18 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.341 seconds (JVM running for 4.181)
2024-05-23 17:26:11 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:5, serverValue:10}] to localhost:27017
2024-05-23 17:29:07 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 17:30:18 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 17:34:07 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 17:35:18 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 17:38:14 [File Watcher] INFO  : Restarting due to 2 class path changes (0 additions, 2 deletions, 0 modifications)
2024-05-23 17:38:14 [Thread-1] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-23 17:38:14 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716503894429, current=DOWN, previous=UP]
2024-05-23 17:38:14 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-23 17:38:14 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-23 17:38:16 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-23 17:38:19 [DiscoveryClient-0] WARN  : task supervisor shutting down, can't accept the task
2024-05-23 17:38:19 [Thread-1] INFO  : Unregistering ...
2024-05-23 17:38:19 [Thread-1] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-23 17:38:19 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-23 17:38:19 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 12140 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-23 17:38:19 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-23 17:38:20 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-23 17:38:20 [restartedMain] INFO  : Finished Spring Data repository scanning in 21 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-23 17:38:20 [restartedMain] INFO  : BeanFactory id=a1e38bde-9f06-3be3-aa6c-98a8147f649e
2024-05-23 17:38:20 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 17:38:20 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 17:38:20 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 17:38:20 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@38d2a78d, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3b1e52e9]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-23 17:38:20 [cluster-ClusterId{value='664fc55cde3dcc6e7437d4e7', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:30}] to localhost:27017
2024-05-23 17:38:20 [cluster-rtt-ClusterId{value='664fc55cde3dcc6e7437d4e7', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:29}] to localhost:27017
2024-05-23 17:38:20 [cluster-ClusterId{value='664fc55cde3dcc6e7437d4e7', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2074200}
2024-05-23 17:38:20 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1135bcf, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3b1e52e9]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-23 17:38:20 [cluster-rtt-ClusterId{value='664fc55cde3dcc6e7437d4e8', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:9, serverValue:31}] to localhost:27017
2024-05-23 17:38:20 [cluster-ClusterId{value='664fc55cde3dcc6e7437d4e8', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:8, serverValue:32}] to localhost:27017
2024-05-23 17:38:20 [cluster-ClusterId{value='664fc55cde3dcc6e7437d4e8', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2570700}
2024-05-23 17:38:20 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-23 17:38:20 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-23 17:38:20 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-23 17:38:21 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-23 17:38:21 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-23 17:38:21 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-23 17:38:21 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-23 17:38:21 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-23 17:38:21 [restartedMain] INFO  : Disable delta property : false
2024-05-23 17:38:21 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-23 17:38:21 [restartedMain] INFO  : Force full registry fetch : false
2024-05-23 17:38:21 [restartedMain] INFO  : Application is null : false
2024-05-23 17:38:21 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-23 17:38:21 [restartedMain] INFO  : Application version is -1: true
2024-05-23 17:38:21 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-23 17:38:21 [restartedMain] INFO  : The response status is 200
2024-05-23 17:38:21 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-23 17:38:21 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-23 17:38:21 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716503901317 with initial instances count: 3
2024-05-23 17:38:21 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-23 17:38:21 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716503901318, current=UP, previous=STARTING]
2024-05-23 17:38:21 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-23 17:38:21 [restartedMain] INFO  : Netty started on port 8081
2024-05-23 17:38:21 [restartedMain] INFO  : Updating port to 8081
2024-05-23 17:38:21 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-23 17:38:21 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.847 seconds (JVM running for 787.212)
2024-05-23 17:38:21 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-23 17:38:22 [File Watcher] INFO  : Restarting due to 2 class path changes (2 additions, 0 deletions, 0 modifications)
2024-05-23 17:38:22 [Thread-15] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-23 17:38:22 [Thread-15] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716503902339, current=DOWN, previous=UP]
2024-05-23 17:38:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-23 17:38:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-23 17:38:24 [Thread-15] INFO  : Shutting down DiscoveryClient ...
2024-05-23 17:38:27 [Thread-15] INFO  : Unregistering ...
2024-05-23 17:38:27 [Thread-15] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-23 17:38:27 [Thread-15] INFO  : Completed shut down of DiscoveryClient
2024-05-23 17:38:27 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 12140 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-23 17:38:27 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-23 17:38:27 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-23 17:38:27 [restartedMain] INFO  : Finished Spring Data repository scanning in 23 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-23 17:38:27 [restartedMain] INFO  : BeanFactory id=a1e38bde-9f06-3be3-aa6c-98a8147f649e
2024-05-23 17:38:27 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 17:38:27 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 17:38:27 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 17:38:28 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@67739092, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3b1e52e9]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-23 17:38:28 [cluster-rtt-ClusterId{value='664fc564de3dcc6e7437d4e9', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:11, serverValue:34}] to localhost:27017
2024-05-23 17:38:28 [cluster-ClusterId{value='664fc564de3dcc6e7437d4e9', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:10, serverValue:33}] to localhost:27017
2024-05-23 17:38:28 [cluster-ClusterId{value='664fc564de3dcc6e7437d4e9', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1487700}
2024-05-23 17:38:28 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@2c832a58, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3b1e52e9]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-23 17:38:28 [cluster-rtt-ClusterId{value='664fc564de3dcc6e7437d4ea', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:13, serverValue:35}] to localhost:27017
2024-05-23 17:38:28 [cluster-ClusterId{value='664fc564de3dcc6e7437d4ea', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:12, serverValue:36}] to localhost:27017
2024-05-23 17:38:28 [cluster-ClusterId{value='664fc564de3dcc6e7437d4ea', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2104500}
2024-05-23 17:38:28 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-23 17:38:28 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-23 17:38:28 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-23 17:38:28 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-23 17:38:28 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-23 17:38:28 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-23 17:38:28 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-23 17:38:28 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-23 17:38:28 [restartedMain] INFO  : Disable delta property : false
2024-05-23 17:38:28 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-23 17:38:28 [restartedMain] INFO  : Force full registry fetch : false
2024-05-23 17:38:28 [restartedMain] INFO  : Application is null : false
2024-05-23 17:38:28 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-23 17:38:28 [restartedMain] INFO  : Application version is -1: true
2024-05-23 17:38:28 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-23 17:38:28 [restartedMain] INFO  : The response status is 200
2024-05-23 17:38:28 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-23 17:38:28 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-23 17:38:28 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716503908507 with initial instances count: 3
2024-05-23 17:38:28 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-23 17:38:28 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716503908507, current=UP, previous=STARTING]
2024-05-23 17:38:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-23 17:38:28 [restartedMain] INFO  : Netty started on port 8081
2024-05-23 17:38:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-23 17:38:28 [restartedMain] INFO  : Updating port to 8081
2024-05-23 17:38:28 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.145 seconds (JVM running for 794.378)
2024-05-23 17:38:28 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-23 17:39:07 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 17:43:28 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 17:44:07 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 17:48:28 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 17:49:07 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 17:53:28 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 17:54:07 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 17:54:22 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-23 17:54:22 [Thread-22] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-23 17:54:22 [Thread-22] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716504862709, current=DOWN, previous=UP]
2024-05-23 17:54:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-23 17:54:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-23 17:54:24 [Thread-22] INFO  : Shutting down DiscoveryClient ...
2024-05-23 17:54:27 [Thread-22] INFO  : Unregistering ...
2024-05-23 17:54:27 [Thread-22] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-23 17:54:27 [Thread-22] INFO  : Completed shut down of DiscoveryClient
2024-05-23 17:54:28 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 12140 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-23 17:54:28 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-23 17:54:28 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-23 17:54:28 [restartedMain] INFO  : Finished Spring Data repository scanning in 22 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-23 17:54:28 [restartedMain] INFO  : BeanFactory id=a1e38bde-9f06-3be3-aa6c-98a8147f649e
2024-05-23 17:54:28 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 17:54:28 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 17:54:28 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 17:54:28 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@4f6d1fd5, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3b1e52e9]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-23 17:54:28 [cluster-ClusterId{value='664fc924de3dcc6e7437d4eb', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:14, serverValue:37}] to localhost:27017
2024-05-23 17:54:28 [cluster-rtt-ClusterId{value='664fc924de3dcc6e7437d4eb', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:15, serverValue:38}] to localhost:27017
2024-05-23 17:54:28 [cluster-ClusterId{value='664fc924de3dcc6e7437d4eb', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3104600}
2024-05-23 17:54:28 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@528d5a40, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3b1e52e9]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-23 17:54:28 [cluster-ClusterId{value='664fc924de3dcc6e7437d4ec', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:16, serverValue:39}] to localhost:27017
2024-05-23 17:54:28 [cluster-ClusterId{value='664fc924de3dcc6e7437d4ec', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1575600}
2024-05-23 17:54:28 [cluster-rtt-ClusterId{value='664fc924de3dcc6e7437d4ec', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:17, serverValue:40}] to localhost:27017
2024-05-23 17:54:28 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-23 17:54:28 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-23 17:54:28 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-23 17:54:28 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-23 17:54:29 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-23 17:54:29 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-23 17:54:29 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-23 17:54:29 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-23 17:54:29 [restartedMain] INFO  : Disable delta property : false
2024-05-23 17:54:29 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-23 17:54:29 [restartedMain] INFO  : Force full registry fetch : false
2024-05-23 17:54:29 [restartedMain] INFO  : Application is null : false
2024-05-23 17:54:29 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-23 17:54:29 [restartedMain] INFO  : Application version is -1: true
2024-05-23 17:54:29 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-23 17:54:29 [restartedMain] INFO  : The response status is 200
2024-05-23 17:54:29 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-23 17:54:29 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-23 17:54:29 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716504869396 with initial instances count: 3
2024-05-23 17:54:29 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-23 17:54:29 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716504869397, current=UP, previous=STARTING]
2024-05-23 17:54:29 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-23 17:54:29 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-23 17:54:29 [restartedMain] INFO  : Netty started on port 8081
2024-05-23 17:54:29 [restartedMain] INFO  : Updating port to 8081
2024-05-23 17:54:29 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.647 seconds (JVM running for 1755.275)
2024-05-23 17:54:29 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-23 17:54:30 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-23 17:54:30 [Thread-36] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-23 17:54:30 [Thread-36] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716504870275, current=DOWN, previous=UP]
2024-05-23 17:54:30 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-23 17:54:30 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-23 17:54:32 [Thread-36] INFO  : Shutting down DiscoveryClient ...
2024-05-23 17:54:35 [Thread-36] INFO  : Unregistering ...
2024-05-23 17:54:35 [Thread-36] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-23 17:54:35 [Thread-36] INFO  : Completed shut down of DiscoveryClient
2024-05-23 17:54:35 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 12140 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-23 17:54:35 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-23 17:54:35 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-23 17:54:35 [restartedMain] INFO  : Finished Spring Data repository scanning in 11 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-23 17:54:35 [restartedMain] INFO  : BeanFactory id=a1e38bde-9f06-3be3-aa6c-98a8147f649e
2024-05-23 17:54:35 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 17:54:35 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 17:54:35 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 17:54:35 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@5c70239c, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3b1e52e9]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-23 17:54:35 [cluster-ClusterId{value='664fc92bde3dcc6e7437d4ed', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:18, serverValue:41}] to localhost:27017
2024-05-23 17:54:35 [cluster-rtt-ClusterId{value='664fc92bde3dcc6e7437d4ed', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:19, serverValue:42}] to localhost:27017
2024-05-23 17:54:35 [cluster-ClusterId{value='664fc92bde3dcc6e7437d4ed', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1278200}
2024-05-23 17:54:35 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@2ed1e34, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3b1e52e9]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-23 17:54:35 [cluster-ClusterId{value='664fc92bde3dcc6e7437d4ee', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:20, serverValue:44}] to localhost:27017
2024-05-23 17:54:35 [cluster-rtt-ClusterId{value='664fc92bde3dcc6e7437d4ee', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:21, serverValue:43}] to localhost:27017
2024-05-23 17:54:35 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-23 17:54:35 [cluster-ClusterId{value='664fc92bde3dcc6e7437d4ee', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=956800}
2024-05-23 17:54:35 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-23 17:54:35 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-23 17:54:35 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-23 17:54:36 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-23 17:54:36 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-23 17:54:36 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-23 17:54:36 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-23 17:54:36 [restartedMain] INFO  : Disable delta property : false
2024-05-23 17:54:36 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-23 17:54:36 [restartedMain] INFO  : Force full registry fetch : false
2024-05-23 17:54:36 [restartedMain] INFO  : Application is null : false
2024-05-23 17:54:36 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-23 17:54:36 [restartedMain] INFO  : Application version is -1: true
2024-05-23 17:54:36 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-23 17:54:36 [restartedMain] INFO  : The response status is 200
2024-05-23 17:54:36 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-23 17:54:36 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-23 17:54:36 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716504876407 with initial instances count: 3
2024-05-23 17:54:36 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-23 17:54:36 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716504876409, current=UP, previous=STARTING]
2024-05-23 17:54:36 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-23 17:54:36 [restartedMain] INFO  : Netty started on port 8081
2024-05-23 17:54:36 [restartedMain] INFO  : Updating port to 8081
2024-05-23 17:54:36 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-23 17:54:36 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.148 seconds (JVM running for 1762.274)
2024-05-23 17:54:36 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-23 17:59:07 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 17:59:36 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 18:04:07 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 18:04:36 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 18:09:07 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 18:09:36 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 18:14:07 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 18:14:36 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 18:16:01 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-23 18:16:01 [Thread-50] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-23 18:16:01 [Thread-50] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716506161034, current=DOWN, previous=UP]
2024-05-23 18:16:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-23 18:16:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-23 18:16:03 [Thread-50] INFO  : Shutting down DiscoveryClient ...
2024-05-23 18:16:06 [Thread-50] INFO  : Unregistering ...
2024-05-23 18:16:06 [Thread-50] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-23 18:16:06 [Thread-50] INFO  : Completed shut down of DiscoveryClient
2024-05-23 18:16:06 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 12140 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-23 18:16:06 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-23 18:16:06 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-23 18:16:06 [restartedMain] INFO  : Finished Spring Data repository scanning in 11 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-23 18:16:06 [restartedMain] INFO  : BeanFactory id=a1e38bde-9f06-3be3-aa6c-98a8147f649e
2024-05-23 18:16:06 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 18:16:06 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 18:16:06 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 18:16:06 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@64565845, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3b1e52e9]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-23 18:16:06 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@14874308, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3b1e52e9]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-23 18:16:06 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-23 18:16:06 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-23 18:16:06 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-23 18:16:06 [cluster-ClusterId{value='664fce36de3dcc6e7437d4ef', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:23, serverValue:46}] to localhost:27017
2024-05-23 18:16:06 [cluster-ClusterId{value='664fce36de3dcc6e7437d4f0', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:25, serverValue:47}] to localhost:27017
2024-05-23 18:16:06 [cluster-ClusterId{value='664fce36de3dcc6e7437d4ef', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1649600}
2024-05-23 18:16:06 [cluster-ClusterId{value='664fce36de3dcc6e7437d4f0', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1072100}
2024-05-23 18:16:06 [cluster-rtt-ClusterId{value='664fce36de3dcc6e7437d4f0', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:22, serverValue:45}] to localhost:27017
2024-05-23 18:16:06 [cluster-rtt-ClusterId{value='664fce36de3dcc6e7437d4ef', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:24, serverValue:48}] to localhost:27017
2024-05-23 18:16:06 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-23 18:16:06 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-23 18:16:06 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-23 18:16:06 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-23 18:16:06 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-23 18:16:06 [restartedMain] INFO  : Disable delta property : false
2024-05-23 18:16:06 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-23 18:16:06 [restartedMain] INFO  : Force full registry fetch : false
2024-05-23 18:16:06 [restartedMain] INFO  : Application is null : false
2024-05-23 18:16:06 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-23 18:16:06 [restartedMain] INFO  : Application version is -1: true
2024-05-23 18:16:06 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-23 18:16:06 [restartedMain] INFO  : The response status is 200
2024-05-23 18:16:06 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-23 18:16:06 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-23 18:16:06 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716506166989 with initial instances count: 3
2024-05-23 18:16:06 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-23 18:16:06 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716506166990, current=UP, previous=STARTING]
2024-05-23 18:16:06 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-23 18:16:07 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-23 18:16:07 [restartedMain] INFO  : Netty started on port 8081
2024-05-23 18:16:07 [restartedMain] INFO  : Updating port to 8081
2024-05-23 18:16:07 [restartedMain] INFO  : Started TransactionsServiceApplication in 0.926 seconds (JVM running for 3052.812)
2024-05-23 18:16:07 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-23 18:16:08 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-23 18:16:08 [Thread-64] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-23 18:16:08 [Thread-64] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716506168196, current=DOWN, previous=UP]
2024-05-23 18:16:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-23 18:16:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-23 18:16:10 [Thread-64] INFO  : Shutting down DiscoveryClient ...
2024-05-23 18:16:13 [Thread-64] INFO  : Unregistering ...
2024-05-23 18:16:13 [Thread-64] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-23 18:16:13 [Thread-64] INFO  : Completed shut down of DiscoveryClient
2024-05-23 18:16:13 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 12140 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-23 18:16:13 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-23 18:16:13 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-23 18:16:13 [restartedMain] INFO  : Finished Spring Data repository scanning in 11 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-23 18:16:13 [restartedMain] INFO  : BeanFactory id=a1e38bde-9f06-3be3-aa6c-98a8147f649e
2024-05-23 18:16:13 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 18:16:13 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 18:16:13 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 18:16:13 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3c39d2c0, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3b1e52e9]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-23 18:16:13 [cluster-ClusterId{value='664fce3dde3dcc6e7437d4f1', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:26, serverValue:49}] to localhost:27017
2024-05-23 18:16:13 [cluster-ClusterId{value='664fce3dde3dcc6e7437d4f1', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1011200}
2024-05-23 18:16:13 [cluster-rtt-ClusterId{value='664fce3dde3dcc6e7437d4f1', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:27, serverValue:50}] to localhost:27017
2024-05-23 18:16:13 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@6ff86f74, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3b1e52e9]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-23 18:16:13 [cluster-ClusterId{value='664fce3dde3dcc6e7437d4f2', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:28, serverValue:52}] to localhost:27017
2024-05-23 18:16:13 [cluster-rtt-ClusterId{value='664fce3dde3dcc6e7437d4f2', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:29, serverValue:51}] to localhost:27017
2024-05-23 18:16:13 [cluster-ClusterId{value='664fce3dde3dcc6e7437d4f2', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1216500}
2024-05-23 18:16:13 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-23 18:16:13 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-23 18:16:13 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-23 18:16:13 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-23 18:16:13 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-23 18:16:13 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-23 18:16:13 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-23 18:16:13 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-23 18:16:13 [restartedMain] INFO  : Disable delta property : false
2024-05-23 18:16:13 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-23 18:16:13 [restartedMain] INFO  : Force full registry fetch : false
2024-05-23 18:16:13 [restartedMain] INFO  : Application is null : false
2024-05-23 18:16:13 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-23 18:16:13 [restartedMain] INFO  : Application version is -1: true
2024-05-23 18:16:13 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-23 18:16:13 [restartedMain] INFO  : The response status is 200
2024-05-23 18:16:13 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-23 18:16:13 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-23 18:16:13 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716506173927 with initial instances count: 3
2024-05-23 18:16:13 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-23 18:16:13 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716506173929, current=UP, previous=STARTING]
2024-05-23 18:16:13 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-23 18:16:13 [restartedMain] INFO  : Netty started on port 8081
2024-05-23 18:16:13 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-23 18:16:13 [restartedMain] INFO  : Updating port to 8081
2024-05-23 18:16:14 [restartedMain] INFO  : Started TransactionsServiceApplication in 0.692 seconds (JVM running for 3059.74)
2024-05-23 18:16:14 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-23 18:18:21 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-23 18:18:21 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716506301607, current=DOWN, previous=UP]
2024-05-23 18:18:21 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-23 18:18:21 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-23 18:18:23 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-23 18:18:26 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-23 18:18:26 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-23 18:18:26 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-23 18:18:30 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 2500 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-23 18:18:30 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-23 18:18:30 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-23 18:18:30 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-23 18:18:31 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-23 18:18:31 [restartedMain] INFO  : Finished Spring Data repository scanning in 106 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-23 18:18:31 [restartedMain] INFO  : BeanFactory id=a1e38bde-9f06-3be3-aa6c-98a8147f649e
2024-05-23 18:18:31 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 18:18:31 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 18:18:31 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 18:18:31 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3b1e52e9, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@16f611b6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-23 18:18:32 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1694d3b6, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@16f611b6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-23 18:18:32 [cluster-rtt-ClusterId{value='664fcec83101e16a729ae673', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:3, serverValue:53}] to localhost:27017
2024-05-23 18:18:32 [cluster-rtt-ClusterId{value='664fcec73101e16a729ae672', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:54}] to localhost:27017
2024-05-23 18:18:32 [cluster-ClusterId{value='664fcec73101e16a729ae672', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:56}] to localhost:27017
2024-05-23 18:18:32 [cluster-ClusterId{value='664fcec83101e16a729ae673', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:55}] to localhost:27017
2024-05-23 18:18:32 [cluster-ClusterId{value='664fcec73101e16a729ae672', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=48671100}
2024-05-23 18:18:32 [cluster-ClusterId{value='664fcec83101e16a729ae673', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=48590700}
2024-05-23 18:18:32 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-23 18:18:32 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-23 18:18:32 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-23 18:18:32 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-23 18:18:32 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-23 18:18:32 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-23 18:18:33 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-23 18:18:33 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-23 18:18:33 [restartedMain] INFO  : Disable delta property : false
2024-05-23 18:18:33 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-23 18:18:33 [restartedMain] INFO  : Force full registry fetch : false
2024-05-23 18:18:33 [restartedMain] INFO  : Application is null : false
2024-05-23 18:18:33 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-23 18:18:33 [restartedMain] INFO  : Application version is -1: true
2024-05-23 18:18:33 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-23 18:18:33 [restartedMain] INFO  : The response status is 200
2024-05-23 18:18:33 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-23 18:18:33 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-23 18:18:33 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716506313375 with initial instances count: 2
2024-05-23 18:18:33 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-23 18:18:33 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716506313377, current=UP, previous=STARTING]
2024-05-23 18:18:33 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-23 18:18:33 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-23 18:18:33 [restartedMain] INFO  : Netty started on port 8081
2024-05-23 18:18:33 [restartedMain] INFO  : Updating port to 8081
2024-05-23 18:18:33 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.449 seconds (JVM running for 4.234)
2024-05-23 18:19:07 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 18:23:33 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 18:24:07 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 18:28:33 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 18:29:07 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 18:33:33 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 18:34:07 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 18:38:33 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 18:39:07 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 18:43:33 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 18:44:07 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 18:47:04 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-23 18:47:04 [Thread-1] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-23 18:47:04 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716508024780, current=DOWN, previous=UP]
2024-05-23 18:47:04 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-23 18:47:04 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-23 18:47:06 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-23 18:47:09 [Thread-1] INFO  : Unregistering ...
2024-05-23 18:47:09 [Thread-1] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-23 18:47:09 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-23 18:47:10 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 2500 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-23 18:47:10 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-23 18:47:10 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-23 18:47:10 [restartedMain] INFO  : Finished Spring Data repository scanning in 29 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-23 18:47:10 [restartedMain] INFO  : BeanFactory id=a1e38bde-9f06-3be3-aa6c-98a8147f649e
2024-05-23 18:47:10 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 18:47:10 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 18:47:10 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 18:47:10 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@48c83e83, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@16f611b6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-23 18:47:10 [cluster-rtt-ClusterId{value='664fd57e3101e16a729ae674', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:5, serverValue:57}] to localhost:27017
2024-05-23 18:47:10 [cluster-ClusterId{value='664fd57e3101e16a729ae674', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:58}] to localhost:27017
2024-05-23 18:47:10 [cluster-ClusterId{value='664fd57e3101e16a729ae674', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2503100}
2024-05-23 18:47:10 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@53265e5c, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@16f611b6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-23 18:47:10 [cluster-rtt-ClusterId{value='664fd57e3101e16a729ae675', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:8, serverValue:60}] to localhost:27017
2024-05-23 18:47:10 [cluster-ClusterId{value='664fd57e3101e16a729ae675', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:59}] to localhost:27017
2024-05-23 18:47:10 [cluster-ClusterId{value='664fd57e3101e16a729ae675', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3769900}
2024-05-23 18:47:10 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-23 18:47:10 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-23 18:47:10 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-23 18:47:11 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-23 18:47:11 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-23 18:47:11 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-23 18:47:11 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-23 18:47:11 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-23 18:47:11 [restartedMain] INFO  : Disable delta property : false
2024-05-23 18:47:11 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-23 18:47:11 [restartedMain] INFO  : Force full registry fetch : false
2024-05-23 18:47:11 [restartedMain] INFO  : Application is null : false
2024-05-23 18:47:11 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-23 18:47:11 [restartedMain] INFO  : Application version is -1: true
2024-05-23 18:47:11 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-23 18:47:11 [restartedMain] INFO  : The response status is 200
2024-05-23 18:47:11 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-23 18:47:11 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-23 18:47:11 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716508031328 with initial instances count: 3
2024-05-23 18:47:11 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-23 18:47:11 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716508031330, current=UP, previous=STARTING]
2024-05-23 18:47:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-23 18:47:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-23 18:47:11 [restartedMain] INFO  : Netty started on port 8081
2024-05-23 18:47:11 [restartedMain] INFO  : Updating port to 8081
2024-05-23 18:47:11 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.549 seconds (JVM running for 1722.234)
2024-05-23 18:47:11 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-23 18:47:12 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-23 18:47:12 [Thread-8] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-23 18:47:12 [Thread-8] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716508032404, current=DOWN, previous=UP]
2024-05-23 18:47:12 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-23 18:47:12 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-23 18:47:14 [Thread-8] INFO  : Shutting down DiscoveryClient ...
2024-05-23 18:47:17 [Thread-8] INFO  : Unregistering ...
2024-05-23 18:47:17 [Thread-8] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-23 18:47:17 [Thread-8] INFO  : Completed shut down of DiscoveryClient
2024-05-23 18:47:17 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 2500 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-23 18:47:17 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-23 18:47:18 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-23 18:47:18 [restartedMain] INFO  : Finished Spring Data repository scanning in 25 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-23 18:47:18 [restartedMain] INFO  : BeanFactory id=a1e38bde-9f06-3be3-aa6c-98a8147f649e
2024-05-23 18:47:18 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 18:47:18 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 18:47:18 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 18:47:18 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@6711975f, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@16f611b6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-23 18:47:18 [cluster-ClusterId{value='664fd5863101e16a729ae676', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:9, serverValue:61}] to localhost:27017
2024-05-23 18:47:18 [cluster-rtt-ClusterId{value='664fd5863101e16a729ae676', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:10, serverValue:62}] to localhost:27017
2024-05-23 18:47:18 [cluster-ClusterId{value='664fd5863101e16a729ae676', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2404600}
2024-05-23 18:47:18 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@7bfa68fa, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@16f611b6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-23 18:47:18 [cluster-rtt-ClusterId{value='664fd5863101e16a729ae677', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:12, serverValue:64}] to localhost:27017
2024-05-23 18:47:18 [cluster-ClusterId{value='664fd5863101e16a729ae677', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:11, serverValue:63}] to localhost:27017
2024-05-23 18:47:18 [cluster-ClusterId{value='664fd5863101e16a729ae677', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1450900}
2024-05-23 18:47:18 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-23 18:47:18 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-23 18:47:18 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-23 18:47:18 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-23 18:47:18 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-23 18:47:18 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-23 18:47:18 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-23 18:47:18 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-23 18:47:18 [restartedMain] INFO  : Disable delta property : false
2024-05-23 18:47:18 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-23 18:47:18 [restartedMain] INFO  : Force full registry fetch : false
2024-05-23 18:47:18 [restartedMain] INFO  : Application is null : false
2024-05-23 18:47:18 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-23 18:47:18 [restartedMain] INFO  : Application version is -1: true
2024-05-23 18:47:18 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-23 18:47:18 [restartedMain] INFO  : The response status is 200
2024-05-23 18:47:18 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-23 18:47:18 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-23 18:47:18 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716508038737 with initial instances count: 3
2024-05-23 18:47:18 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-23 18:47:18 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716508038739, current=UP, previous=STARTING]
2024-05-23 18:47:18 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-23 18:47:18 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-23 18:47:18 [restartedMain] INFO  : Netty started on port 8081
2024-05-23 18:47:18 [restartedMain] INFO  : Updating port to 8081
2024-05-23 18:47:18 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.29 seconds (JVM running for 1729.591)
2024-05-23 18:47:18 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-23 18:49:07 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 18:52:18 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 18:54:07 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 18:57:18 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 18:59:07 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 21:06:54 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 11536 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalClient\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-23 21:06:54 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-23 21:06:54 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-23 21:06:54 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-23 21:06:55 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-23 21:06:55 [restartedMain] INFO  : Finished Spring Data repository scanning in 82 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-23 21:06:55 [restartedMain] INFO  : BeanFactory id=793773eb-fca8-379f-a0ba-c7b18fda5e40
2024-05-23 21:06:55 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 21:06:55 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 21:06:55 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 21:06:55 [restartedMain] INFO  : Tomcat initialized with port(s): 8083 (http)
2024-05-23 21:06:55 [restartedMain] INFO  : Initializing ProtocolHandler ["http-nio-8083"]
2024-05-23 21:06:55 [restartedMain] INFO  : Starting service [Tomcat]
2024-05-23 21:06:55 [restartedMain] INFO  : Starting Servlet engine: [Apache Tomcat/9.0.83]
2024-05-23 21:06:56 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@40ddb208, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@12d289b4]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-23 21:06:56 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 19596 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-23 21:06:56 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-23 21:06:56 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-23 21:06:56 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-23 21:06:56 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-23 21:06:56 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-23 21:06:56 [cluster-rtt-ClusterId{value='664ff6406406396d83d12dd5', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:4}] to localhost:27017
2024-05-23 21:06:56 [cluster-ClusterId{value='664ff6406406396d83d12dd5', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:3}] to localhost:27017
2024-05-23 21:06:56 [cluster-ClusterId{value='664ff6406406396d83d12dd5', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=50330500}
2024-05-23 21:06:56 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-23 21:06:56 [nioEventLoopGroup-2-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:5}] to localhost:27017
2024-05-23 21:06:57 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-23 21:06:57 [restartedMain] INFO  : Finished Spring Data repository scanning in 168 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-23 21:06:57 [restartedMain] INFO  : BeanFactory id=a1e38bde-9f06-3be3-aa6c-98a8147f649e
2024-05-23 21:06:57 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-23 21:06:57 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 21:06:57 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 21:06:57 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-23 21:06:58 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@73f69ad3, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3b1e52e9]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-23 21:06:58 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-23 21:06:58 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3e1f8001, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3b1e52e9]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-23 21:06:58 [cluster-rtt-ClusterId{value='664ff64288fa31722185cc59', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:9}] to localhost:27017
2024-05-23 21:06:58 [cluster-ClusterId{value='664ff64288fa31722185cc59', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:3, serverValue:8}] to localhost:27017
2024-05-23 21:06:58 [cluster-rtt-ClusterId{value='664ff64188fa31722185cc58', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:6}] to localhost:27017
2024-05-23 21:06:58 [cluster-ClusterId{value='664ff64188fa31722185cc58', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:7}] to localhost:27017
2024-05-23 21:06:58 [cluster-ClusterId{value='664ff64288fa31722185cc59', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=56555400}
2024-05-23 21:06:58 [cluster-ClusterId{value='664ff64188fa31722185cc58', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=56568700}
2024-05-23 21:06:58 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-23 21:06:58 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-23 21:06:58 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-23 21:06:58 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-23 21:06:58 [restartedMain] INFO  : Disable delta property : false
2024-05-23 21:06:58 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-23 21:06:58 [restartedMain] INFO  : Force full registry fetch : false
2024-05-23 21:06:58 [restartedMain] INFO  : Application is null : false
2024-05-23 21:06:58 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-23 21:06:58 [restartedMain] INFO  : Application version is -1: true
2024-05-23 21:06:58 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-23 21:06:58 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-23 21:06:58 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-23 21:06:58 [restartedMain] INFO  : The response status is 200
2024-05-23 21:06:58 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-23 21:06:58 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-23 21:06:58 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716516418809 with initial instances count: 0
2024-05-23 21:06:58 [restartedMain] INFO  : Registering application CLIENTSERVICE with eureka with status UP
2024-05-23 21:06:58 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716516418814, current=UP, previous=STARTING]
2024-05-23 21:06:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083: registering service...
2024-05-23 21:06:58 [restartedMain] INFO  : Starting ProtocolHandler ["http-nio-8083"]
2024-05-23 21:06:58 [restartedMain] INFO  : Tomcat started on port(s): 8083 (http) with context path ''
2024-05-23 21:06:58 [restartedMain] INFO  : Updating port to 8083
2024-05-23 21:06:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083 - registration status: 204
2024-05-23 21:06:59 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-23 21:06:59 [restartedMain] INFO  : Started FinalProjectApplication in 6.007 seconds (JVM running for 7.254)
2024-05-23 21:06:59 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-23 21:06:59 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-23 21:06:59 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-23 21:06:59 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-23 21:06:59 [restartedMain] INFO  : Disable delta property : false
2024-05-23 21:06:59 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-23 21:06:59 [restartedMain] INFO  : Force full registry fetch : false
2024-05-23 21:06:59 [restartedMain] INFO  : Application is null : false
2024-05-23 21:06:59 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-23 21:06:59 [restartedMain] INFO  : Application version is -1: true
2024-05-23 21:06:59 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-23 21:06:59 [restartedMain] INFO  : The response status is 200
2024-05-23 21:06:59 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-23 21:06:59 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-23 21:06:59 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716516419853 with initial instances count: 0
2024-05-23 21:06:59 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-23 21:06:59 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716516419857, current=UP, previous=STARTING]
2024-05-23 21:06:59 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-23 21:06:59 [restartedMain] INFO  : Netty started on port 8081
2024-05-23 21:06:59 [restartedMain] INFO  : Updating port to 8081
2024-05-23 21:06:59 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-23 21:07:00 [restartedMain] INFO  : Started TransactionsServiceApplication in 4.313 seconds (JVM running for 5.319)
2024-05-23 21:07:28 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Disable delta property : false
2024-05-23 21:07:28 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Single vip registry refresh property : null
2024-05-23 21:07:28 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Force full registry fetch : false
2024-05-23 21:07:28 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application is null : false
2024-05-23 21:07:28 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Registered Applications size is zero : true
2024-05-23 21:07:28 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application version is -1: false
2024-05-23 21:07:28 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Getting all instance registry info from the eureka server
2024-05-23 21:07:28 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : The response status is 200
2024-05-23 21:07:29 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Disable delta property : false
2024-05-23 21:07:29 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Single vip registry refresh property : null
2024-05-23 21:07:29 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Force full registry fetch : false
2024-05-23 21:07:29 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application is null : false
2024-05-23 21:07:29 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Registered Applications size is zero : true
2024-05-23 21:07:29 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application version is -1: false
2024-05-23 21:07:29 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Getting all instance registry info from the eureka server
2024-05-23 21:07:29 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : The response status is 200
2024-05-23 21:11:58 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 21:11:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 21:16:58 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 21:16:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 21:21:58 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 21:21:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 21:26:58 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 21:26:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 21:31:58 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 21:31:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 21:36:58 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 21:36:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 21:41:58 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 21:41:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 21:46:58 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 21:46:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 21:51:08 [http-nio-8083-exec-5] INFO  : Found clients -> FluxMap
2024-05-23 21:51:32 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:5, serverValue:10}] to localhost:27017
2024-05-23 21:51:58 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 21:51:59 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-23 21:54:53 [SpringApplicationShutdownHook] INFO  : Unregistering application CLIENTSERVICE with eureka with status DOWN
2024-05-23 21:54:53 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716519293928, current=DOWN, previous=UP]
2024-05-23 21:54:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083: registering service...
2024-05-23 21:54:53 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-23 21:54:53 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716519293940, current=DOWN, previous=UP]
2024-05-23 21:54:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083 - registration status: 204
2024-05-23 21:54:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-23 21:54:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-23 21:54:56 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-23 21:54:56 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-23 21:54:59 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-23 21:54:59 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 37 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 50 more

2024-05-23 21:54:59 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-23 21:54:59 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 38 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 51 more

2024-05-23 21:54:59 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-23 21:54:59 [SpringApplicationShutdownHook] ERROR : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-23 21:54:59 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-23 21:54:59 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-23 21:54:59 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 39 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.connect0(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.base/java.net.Socket.connect(Socket.java:608)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 52 more

2024-05-23 21:54:59 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-23 21:54:59 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 40 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.connect0(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.base/java.net.Socket.connect(Socket.java:608)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 53 more

2024-05-23 21:54:59 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-23 21:54:59 [SpringApplicationShutdownHook] ERROR : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
2024-05-23 21:54:59 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
