2024-05-20 22:46:54 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 23288 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 22:46:54 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 22:46:54 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 22:46:54 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 22:46:54 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 22:46:55 [restartedMain] INFO  : Finished Spring Data repository scanning in 125 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 22:46:55 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 22:46:55 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 22:46:55 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 22:46:55 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 22:46:55 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3a99cabf, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7f101a5a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 22:46:55 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 22:46:56 [cluster-rtt-ClusterId{value='664c192fd54d9b2176bb1533', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:699}] to localhost:27017
2024-05-20 22:46:56 [cluster-ClusterId{value='664c192fd54d9b2176bb1533', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:698}] to localhost:27017
2024-05-20 22:46:56 [cluster-ClusterId{value='664c192fd54d9b2176bb1533', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=76075000}
2024-05-20 22:46:56 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-20 22:46:56 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 22:46:56 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 22:46:56 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 22:46:57 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 22:46:57 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 22:46:57 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 22:46:57 [restartedMain] INFO  : Disable delta property : false
2024-05-20 22:46:57 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 22:46:57 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 22:46:57 [restartedMain] INFO  : Application is null : false
2024-05-20 22:46:57 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 22:46:57 [restartedMain] INFO  : Application version is -1: true
2024-05-20 22:46:57 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 22:46:57 [restartedMain] INFO  : The response status is 200
2024-05-20 22:46:57 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 22:46:57 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 22:46:57 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716263217517 with initial instances count: 0
2024-05-20 22:46:57 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-20 22:46:57 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716263217519, current=UP, previous=STARTING]
2024-05-20 22:46:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService: registering service...
2024-05-20 22:46:57 [restartedMain] INFO  : Netty started on port 8080
2024-05-20 22:46:57 [restartedMain] INFO  : Updating port to 8080
2024-05-20 22:46:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - registration status: 204
2024-05-20 22:46:57 [restartedMain] INFO  : Started FinalProjectApplication in 4.227 seconds (JVM running for 5.017)
2024-05-20 22:47:11 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 9568 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 22:47:11 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 22:47:11 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 22:47:11 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 22:47:12 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 22:47:12 [restartedMain] INFO  : Finished Spring Data repository scanning in 109 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-20 22:47:12 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-20 22:47:12 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 22:47:12 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 22:47:12 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 22:47:13 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@37b003bd, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@69ebaa6c]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 22:47:13 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 22:47:13 [cluster-rtt-ClusterId{value='664c1941f1a4ab5ee7671e2c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:700}] to localhost:27017
2024-05-20 22:47:13 [cluster-ClusterId{value='664c1941f1a4ab5ee7671e2c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:701}] to localhost:27017
2024-05-20 22:47:13 [cluster-ClusterId{value='664c1941f1a4ab5ee7671e2c', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=72053500}
2024-05-20 22:47:13 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 22:47:13 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 22:47:13 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 22:47:14 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 22:47:14 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 22:47:14 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 22:47:14 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 22:47:14 [restartedMain] INFO  : Disable delta property : false
2024-05-20 22:47:14 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 22:47:14 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 22:47:14 [restartedMain] INFO  : Application is null : false
2024-05-20 22:47:14 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 22:47:14 [restartedMain] INFO  : Application version is -1: true
2024-05-20 22:47:14 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 22:47:14 [restartedMain] INFO  : The response status is 200
2024-05-20 22:47:14 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 22:47:14 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 22:47:14 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716263234526 with initial instances count: 1
2024-05-20 22:47:14 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-20 22:47:14 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716263234528, current=UP, previous=STARTING]
2024-05-20 22:47:14 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 22:47:14 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 22:47:14 [restartedMain] INFO  : Updating port to 8081
2024-05-20 22:47:14 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 22:47:14 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.642 seconds (JVM running for 4.326)
2024-05-20 22:47:27 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Disable delta property : false
2024-05-20 22:47:27 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Single vip registry refresh property : null
2024-05-20 22:47:27 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Force full registry fetch : false
2024-05-20 22:47:27 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application is null : false
2024-05-20 22:47:27 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Registered Applications size is zero : true
2024-05-20 22:47:27 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application version is -1: false
2024-05-20 22:47:27 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Getting all instance registry info from the eureka server
2024-05-20 22:47:27 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : The response status is 200
2024-05-20 22:47:49 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:702}] to localhost:27017
2024-05-20 22:51:38 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 11240 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalClient\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 22:51:38 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 22:51:38 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 22:51:38 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 22:51:39 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 22:51:39 [restartedMain] INFO  : Finished Spring Data repository scanning in 46 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-20 22:51:39 [restartedMain] INFO  : BeanFactory id=793773eb-fca8-379f-a0ba-c7b18fda5e40
2024-05-20 22:51:39 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 22:51:39 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 22:51:39 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 22:51:39 [restartedMain] INFO  : Tomcat initialized with port(s): 8083 (http)
2024-05-20 22:51:39 [restartedMain] INFO  : Initializing ProtocolHandler ["http-nio-8083"]
2024-05-20 22:51:39 [restartedMain] INFO  : Starting service [Tomcat]
2024-05-20 22:51:39 [restartedMain] INFO  : Starting Servlet engine: [Apache Tomcat/9.0.83]
2024-05-20 22:51:39 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1baa80b1, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5646e096]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 22:51:40 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 22:51:40 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 22:51:40 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 22:51:40 [cluster-ClusterId{value='664c1a4b26d4057874324fc7', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:703}] to localhost:27017
2024-05-20 22:51:40 [cluster-rtt-ClusterId{value='664c1a4b26d4057874324fc7', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:704}] to localhost:27017
2024-05-20 22:51:40 [cluster-ClusterId{value='664c1a4b26d4057874324fc7', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=46909100}
2024-05-20 22:51:40 [nioEventLoopGroup-2-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:705}] to localhost:27017
2024-05-20 22:51:40 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 22:51:41 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 22:51:41 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 22:51:41 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 22:51:41 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 22:51:41 [restartedMain] INFO  : Disable delta property : false
2024-05-20 22:51:41 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 22:51:41 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 22:51:41 [restartedMain] INFO  : Application is null : false
2024-05-20 22:51:41 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 22:51:41 [restartedMain] INFO  : Application version is -1: true
2024-05-20 22:51:41 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 22:51:41 [restartedMain] INFO  : The response status is 200
2024-05-20 22:51:41 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 22:51:41 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 22:51:41 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716263501676 with initial instances count: 2
2024-05-20 22:51:41 [restartedMain] INFO  : Registering application CLIENTSERVICE with eureka with status UP
2024-05-20 22:51:41 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716263501679, current=UP, previous=STARTING]
2024-05-20 22:51:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083: registering service...
2024-05-20 22:51:41 [restartedMain] INFO  : Starting ProtocolHandler ["http-nio-8083"]
2024-05-20 22:51:41 [restartedMain] INFO  : Tomcat started on port(s): 8083 (http) with context path ''
2024-05-20 22:51:41 [restartedMain] INFO  : Updating port to 8083
2024-05-20 22:51:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083 - registration status: 204
2024-05-20 22:51:42 [restartedMain] INFO  : Started FinalProjectApplication in 4.063 seconds (JVM running for 4.976)
2024-05-20 22:51:57 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 22:52:14 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 22:56:15 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:706}] to localhost:27017
2024-05-20 22:56:41 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 22:56:57 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 22:57:14 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 22:59:58 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:708}] to localhost:27017
2024-05-20 22:59:58 [nioEventLoopGroup-3-4] INFO  : Opened connection [connectionId{localValue:4, serverValue:707}] to localhost:27017
2024-05-20 23:00:24 [SpringApplicationShutdownHook] INFO  : Unregistering application CLIENTSERVICE with eureka with status DOWN
2024-05-20 23:00:24 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716264024265, current=DOWN, previous=UP]
2024-05-20 23:00:24 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083: registering service...
2024-05-20 23:00:24 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083 - registration status: 204
2024-05-20 23:00:26 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:00:29 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 23:00:29 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083 - deregister  status: 200
2024-05-20 23:00:29 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:00:32 [restartedMain] INFO  : Starting FinalProjectApplication using Java 11.0.22 on valnaevis with PID 34288 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalClient\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:00:32 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:00:32 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 23:00:32 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 23:00:32 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:00:32 [restartedMain] INFO  : Finished Spring Data repository scanning in 50 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-20 23:00:33 [restartedMain] INFO  : BeanFactory id=793773eb-fca8-379f-a0ba-c7b18fda5e40
2024-05-20 23:00:33 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:00:33 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:00:33 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:00:33 [restartedMain] INFO  : Tomcat initialized with port(s): 8083 (http)
2024-05-20 23:00:33 [restartedMain] INFO  : Initializing ProtocolHandler ["http-nio-8083"]
2024-05-20 23:00:33 [restartedMain] INFO  : Starting service [Tomcat]
2024-05-20 23:00:33 [restartedMain] INFO  : Starting Servlet engine: [Apache Tomcat/9.0.83]
2024-05-20 23:00:33 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@21fffcd6, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@18bf3cd]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:00:33 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:00:33 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 23:00:33 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:00:33 [cluster-ClusterId{value='664c1c6121e8777d2d443721', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:710}] to localhost:27017
2024-05-20 23:00:33 [cluster-rtt-ClusterId{value='664c1c6121e8777d2d443721', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:709}] to localhost:27017
2024-05-20 23:00:33 [cluster-ClusterId{value='664c1c6121e8777d2d443721', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=47486200}
2024-05-20 23:00:33 [nioEventLoopGroup-2-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:711}] to localhost:27017
2024-05-20 23:00:34 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:00:34 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:00:34 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:00:34 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:00:34 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:00:34 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:00:34 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:00:34 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:00:34 [restartedMain] INFO  : Application is null : false
2024-05-20 23:00:34 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:00:34 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:00:34 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:00:35 [restartedMain] INFO  : The response status is 200
2024-05-20 23:00:35 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:00:35 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:00:35 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716264035164 with initial instances count: 2
2024-05-20 23:00:35 [restartedMain] INFO  : Registering application CLIENTSERVICE with eureka with status UP
2024-05-20 23:00:35 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716264035166, current=UP, previous=STARTING]
2024-05-20 23:00:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083: registering service...
2024-05-20 23:00:35 [restartedMain] INFO  : Starting ProtocolHandler ["http-nio-8083"]
2024-05-20 23:00:35 [restartedMain] INFO  : Tomcat started on port(s): 8083 (http) with context path ''
2024-05-20 23:00:35 [restartedMain] INFO  : Updating port to 8083
2024-05-20 23:00:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083 - registration status: 204
2024-05-20 23:00:35 [restartedMain] INFO  : Started FinalProjectApplication in 3.937 seconds (JVM running for 4.82)
2024-05-20 23:00:41 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-20 23:00:41 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716264041481, current=DOWN, previous=UP]
2024-05-20 23:00:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:00:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:00:43 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:00:46 [DiscoveryClient-1] WARN  : task supervisor shutting down, can't accept the task
2024-05-20 23:00:46 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 23:00:46 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-20 23:00:46 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:00:50 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 22756 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:00:50 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:00:50 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 23:00:50 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 23:00:50 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:00:50 [restartedMain] INFO  : Finished Spring Data repository scanning in 112 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-20 23:00:51 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-20 23:00:51 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:00:51 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:00:51 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:00:51 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@6f9dd76e, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@272ed460]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:00:51 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:00:51 [cluster-ClusterId{value='664c1c737e0b607585a6519c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:713}] to localhost:27017
2024-05-20 23:00:51 [cluster-rtt-ClusterId{value='664c1c737e0b607585a6519c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:712}] to localhost:27017
2024-05-20 23:00:51 [cluster-ClusterId{value='664c1c737e0b607585a6519c', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=55616300}
2024-05-20 23:00:51 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 23:00:51 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:00:52 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:00:52 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:00:52 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:00:52 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:00:52 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:00:52 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:00:52 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:00:52 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:00:52 [restartedMain] INFO  : Application is null : false
2024-05-20 23:00:52 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:00:52 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:00:52 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:00:52 [restartedMain] INFO  : The response status is 200
2024-05-20 23:00:52 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:00:52 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:00:52 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716264052911 with initial instances count: 2
2024-05-20 23:00:52 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-20 23:00:52 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716264052913, current=UP, previous=STARTING]
2024-05-20 23:00:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:00:52 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 23:00:52 [restartedMain] INFO  : Updating port to 8081
2024-05-20 23:00:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:00:53 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.406 seconds (JVM running for 4.093)
2024-05-20 23:01:57 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:03:26 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-20 23:03:26 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716264206949, current=DOWN, previous=UP]
2024-05-20 23:03:26 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:03:26 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:03:29 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:03:32 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 23:03:32 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-20 23:03:32 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:03:36 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 27384 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:03:36 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:03:36 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 23:03:36 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 23:03:36 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:03:36 [restartedMain] INFO  : Finished Spring Data repository scanning in 128 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-20 23:03:36 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-20 23:03:36 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:03:36 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:03:36 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:03:37 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3c0a67fa, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6f9dd76e]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:03:37 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:03:37 [cluster-ClusterId{value='664c1d19bf7c72326351aa7c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:714}] to localhost:27017
2024-05-20 23:03:37 [cluster-rtt-ClusterId{value='664c1d19bf7c72326351aa7c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:715}] to localhost:27017
2024-05-20 23:03:37 [cluster-ClusterId{value='664c1d19bf7c72326351aa7c', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=57460800}
2024-05-20 23:03:37 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 23:03:37 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:03:38 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:03:38 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:03:38 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:03:38 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:03:38 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:03:38 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:03:38 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:03:38 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:03:38 [restartedMain] INFO  : Application is null : false
2024-05-20 23:03:38 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:03:38 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:03:38 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:03:38 [restartedMain] INFO  : The response status is 200
2024-05-20 23:03:38 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:03:38 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:03:38 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716264218914 with initial instances count: 3
2024-05-20 23:03:38 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-20 23:03:38 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716264218917, current=UP, previous=STARTING]
2024-05-20 23:03:38 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:03:38 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:03:38 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 23:03:38 [restartedMain] INFO  : Updating port to 8081
2024-05-20 23:03:39 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.713 seconds (JVM running for 4.417)
2024-05-20 23:03:40 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 23:03:40 [Thread-5] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-20 23:03:40 [Thread-5] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716264220847, current=DOWN, previous=UP]
2024-05-20 23:03:40 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService: registering service...
2024-05-20 23:03:40 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - registration status: 204
2024-05-20 23:03:42 [Thread-5] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:03:45 [Thread-5] INFO  : Unregistering ...
2024-05-20 23:03:45 [Thread-5] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - deregister  status: 200
2024-05-20 23:03:45 [Thread-5] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:03:46 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 23288 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:03:46 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:03:46 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:03:46 [restartedMain] INFO  : Finished Spring Data repository scanning in 25 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 23:03:46 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 23:03:46 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:03:46 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:03:46 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:03:46 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@5197f344, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7f101a5a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:03:46 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:03:46 [cluster-ClusterId{value='664c1d22d54d9b2176bb1534', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:716}] to localhost:27017
2024-05-20 23:03:46 [cluster-rtt-ClusterId{value='664c1d22d54d9b2176bb1534', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:717}] to localhost:27017
2024-05-20 23:03:46 [cluster-ClusterId{value='664c1d22d54d9b2176bb1534', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3280500}
2024-05-20 23:03:46 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-20 23:03:46 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:03:46 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:03:47 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:03:47 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:03:47 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:03:47 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:03:47 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:03:47 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:03:47 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:03:47 [restartedMain] INFO  : Application is null : false
2024-05-20 23:03:47 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:03:47 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:03:47 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:03:47 [restartedMain] INFO  : The response status is 200
2024-05-20 23:03:47 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:03:47 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:03:47 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716264227096 with initial instances count: 3
2024-05-20 23:03:47 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-20 23:03:47 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716264227098, current=UP, previous=STARTING]
2024-05-20 23:03:47 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService: registering service...
2024-05-20 23:03:47 [restartedMain] INFO  : Netty started on port 8080
2024-05-20 23:03:47 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - registration status: 204
2024-05-20 23:03:47 [restartedMain] INFO  : Updating port to 8080
2024-05-20 23:03:47 [restartedMain] INFO  : Started FinalProjectApplication in 1.224 seconds (JVM running for 1014.55)
2024-05-20 23:03:47 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 23:03:48 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 23:03:48 [Thread-15] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-20 23:03:48 [Thread-15] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716264228195, current=DOWN, previous=UP]
2024-05-20 23:03:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService: registering service...
2024-05-20 23:03:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - registration status: 204
2024-05-20 23:03:50 [Thread-15] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:03:53 [Thread-15] INFO  : Unregistering ...
2024-05-20 23:03:53 [Thread-15] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - deregister  status: 200
2024-05-20 23:03:53 [Thread-15] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:03:53 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 23288 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:03:53 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:03:53 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:03:53 [restartedMain] INFO  : Finished Spring Data repository scanning in 18 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 23:03:53 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 23:03:53 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:03:53 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:03:53 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:03:53 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@644b404a, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7f101a5a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:03:53 [cluster-ClusterId{value='664c1d29d54d9b2176bb1535', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:8, serverValue:718}] to localhost:27017
2024-05-20 23:03:53 [cluster-rtt-ClusterId{value='664c1d29d54d9b2176bb1535', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:9, serverValue:719}] to localhost:27017
2024-05-20 23:03:53 [cluster-ClusterId{value='664c1d29d54d9b2176bb1535', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1488200}
2024-05-20 23:03:53 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:03:53 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-20 23:03:53 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:03:54 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:03:54 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:03:54 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:03:54 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:03:54 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:03:54 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:03:54 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:03:54 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:03:54 [restartedMain] INFO  : Application is null : false
2024-05-20 23:03:54 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:03:54 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:03:54 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:03:54 [restartedMain] INFO  : The response status is 200
2024-05-20 23:03:54 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:03:54 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:03:54 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716264234373 with initial instances count: 3
2024-05-20 23:03:54 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-20 23:03:54 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716264234373, current=UP, previous=STARTING]
2024-05-20 23:03:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService: registering service...
2024-05-20 23:03:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - registration status: 204
2024-05-20 23:03:54 [restartedMain] INFO  : Netty started on port 8080
2024-05-20 23:03:54 [restartedMain] INFO  : Updating port to 8080
2024-05-20 23:03:54 [restartedMain] INFO  : Started FinalProjectApplication in 1.181 seconds (JVM running for 1021.859)
2024-05-20 23:03:54 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 23:04:24 [nioEventLoopGroup-7-4] INFO  : Opened connection [connectionId{localValue:11, serverValue:721}] to localhost:27017
2024-05-20 23:04:24 [nioEventLoopGroup-7-3] INFO  : Opened connection [connectionId{localValue:10, serverValue:720}] to localhost:27017
2024-05-20 23:04:24 [nioEventLoopGroup-7-5] INFO  : Opened connection [connectionId{localValue:12, serverValue:722}] to localhost:27017
2024-05-20 23:05:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:07:50 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 23:07:50 [Thread-24] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-20 23:07:50 [Thread-24] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716264470140, current=DOWN, previous=UP]
2024-05-20 23:07:50 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService: registering service...
2024-05-20 23:07:50 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - registration status: 204
2024-05-20 23:07:52 [Thread-24] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:07:55 [DiscoveryClient-0] WARN  : task supervisor shutting down, can't accept the task
2024-05-20 23:07:55 [Thread-24] INFO  : Unregistering ...
2024-05-20 23:07:55 [Thread-24] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - deregister  status: 200
2024-05-20 23:07:55 [Thread-24] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:07:55 [restartedMain] INFO  : Starting FinalProjectApplication using Java 19.0.2 on valnaevis with PID 23288 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\FinalProducts\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:07:55 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:07:55 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:07:55 [restartedMain] INFO  : Finished Spring Data repository scanning in 17 ms. Found 3 Reactive MongoDB repository interfaces.
2024-05-20 23:07:55 [restartedMain] INFO  : BeanFactory id=6545e6b4-257b-3bac-85b4-8eb8915c1e36
2024-05-20 23:07:55 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:07:55 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:07:55 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:07:55 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@41a2a07f, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7f101a5a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:07:55 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:07:55 [cluster-ClusterId{value='664c1e1bd54d9b2176bb1536', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:13, serverValue:724}] to localhost:27017
2024-05-20 23:07:55 [cluster-rtt-ClusterId{value='664c1e1bd54d9b2176bb1536', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:14, serverValue:723}] to localhost:27017
2024-05-20 23:07:55 [cluster-ClusterId{value='664c1e1bd54d9b2176bb1536', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1645800}
2024-05-20 23:07:55 [restartedMain] INFO  : LiveReload server is running on port 35729
2024-05-20 23:07:55 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:07:56 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:07:56 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:07:56 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:07:56 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:07:56 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:07:56 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:07:56 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:07:56 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:07:56 [restartedMain] INFO  : Application is null : false
2024-05-20 23:07:56 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:07:56 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:07:56 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:07:56 [restartedMain] INFO  : The response status is 200
2024-05-20 23:07:56 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:07:56 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:07:56 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716264476435 with initial instances count: 3
2024-05-20 23:07:56 [restartedMain] INFO  : Registering application ACCOUNTSSERVICE with eureka with status UP
2024-05-20 23:07:56 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716264476436, current=UP, previous=STARTING]
2024-05-20 23:07:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService: registering service...
2024-05-20 23:07:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - registration status: 204
2024-05-20 23:07:56 [restartedMain] INFO  : Netty started on port 8080
2024-05-20 23:07:56 [restartedMain] INFO  : Updating port to 8080
2024-05-20 23:07:56 [restartedMain] INFO  : Started FinalProjectApplication in 1.378 seconds (JVM running for 1263.971)
2024-05-20 23:07:56 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 23:08:38 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:10:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:12:51 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 23:12:51 [Thread-1] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-20 23:12:51 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716264771679, current=DOWN, previous=UP]
2024-05-20 23:12:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:12:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:12:53 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:12:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:12:56 [Thread-1] INFO  : Unregistering ...
2024-05-20 23:12:56 [Thread-1] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-20 23:12:56 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:12:57 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 27384 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:12:57 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:12:57 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:12:57 [restartedMain] INFO  : Finished Spring Data repository scanning in 20 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-20 23:12:57 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-20 23:12:57 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:12:57 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:12:57 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:12:57 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3b2e0883, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6f9dd76e]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:12:57 [cluster-ClusterId{value='664c1f49bf7c72326351aa7d', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:725}] to localhost:27017
2024-05-20 23:12:57 [cluster-ClusterId{value='664c1f49bf7c72326351aa7d', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1615501}
2024-05-20 23:12:57 [cluster-rtt-ClusterId{value='664c1f49bf7c72326351aa7d', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:3, serverValue:726}] to localhost:27017
2024-05-20 23:12:57 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:12:57 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 23:12:57 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:12:57 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:12:57 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:12:57 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:12:57 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:12:57 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:12:57 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:12:57 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:12:57 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:12:57 [restartedMain] INFO  : Application is null : false
2024-05-20 23:12:57 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:12:57 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:12:57 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:12:58 [restartedMain] INFO  : The response status is 200
2024-05-20 23:12:58 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:12:58 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:12:58 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716264778007 with initial instances count: 3
2024-05-20 23:12:58 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-20 23:12:58 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716264778008, current=UP, previous=STARTING]
2024-05-20 23:12:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:12:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:12:58 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 23:12:58 [restartedMain] INFO  : Updating port to 8081
2024-05-20 23:12:58 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.326 seconds (JVM running for 563.5)
2024-05-20 23:12:58 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 23:12:59 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 23:12:59 [Thread-15] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-20 23:12:59 [Thread-15] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716264779034, current=DOWN, previous=UP]
2024-05-20 23:12:59 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:12:59 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:13:01 [Thread-15] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:13:04 [Thread-15] INFO  : Unregistering ...
2024-05-20 23:13:04 [Thread-15] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-20 23:13:04 [Thread-15] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:13:04 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 27384 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:13:04 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:13:04 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:13:04 [restartedMain] INFO  : Finished Spring Data repository scanning in 21 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-20 23:13:04 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-20 23:13:04 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:13:04 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:13:04 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:13:04 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@34ffa115, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6f9dd76e]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:13:04 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:13:04 [cluster-ClusterId{value='664c1f50bf7c72326351aa7e', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:5, serverValue:728}] to localhost:27017
2024-05-20 23:13:04 [cluster-rtt-ClusterId{value='664c1f50bf7c72326351aa7e', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:727}] to localhost:27017
2024-05-20 23:13:04 [cluster-ClusterId{value='664c1f50bf7c72326351aa7e', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2549200}
2024-05-20 23:13:04 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 23:13:04 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:13:04 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:13:05 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:13:05 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:13:05 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:13:05 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:13:05 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:13:05 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:13:05 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:13:05 [restartedMain] INFO  : Application is null : false
2024-05-20 23:13:05 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:13:05 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:13:05 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:13:05 [restartedMain] INFO  : The response status is 200
2024-05-20 23:13:05 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:13:05 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:13:05 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716264785095 with initial instances count: 3
2024-05-20 23:13:05 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-20 23:13:05 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716264785096, current=UP, previous=STARTING]
2024-05-20 23:13:05 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:13:05 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:13:05 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 23:13:05 [restartedMain] INFO  : Updating port to 8081
2024-05-20 23:13:05 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.149 seconds (JVM running for 570.631)
2024-05-20 23:13:05 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 23:15:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:17:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:18:05 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:19:44 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 23:19:44 [Thread-22] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-20 23:19:44 [Thread-22] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716265184193, current=DOWN, previous=UP]
2024-05-20 23:19:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:19:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:19:46 [Thread-22] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:19:49 [Thread-22] INFO  : Unregistering ...
2024-05-20 23:19:49 [Thread-22] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-20 23:19:49 [Thread-22] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:19:49 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 27384 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:19:49 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:19:49 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:19:49 [restartedMain] INFO  : Finished Spring Data repository scanning in 12 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-20 23:19:49 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-20 23:19:49 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:19:49 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:19:49 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:19:49 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1a7d21c9, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6f9dd76e]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:19:49 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:19:49 [cluster-ClusterId{value='664c20e5bf7c72326351aa7f', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:8, serverValue:730}] to localhost:27017
2024-05-20 23:19:49 [cluster-rtt-ClusterId{value='664c20e5bf7c72326351aa7f', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:729}] to localhost:27017
2024-05-20 23:19:49 [cluster-ClusterId{value='664c20e5bf7c72326351aa7f', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2435800}
2024-05-20 23:19:49 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 23:19:49 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:19:50 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:19:50 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:19:50 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:19:50 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:19:50 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:19:50 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:19:50 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:19:50 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:19:50 [restartedMain] INFO  : Application is null : false
2024-05-20 23:19:50 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:19:50 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:19:50 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:19:50 [restartedMain] INFO  : The response status is 200
2024-05-20 23:19:50 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:19:50 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:19:50 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716265190319 with initial instances count: 3
2024-05-20 23:19:50 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-20 23:19:50 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716265190320, current=UP, previous=STARTING]
2024-05-20 23:19:50 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:19:50 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 23:19:50 [restartedMain] INFO  : Updating port to 8081
2024-05-20 23:19:50 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:19:50 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.276 seconds (JVM running for 975.892)
2024-05-20 23:19:50 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 23:19:51 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 23:19:51 [Thread-36] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-20 23:19:51 [Thread-36] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716265191422, current=DOWN, previous=UP]
2024-05-20 23:19:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:19:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:19:53 [Thread-36] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:19:56 [Thread-36] INFO  : Unregistering ...
2024-05-20 23:19:56 [Thread-36] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-20 23:19:56 [Thread-36] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:19:56 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 27384 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:19:56 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:19:56 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:19:56 [restartedMain] INFO  : Finished Spring Data repository scanning in 11 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-20 23:19:56 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-20 23:19:56 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:19:56 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:19:56 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:19:57 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@4ce999c6, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6f9dd76e]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:19:57 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:19:57 [cluster-rtt-ClusterId{value='664c20edbf7c72326351aa80', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:10, serverValue:731}] to localhost:27017
2024-05-20 23:19:57 [cluster-ClusterId{value='664c20edbf7c72326351aa80', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:9, serverValue:732}] to localhost:27017
2024-05-20 23:19:57 [cluster-ClusterId{value='664c20edbf7c72326351aa80', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3850001}
2024-05-20 23:19:57 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 23:19:57 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:19:57 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:19:57 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:19:57 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:19:57 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:19:57 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:19:57 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:19:57 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:19:57 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:19:57 [restartedMain] INFO  : Application is null : false
2024-05-20 23:19:57 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:19:57 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:19:57 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:19:57 [restartedMain] INFO  : The response status is 200
2024-05-20 23:19:57 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:19:57 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:19:57 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716265197440 with initial instances count: 3
2024-05-20 23:19:57 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-20 23:19:57 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716265197441, current=UP, previous=STARTING]
2024-05-20 23:19:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:19:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:19:57 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 23:19:57 [restartedMain] INFO  : Updating port to 8081
2024-05-20 23:19:57 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.018 seconds (JVM running for 982.883)
2024-05-20 23:19:57 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 23:20:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:22:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:24:57 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:25:13 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 23:25:13 [Thread-50] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-20 23:25:13 [Thread-50] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716265513746, current=DOWN, previous=UP]
2024-05-20 23:25:13 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:25:13 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:25:15 [Thread-50] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:25:18 [Thread-50] INFO  : Unregistering ...
2024-05-20 23:25:18 [Thread-50] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-20 23:25:18 [Thread-50] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:25:19 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 27384 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:25:19 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:25:19 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:25:19 [restartedMain] INFO  : Finished Spring Data repository scanning in 12 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-20 23:25:19 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-20 23:25:19 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:25:19 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:25:19 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:25:19 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1fded2fd, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6f9dd76e]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:25:19 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:25:19 [cluster-rtt-ClusterId{value='664c222fbf7c72326351aa81', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:12, serverValue:734}] to localhost:27017
2024-05-20 23:25:19 [cluster-ClusterId{value='664c222fbf7c72326351aa81', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:11, serverValue:733}] to localhost:27017
2024-05-20 23:25:19 [cluster-ClusterId{value='664c222fbf7c72326351aa81', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2166801}
2024-05-20 23:25:19 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 23:25:19 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:25:19 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:25:19 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:25:19 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:25:19 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:25:19 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:25:19 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:25:19 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:25:19 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:25:19 [restartedMain] INFO  : Application is null : false
2024-05-20 23:25:19 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:25:19 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:25:19 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:25:19 [restartedMain] INFO  : The response status is 200
2024-05-20 23:25:19 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:25:19 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:25:19 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716265519933 with initial instances count: 3
2024-05-20 23:25:19 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-20 23:25:19 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716265519934, current=UP, previous=STARTING]
2024-05-20 23:25:19 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:25:19 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:25:19 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 23:25:19 [restartedMain] INFO  : Updating port to 8081
2024-05-20 23:25:20 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.214 seconds (JVM running for 1305.394)
2024-05-20 23:25:20 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 23:25:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:26:09 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-20 23:26:09 [Thread-64] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-20 23:26:09 [Thread-64] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716265569360, current=DOWN, previous=UP]
2024-05-20 23:26:09 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:26:09 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:26:11 [Thread-64] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:26:14 [Thread-64] INFO  : Unregistering ...
2024-05-20 23:26:14 [Thread-64] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-20 23:26:14 [Thread-64] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:26:14 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 27384 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:26:14 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:26:14 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:26:15 [restartedMain] INFO  : Finished Spring Data repository scanning in 22 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-20 23:26:15 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-20 23:26:15 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:26:15 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:26:15 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:26:15 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@67d1b5e5, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6f9dd76e]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:26:15 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:26:15 [cluster-ClusterId{value='664c2267bf7c72326351aa82', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:14, serverValue:736}] to localhost:27017
2024-05-20 23:26:15 [cluster-rtt-ClusterId{value='664c2267bf7c72326351aa82', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:13, serverValue:735}] to localhost:27017
2024-05-20 23:26:15 [cluster-ClusterId{value='664c2267bf7c72326351aa82', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3209000}
2024-05-20 23:26:15 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 23:26:15 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:26:15 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:26:15 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:26:15 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:26:15 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:26:15 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:26:15 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:26:15 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:26:15 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:26:15 [restartedMain] INFO  : Application is null : false
2024-05-20 23:26:15 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:26:15 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:26:15 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:26:15 [restartedMain] INFO  : The response status is 200
2024-05-20 23:26:15 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:26:15 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:26:15 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716265575618 with initial instances count: 3
2024-05-20 23:26:15 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-20 23:26:15 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716265575618, current=UP, previous=STARTING]
2024-05-20 23:26:15 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:26:15 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:26:15 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 23:26:15 [restartedMain] INFO  : Updating port to 8081
2024-05-20 23:26:15 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.179 seconds (JVM running for 1361.092)
2024-05-20 23:26:15 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 23:26:16 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-20 23:26:16 [Thread-78] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-20 23:26:16 [Thread-78] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716265576706, current=DOWN, previous=UP]
2024-05-20 23:26:16 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:26:16 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:26:18 [Thread-78] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:26:21 [Thread-78] INFO  : Unregistering ...
2024-05-20 23:26:21 [Thread-78] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-20 23:26:21 [Thread-78] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:26:21 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 27384 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:26:21 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:26:22 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:26:22 [restartedMain] INFO  : Finished Spring Data repository scanning in 17 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-20 23:26:22 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-20 23:26:22 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:26:22 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:26:22 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:26:22 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@738c4fa5, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6f9dd76e]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:26:22 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:26:22 [cluster-ClusterId{value='664c226ebf7c72326351aa83', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:16, serverValue:738}] to localhost:27017
2024-05-20 23:26:22 [cluster-rtt-ClusterId{value='664c226ebf7c72326351aa83', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:15, serverValue:737}] to localhost:27017
2024-05-20 23:26:22 [cluster-ClusterId{value='664c226ebf7c72326351aa83', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1752500}
2024-05-20 23:26:22 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 23:26:22 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:26:22 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:26:22 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:26:22 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:26:22 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:26:22 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:26:22 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:26:22 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:26:22 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:26:22 [restartedMain] INFO  : Application is null : false
2024-05-20 23:26:22 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:26:22 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:26:22 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:26:22 [restartedMain] INFO  : The response status is 200
2024-05-20 23:26:22 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:26:22 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:26:22 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716265582623 with initial instances count: 3
2024-05-20 23:26:22 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-20 23:26:22 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716265582624, current=UP, previous=STARTING]
2024-05-20 23:26:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:26:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:26:22 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 23:26:22 [restartedMain] INFO  : Updating port to 8081
2024-05-20 23:26:22 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.032 seconds (JVM running for 1368.165)
2024-05-20 23:26:22 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-20 23:27:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:30:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:31:22 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:32:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:35:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:36:22 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:37:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:40:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:41:22 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:41:48 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-20 23:41:48 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716266508519, current=DOWN, previous=UP]
2024-05-20 23:41:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:41:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:41:50 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:41:53 [DiscoveryClient-1] WARN  : task supervisor shutting down, can't accept the task
2024-05-20 23:41:53 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 23:41:53 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-20 23:41:53 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:41:59 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 20416 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:41:59 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:41:59 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 23:41:59 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 23:42:00 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:42:00 [restartedMain] INFO  : Finished Spring Data repository scanning in 119 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-20 23:42:00 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-20 23:42:00 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:42:00 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:42:00 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:42:00 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@751f926d, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@37b003bd]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:42:01 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:42:01 [cluster-ClusterId{value='664c2618aedd022bf351e856', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:740}] to localhost:27017
2024-05-20 23:42:01 [cluster-rtt-ClusterId{value='664c2618aedd022bf351e856', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:739}] to localhost:27017
2024-05-20 23:42:01 [cluster-ClusterId{value='664c2618aedd022bf351e856', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=71817700}
2024-05-20 23:42:01 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 23:42:01 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:42:01 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:42:01 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:42:01 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:42:02 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:42:02 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:42:02 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:42:02 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:42:02 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:42:02 [restartedMain] INFO  : Application is null : false
2024-05-20 23:42:02 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:42:02 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:42:02 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:42:02 [restartedMain] INFO  : The response status is 200
2024-05-20 23:42:02 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:42:02 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:42:02 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716266522318 with initial instances count: 3
2024-05-20 23:42:02 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-20 23:42:02 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716266522319, current=UP, previous=STARTING]
2024-05-20 23:42:02 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:42:02 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:42:02 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 23:42:02 [restartedMain] INFO  : Updating port to 8081
2024-05-20 23:42:02 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.695 seconds (JVM running for 4.383)
2024-05-20 23:42:13 [nioEventLoopGroup-9-3] INFO  : Opened connection [connectionId{localValue:15, serverValue:742}] to localhost:27017
2024-05-20 23:42:13 [nioEventLoopGroup-9-4] INFO  : Opened connection [connectionId{localValue:16, serverValue:741}] to localhost:27017
2024-05-20 23:42:13 [nioEventLoopGroup-9-5] INFO  : Opened connection [connectionId{localValue:17, serverValue:743}] to localhost:27017
2024-05-20 23:42:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:45:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:47:02 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:47:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:50:35 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:52:02 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:52:18 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-20 23:52:18 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716267138526, current=DOWN, previous=UP]
2024-05-20 23:52:18 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:52:18 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:52:20 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:52:23 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 23:52:23 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-20 23:52:23 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:52:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:53:32 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 25224 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:53:32 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:53:32 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 23:53:32 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 23:53:33 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:53:33 [restartedMain] INFO  : Finished Spring Data repository scanning in 111 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-20 23:53:33 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-20 23:53:33 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:53:33 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:53:33 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:53:34 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@51805c9d, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@1f35fd69]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:53:34 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:53:34 [cluster-ClusterId{value='664c28ce6a8b7a4e732db1db', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:745}] to localhost:27017
2024-05-20 23:53:34 [cluster-rtt-ClusterId{value='664c28ce6a8b7a4e732db1db', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:744}] to localhost:27017
2024-05-20 23:53:34 [cluster-ClusterId{value='664c28ce6a8b7a4e732db1db', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=52002700}
2024-05-20 23:53:34 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 23:53:34 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:53:34 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:53:35 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:53:35 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:53:35 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:53:35 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:53:35 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:53:35 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:53:35 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:53:35 [restartedMain] INFO  : Application is null : false
2024-05-20 23:53:35 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:53:35 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:53:35 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:53:35 [restartedMain] INFO  : The response status is 200
2024-05-20 23:53:35 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:53:35 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:53:35 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716267215465 with initial instances count: 2
2024-05-20 23:53:35 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-20 23:53:35 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716267215466, current=UP, previous=STARTING]
2024-05-20 23:53:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:53:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:53:35 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 23:53:35 [restartedMain] INFO  : Updating port to 8081
2024-05-20 23:53:35 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.351 seconds (JVM running for 4.009)
2024-05-20 23:55:34 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-20 23:55:34 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716267334401, current=DOWN, previous=UP]
2024-05-20 23:55:34 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:55:34 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:55:35 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:55:36 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:55:39 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 23:55:39 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-20 23:55:39 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:55:43 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 15716 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:55:43 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:55:43 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 23:55:43 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 23:55:44 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:55:44 [restartedMain] INFO  : Finished Spring Data repository scanning in 104 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-20 23:55:44 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-20 23:55:44 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:55:44 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:55:44 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:55:44 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@157a4260, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2c12d70d]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:55:44 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:55:44 [cluster-rtt-ClusterId{value='664c2950c26dd26370779ecb', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:746}] to localhost:27017
2024-05-20 23:55:44 [cluster-ClusterId{value='664c2950c26dd26370779ecb', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:747}] to localhost:27017
2024-05-20 23:55:44 [cluster-ClusterId{value='664c2950c26dd26370779ecb', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=45426700}
2024-05-20 23:55:44 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 23:55:45 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:55:45 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:55:45 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:55:45 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:55:45 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:55:45 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:55:45 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:55:45 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:55:45 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:55:45 [restartedMain] INFO  : Application is null : false
2024-05-20 23:55:45 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:55:45 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:55:45 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:55:46 [restartedMain] INFO  : The response status is 200
2024-05-20 23:55:46 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:55:46 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:55:46 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716267346157 with initial instances count: 3
2024-05-20 23:55:46 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-20 23:55:46 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716267346160, current=UP, previous=STARTING]
2024-05-20 23:55:46 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:55:46 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 23:55:46 [restartedMain] INFO  : Updating port to 8081
2024-05-20 23:55:46 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:55:46 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.41 seconds (JVM running for 4.054)
2024-05-20 23:55:50 [reactor-http-nio-3] ERROR : [6b1106e5-1]  500 Server Error for HTTP POST "/transactions/create"
java.lang.IllegalArgumentException: Not enough variable values available to expand 'accountNumber'
	at org.springframework.web.util.UriComponents$VarArgsTemplateVariables.getValue(UriComponents.java:370)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler project.transactionsservice.application.controller.TransactionsController#createTransactions(TransactionDTO) [DispatcherHandler]
	*__checkpoint ⇢ HTTP POST "/transactions/create" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.web.util.UriComponents$VarArgsTemplateVariables.getValue(UriComponents.java:370)
		at org.springframework.web.util.UriComponents.expandUriComponent(UriComponents.java:263)
		at org.springframework.web.util.HierarchicalUriComponents$FullPathComponent.expand(HierarchicalUriComponents.java:923)
		at org.springframework.web.util.HierarchicalUriComponents.expandInternal(HierarchicalUriComponents.java:440)
		at org.springframework.web.util.HierarchicalUriComponents.expandInternal(HierarchicalUriComponents.java:53)
		at org.springframework.web.util.UriComponents.expand(UriComponents.java:172)
		at org.springframework.web.util.DefaultUriBuilderFactory$DefaultUriBuilder.build(DefaultUriBuilderFactory.java:403)
		at org.springframework.web.util.DefaultUriBuilderFactory.expand(DefaultUriBuilderFactory.java:154)
		at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultRequestBodyUriSpec.uri(DefaultWebClient.java:196)
		at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultRequestBodyUriSpec.uri(DefaultWebClient.java:163)
		at project.transactionsservice.infrastructure.servicecalls.AccountService.updateAccount(AccountService.java:34)
		at project.transactionsservice.domain.strategies.TransactionsStrategies.lambda$depositAndWithdrawalStrategy$1(TransactionsStrategies.java:48)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:113)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2400)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:238)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:200)
		at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:57)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:439)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:493)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:768)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-20 23:57:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:58:52 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-20 23:58:52 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716267532105, current=DOWN, previous=UP]
2024-05-20 23:58:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:58:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:58:54 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-20 23:58:57 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-20 23:58:57 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-20 23:58:57 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-20 23:59:00 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 26140 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-20 23:59:00 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-20 23:59:00 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-20 23:59:00 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-20 23:59:01 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-20 23:59:01 [restartedMain] INFO  : Finished Spring Data repository scanning in 118 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-20 23:59:01 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-20 23:59:01 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:59:01 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:59:01 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-20 23:59:02 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@157a4260, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2c12d70d]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-20 23:59:02 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:59:02 [cluster-ClusterId{value='664c2a168a1db6648db074c5', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:748}] to localhost:27017
2024-05-20 23:59:02 [cluster-rtt-ClusterId{value='664c2a168a1db6648db074c5', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:749}] to localhost:27017
2024-05-20 23:59:02 [cluster-ClusterId{value='664c2a168a1db6648db074c5', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=58443701}
2024-05-20 23:59:02 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-20 23:59:02 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-20 23:59:02 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-20 23:59:03 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-20 23:59:03 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-20 23:59:03 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-20 23:59:03 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-20 23:59:03 [restartedMain] INFO  : Disable delta property : false
2024-05-20 23:59:03 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-20 23:59:03 [restartedMain] INFO  : Force full registry fetch : false
2024-05-20 23:59:03 [restartedMain] INFO  : Application is null : false
2024-05-20 23:59:03 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-20 23:59:03 [restartedMain] INFO  : Application version is -1: true
2024-05-20 23:59:03 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-20 23:59:03 [restartedMain] INFO  : The response status is 200
2024-05-20 23:59:03 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-20 23:59:03 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-20 23:59:03 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716267543401 with initial instances count: 2
2024-05-20 23:59:03 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-20 23:59:03 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716267543403, current=UP, previous=STARTING]
2024-05-20 23:59:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-20 23:59:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-20 23:59:03 [restartedMain] INFO  : Netty started on port 8081
2024-05-20 23:59:03 [restartedMain] INFO  : Updating port to 8081
2024-05-20 23:59:03 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.259 seconds (JVM running for 3.906)
2024-05-20 23:59:11 [reactor-http-nio-3] ERROR : [4f0a9514-1]  500 Server Error for HTTP POST "/transactions/create"
java.lang.IllegalArgumentException: Not enough variable values available to expand 'accountNumber'
	at org.springframework.web.util.UriComponents$VarArgsTemplateVariables.getValue(UriComponents.java:370)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler project.transactionsservice.application.controller.TransactionsController#createTransactions(TransactionDTO) [DispatcherHandler]
	*__checkpoint ⇢ HTTP POST "/transactions/create" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.web.util.UriComponents$VarArgsTemplateVariables.getValue(UriComponents.java:370)
		at org.springframework.web.util.UriComponents.expandUriComponent(UriComponents.java:263)
		at org.springframework.web.util.HierarchicalUriComponents$FullPathComponent.expand(HierarchicalUriComponents.java:923)
		at org.springframework.web.util.HierarchicalUriComponents.expandInternal(HierarchicalUriComponents.java:440)
		at org.springframework.web.util.HierarchicalUriComponents.expandInternal(HierarchicalUriComponents.java:53)
		at org.springframework.web.util.UriComponents.expand(UriComponents.java:172)
		at org.springframework.web.util.DefaultUriBuilderFactory$DefaultUriBuilder.build(DefaultUriBuilderFactory.java:403)
		at org.springframework.web.util.DefaultUriBuilderFactory.expand(DefaultUriBuilderFactory.java:154)
		at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultRequestBodyUriSpec.uri(DefaultWebClient.java:196)
		at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultRequestBodyUriSpec.uri(DefaultWebClient.java:163)
		at project.transactionsservice.infrastructure.servicecalls.AccountService.updateAccount(AccountService.java:34)
		at project.transactionsservice.domain.strategies.TransactionsStrategies.lambda$depositAndWithdrawalStrategy$1(TransactionsStrategies.java:48)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:113)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2400)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:238)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:200)
		at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:57)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:439)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:493)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:768)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 00:00:35 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:00:46 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 00:00:46 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716267646935, current=DOWN, previous=UP]
2024-05-21 00:00:46 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:00:46 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:00:49 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 00:00:52 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 00:00:52 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 00:00:52 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 00:00:55 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 27548 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 00:00:55 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 00:00:55 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 00:00:55 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 00:00:56 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 00:00:56 [restartedMain] INFO  : Finished Spring Data repository scanning in 115 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 00:00:56 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-21 00:00:56 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:00:56 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:00:56 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:00:56 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3acd735d, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@41337b9c]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 00:00:56 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:00:56 [cluster-rtt-ClusterId{value='664c2a889bebe36e0318e602', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:750}] to localhost:27017
2024-05-21 00:00:56 [cluster-ClusterId{value='664c2a889bebe36e0318e602', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:751}] to localhost:27017
2024-05-21 00:00:56 [cluster-ClusterId{value='664c2a889bebe36e0318e602', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=64560400}
2024-05-21 00:00:57 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 00:00:57 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:00:57 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 00:00:57 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 00:00:57 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 00:00:57 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 00:00:57 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:00:57 [restartedMain] INFO  : Disable delta property : false
2024-05-21 00:00:57 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 00:00:57 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 00:00:57 [restartedMain] INFO  : Application is null : false
2024-05-21 00:00:57 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 00:00:57 [restartedMain] INFO  : Application version is -1: true
2024-05-21 00:00:57 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 00:00:58 [restartedMain] INFO  : The response status is 200
2024-05-21 00:00:58 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 00:00:58 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 00:00:58 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716267658204 with initial instances count: 3
2024-05-21 00:00:58 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 00:00:58 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716267658206, current=UP, previous=STARTING]
2024-05-21 00:00:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:00:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:00:58 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 00:00:58 [restartedMain] INFO  : Updating port to 8081
2024-05-21 00:00:58 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.293 seconds (JVM running for 3.921)
2024-05-21 00:02:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:05:35 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:05:57 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:06:49 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-21 00:06:49 [Thread-1] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 00:06:49 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268009057, current=DOWN, previous=UP]
2024-05-21 00:06:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:06:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:06:51 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-21 00:06:54 [Thread-1] INFO  : Unregistering ...
2024-05-21 00:06:54 [Thread-1] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 00:06:54 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-21 00:06:54 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 27548 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 00:06:54 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 00:06:54 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 00:06:54 [restartedMain] INFO  : Finished Spring Data repository scanning in 18 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 00:06:54 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-21 00:06:54 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:06:54 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:06:54 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:06:54 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@796b960f, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@41337b9c]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 00:06:54 [cluster-ClusterId{value='664c2bee9bebe36e0318e603', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:3, serverValue:758}] to localhost:27017
2024-05-21 00:06:54 [cluster-rtt-ClusterId{value='664c2bee9bebe36e0318e603', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:757}] to localhost:27017
2024-05-21 00:06:54 [cluster-ClusterId{value='664c2bee9bebe36e0318e603', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1811900}
2024-05-21 00:06:54 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:06:54 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 00:06:54 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:06:54 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 00:06:55 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 00:06:55 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 00:06:55 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 00:06:55 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:06:55 [restartedMain] INFO  : Disable delta property : false
2024-05-21 00:06:55 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 00:06:55 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 00:06:55 [restartedMain] INFO  : Application is null : false
2024-05-21 00:06:55 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 00:06:55 [restartedMain] INFO  : Application version is -1: true
2024-05-21 00:06:55 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 00:06:55 [restartedMain] INFO  : The response status is 200
2024-05-21 00:06:55 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 00:06:55 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 00:06:55 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716268015252 with initial instances count: 3
2024-05-21 00:06:55 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 00:06:55 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268015254, current=UP, previous=STARTING]
2024-05-21 00:06:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:06:55 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 00:06:55 [restartedMain] INFO  : Updating port to 8081
2024-05-21 00:06:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:06:55 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.282 seconds (JVM running for 361.051)
2024-05-21 00:06:55 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 00:06:56 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-21 00:06:56 [Thread-15] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 00:06:56 [Thread-15] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268016477, current=DOWN, previous=UP]
2024-05-21 00:06:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:06:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:06:58 [Thread-15] INFO  : Shutting down DiscoveryClient ...
2024-05-21 00:07:01 [Thread-15] INFO  : Unregistering ...
2024-05-21 00:07:01 [Thread-15] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 00:07:01 [Thread-15] INFO  : Completed shut down of DiscoveryClient
2024-05-21 00:07:01 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 27548 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 00:07:01 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 00:07:01 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 00:07:01 [restartedMain] INFO  : Finished Spring Data repository scanning in 14 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 00:07:01 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-21 00:07:01 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:07:01 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:07:01 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:07:01 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@46fbf9d, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@41337b9c]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 00:07:01 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:07:01 [cluster-ClusterId{value='664c2bf59bebe36e0318e604', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:5, serverValue:760}] to localhost:27017
2024-05-21 00:07:01 [cluster-rtt-ClusterId{value='664c2bf59bebe36e0318e604', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:759}] to localhost:27017
2024-05-21 00:07:01 [cluster-ClusterId{value='664c2bf59bebe36e0318e604', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2505600}
2024-05-21 00:07:01 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 00:07:01 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:07:02 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 00:07:02 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 00:07:02 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 00:07:02 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 00:07:02 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:07:02 [restartedMain] INFO  : Disable delta property : false
2024-05-21 00:07:02 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 00:07:02 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 00:07:02 [restartedMain] INFO  : Application is null : false
2024-05-21 00:07:02 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 00:07:02 [restartedMain] INFO  : Application version is -1: true
2024-05-21 00:07:02 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 00:07:02 [restartedMain] INFO  : The response status is 200
2024-05-21 00:07:02 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 00:07:02 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 00:07:02 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716268022298 with initial instances count: 3
2024-05-21 00:07:02 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 00:07:02 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268022299, current=UP, previous=STARTING]
2024-05-21 00:07:02 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:07:02 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:07:02 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 00:07:02 [restartedMain] INFO  : Updating port to 8081
2024-05-21 00:07:02 [restartedMain] INFO  : Started TransactionsServiceApplication in 0.879 seconds (JVM running for 367.971)
2024-05-21 00:07:02 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 00:07:17 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 00:07:17 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268037075, current=DOWN, previous=UP]
2024-05-21 00:07:17 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:07:17 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:07:19 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 00:07:22 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 00:07:22 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 00:07:22 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 00:07:26 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 8900 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 00:07:26 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 00:07:26 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 00:07:26 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 00:07:26 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 00:07:26 [restartedMain] INFO  : Finished Spring Data repository scanning in 107 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 00:07:27 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-21 00:07:27 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:07:27 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:07:27 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:07:27 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@498c1d49, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@42dd4ea6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 00:07:27 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:07:27 [cluster-ClusterId{value='664c2c0fc2147428d16ad315', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:761}] to localhost:27017
2024-05-21 00:07:27 [cluster-rtt-ClusterId{value='664c2c0fc2147428d16ad315', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:762}] to localhost:27017
2024-05-21 00:07:27 [cluster-ClusterId{value='664c2c0fc2147428d16ad315', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=52782299}
2024-05-21 00:07:27 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 00:07:27 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:07:28 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 00:07:28 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 00:07:28 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 00:07:28 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 00:07:28 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:07:28 [restartedMain] INFO  : Disable delta property : false
2024-05-21 00:07:28 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 00:07:28 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 00:07:28 [restartedMain] INFO  : Application is null : false
2024-05-21 00:07:28 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 00:07:28 [restartedMain] INFO  : Application version is -1: true
2024-05-21 00:07:28 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 00:07:28 [restartedMain] INFO  : The response status is 200
2024-05-21 00:07:28 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 00:07:28 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 00:07:28 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716268048801 with initial instances count: 3
2024-05-21 00:07:28 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 00:07:28 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268048803, current=UP, previous=STARTING]
2024-05-21 00:07:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:07:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:07:28 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 00:07:28 [restartedMain] INFO  : Updating port to 8081
2024-05-21 00:07:28 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.258 seconds (JVM running for 3.903)
2024-05-21 00:07:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:10:35 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:12:24 [File Watcher] INFO  : Restarting due to 2 class path changes (0 additions, 2 deletions, 0 modifications)
2024-05-21 00:12:24 [Thread-1] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 00:12:24 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268344473, current=DOWN, previous=UP]
2024-05-21 00:12:24 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:12:24 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:12:26 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-21 00:12:28 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:12:29 [DiscoveryClient-0] WARN  : task supervisor shutting down, can't accept the task
2024-05-21 00:12:29 [Thread-1] INFO  : Unregistering ...
2024-05-21 00:12:29 [Thread-1] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 00:12:29 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-21 00:12:29 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 8900 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 00:12:29 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 00:12:30 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 00:12:30 [restartedMain] INFO  : Finished Spring Data repository scanning in 15 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 00:12:30 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-21 00:12:30 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:12:30 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:12:30 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:12:30 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@36f7dd9c, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@42dd4ea6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 00:12:30 [cluster-rtt-ClusterId{value='664c2d3ec2147428d16ad316', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:764}] to localhost:27017
2024-05-21 00:12:30 [cluster-ClusterId{value='664c2d3ec2147428d16ad316', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:3, serverValue:763}] to localhost:27017
2024-05-21 00:12:30 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:12:30 [cluster-ClusterId{value='664c2d3ec2147428d16ad316', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1522401}
2024-05-21 00:12:30 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 00:12:30 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:12:30 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 00:12:30 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 00:12:30 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 00:12:30 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 00:12:30 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:12:30 [restartedMain] INFO  : Disable delta property : false
2024-05-21 00:12:30 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 00:12:30 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 00:12:30 [restartedMain] INFO  : Application is null : false
2024-05-21 00:12:30 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 00:12:30 [restartedMain] INFO  : Application version is -1: true
2024-05-21 00:12:30 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 00:12:30 [restartedMain] INFO  : The response status is 200
2024-05-21 00:12:30 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 00:12:30 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 00:12:30 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716268350555 with initial instances count: 3
2024-05-21 00:12:30 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 00:12:30 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268350556, current=UP, previous=STARTING]
2024-05-21 00:12:30 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:12:30 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:12:30 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 00:12:30 [restartedMain] INFO  : Updating port to 8081
2024-05-21 00:12:30 [restartedMain] INFO  : Started TransactionsServiceApplication in 0.973 seconds (JVM running for 305.644)
2024-05-21 00:12:30 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 00:12:31 [File Watcher] INFO  : Restarting due to 2 class path changes (2 additions, 0 deletions, 0 modifications)
2024-05-21 00:12:31 [Thread-15] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 00:12:31 [Thread-15] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268351726, current=DOWN, previous=UP]
2024-05-21 00:12:31 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:12:31 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:12:33 [Thread-15] INFO  : Shutting down DiscoveryClient ...
2024-05-21 00:12:36 [Thread-15] INFO  : Unregistering ...
2024-05-21 00:12:36 [Thread-15] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 00:12:36 [Thread-15] INFO  : Completed shut down of DiscoveryClient
2024-05-21 00:12:36 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 8900 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 00:12:36 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 00:12:37 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 00:12:37 [restartedMain] INFO  : Finished Spring Data repository scanning in 13 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 00:12:37 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-21 00:12:37 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:12:37 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:12:37 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:12:37 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@2077b206, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@42dd4ea6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 00:12:37 [cluster-rtt-ClusterId{value='664c2d45c2147428d16ad317', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:766}] to localhost:27017
2024-05-21 00:12:37 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:12:37 [cluster-ClusterId{value='664c2d45c2147428d16ad317', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:5, serverValue:765}] to localhost:27017
2024-05-21 00:12:37 [cluster-ClusterId{value='664c2d45c2147428d16ad317', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3885101}
2024-05-21 00:12:37 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 00:12:37 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:12:37 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 00:12:37 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 00:12:37 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 00:12:37 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 00:12:37 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:12:37 [restartedMain] INFO  : Disable delta property : false
2024-05-21 00:12:37 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 00:12:37 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 00:12:37 [restartedMain] INFO  : Application is null : false
2024-05-21 00:12:37 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 00:12:37 [restartedMain] INFO  : Application version is -1: true
2024-05-21 00:12:37 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 00:12:37 [restartedMain] INFO  : The response status is 200
2024-05-21 00:12:37 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 00:12:37 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 00:12:37 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716268357788 with initial instances count: 3
2024-05-21 00:12:37 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 00:12:37 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268357790, current=UP, previous=STARTING]
2024-05-21 00:12:37 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:12:37 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 00:12:37 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:12:37 [restartedMain] INFO  : Updating port to 8081
2024-05-21 00:12:37 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.103 seconds (JVM running for 312.925)
2024-05-21 00:12:37 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 00:12:43 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-21 00:12:43 [Thread-22] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 00:12:43 [Thread-22] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268363931, current=DOWN, previous=UP]
2024-05-21 00:12:43 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:12:43 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:12:46 [Thread-22] INFO  : Shutting down DiscoveryClient ...
2024-05-21 00:12:49 [Thread-22] INFO  : Unregistering ...
2024-05-21 00:12:49 [Thread-22] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 00:12:49 [Thread-22] INFO  : Completed shut down of DiscoveryClient
2024-05-21 00:12:51 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 14756 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 00:12:51 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 00:12:51 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 00:12:51 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 00:12:52 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 00:12:52 [restartedMain] INFO  : Finished Spring Data repository scanning in 108 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 00:12:52 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-21 00:12:52 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:12:52 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:12:52 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:12:53 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@272ed460, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@191f541c]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 00:12:53 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:12:53 [cluster-ClusterId{value='664c2d552b9c78777daefa99', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:768}] to localhost:27017
2024-05-21 00:12:53 [cluster-rtt-ClusterId{value='664c2d552b9c78777daefa99', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:767}] to localhost:27017
2024-05-21 00:12:53 [cluster-ClusterId{value='664c2d552b9c78777daefa99', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=56578001}
2024-05-21 00:12:53 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 00:12:53 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:12:53 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 00:12:53 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 00:12:54 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 00:12:54 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 00:12:54 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:12:54 [restartedMain] INFO  : Disable delta property : false
2024-05-21 00:12:54 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 00:12:54 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 00:12:54 [restartedMain] INFO  : Application is null : false
2024-05-21 00:12:54 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 00:12:54 [restartedMain] INFO  : Application version is -1: true
2024-05-21 00:12:54 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 00:12:54 [restartedMain] INFO  : The response status is 200
2024-05-21 00:12:54 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 00:12:54 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 00:12:54 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716268374381 with initial instances count: 3
2024-05-21 00:12:54 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 00:12:54 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268374383, current=UP, previous=STARTING]
2024-05-21 00:12:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:12:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:12:54 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 00:12:54 [restartedMain] INFO  : Updating port to 8081
2024-05-21 00:12:54 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.355 seconds (JVM running for 4.171)
2024-05-21 00:12:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:13:29 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 00:13:29 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268409735, current=DOWN, previous=UP]
2024-05-21 00:13:29 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:13:29 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:13:31 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 00:13:34 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 00:13:34 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 00:13:34 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 00:13:38 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 17740 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 00:13:38 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 00:13:38 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 00:13:38 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 00:13:39 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 00:13:39 [restartedMain] INFO  : Finished Spring Data repository scanning in 104 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 00:13:39 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-21 00:13:39 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:13:39 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:13:39 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:13:39 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3acd735d, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@41337b9c]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 00:13:39 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:13:40 [cluster-rtt-ClusterId{value='664c2d83f4c9105cab006076', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:769}] to localhost:27017
2024-05-21 00:13:40 [cluster-ClusterId{value='664c2d83f4c9105cab006076', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:770}] to localhost:27017
2024-05-21 00:13:40 [cluster-ClusterId{value='664c2d83f4c9105cab006076', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=52724101}
2024-05-21 00:13:40 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 00:13:40 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:13:40 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 00:13:40 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 00:13:40 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 00:13:40 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 00:13:40 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:13:40 [restartedMain] INFO  : Disable delta property : false
2024-05-21 00:13:40 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 00:13:40 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 00:13:40 [restartedMain] INFO  : Application is null : false
2024-05-21 00:13:40 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 00:13:40 [restartedMain] INFO  : Application version is -1: true
2024-05-21 00:13:40 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 00:13:41 [restartedMain] INFO  : The response status is 200
2024-05-21 00:13:41 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 00:13:41 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 00:13:41 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716268421255 with initial instances count: 3
2024-05-21 00:13:41 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 00:13:41 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268421257, current=UP, previous=STARTING]
2024-05-21 00:13:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:13:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:13:41 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 00:13:41 [restartedMain] INFO  : Updating port to 8081
2024-05-21 00:13:41 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.262 seconds (JVM running for 3.888)
2024-05-21 00:15:35 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:17:28 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 00:17:28 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268648200, current=DOWN, previous=UP]
2024-05-21 00:17:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:17:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:17:30 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 00:17:33 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 00:17:33 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 00:17:33 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 00:17:37 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 8864 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 00:17:37 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 00:17:37 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 00:17:37 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 00:17:37 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 00:17:38 [restartedMain] INFO  : Finished Spring Data repository scanning in 105 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 00:17:38 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-21 00:17:38 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:17:38 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:17:38 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:17:38 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@46d760d3, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7ddbfb7a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 00:17:38 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:17:38 [cluster-ClusterId{value='664c2e72abaedb38d0202eea', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:772}] to localhost:27017
2024-05-21 00:17:38 [cluster-rtt-ClusterId{value='664c2e72abaedb38d0202eea', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:771}] to localhost:27017
2024-05-21 00:17:38 [cluster-ClusterId{value='664c2e72abaedb38d0202eea', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=53004199}
2024-05-21 00:17:38 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 00:17:38 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:17:39 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 00:17:39 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 00:17:39 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 00:17:39 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 00:17:39 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:17:39 [restartedMain] INFO  : Disable delta property : false
2024-05-21 00:17:39 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 00:17:39 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 00:17:39 [restartedMain] INFO  : Application is null : false
2024-05-21 00:17:39 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 00:17:39 [restartedMain] INFO  : Application version is -1: true
2024-05-21 00:17:39 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 00:17:40 [restartedMain] INFO  : The response status is 200
2024-05-21 00:17:40 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 00:17:40 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 00:17:40 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716268660063 with initial instances count: 3
2024-05-21 00:17:40 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 00:17:40 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268660065, current=UP, previous=STARTING]
2024-05-21 00:17:40 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:17:40 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:17:40 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 00:17:40 [restartedMain] INFO  : Updating port to 8081
2024-05-21 00:17:40 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.31 seconds (JVM running for 3.971)
2024-05-21 00:17:56 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:18:20 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-21 00:18:20 [Thread-1] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 00:18:20 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268700920, current=DOWN, previous=UP]
2024-05-21 00:18:20 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:18:20 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:18:23 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-21 00:18:26 [Thread-1] INFO  : Unregistering ...
2024-05-21 00:18:26 [Thread-1] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 00:18:26 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-21 00:18:26 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 8864 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 00:18:26 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 00:18:26 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 00:18:26 [restartedMain] INFO  : Finished Spring Data repository scanning in 24 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 00:18:26 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-21 00:18:26 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:18:26 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:18:26 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:18:26 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1dd20591, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7ddbfb7a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 00:18:26 [cluster-rtt-ClusterId{value='664c2ea2abaedb38d0202eeb', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:773}] to localhost:27017
2024-05-21 00:18:26 [cluster-ClusterId{value='664c2ea2abaedb38d0202eeb', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:3, serverValue:774}] to localhost:27017
2024-05-21 00:18:26 [cluster-ClusterId{value='664c2ea2abaedb38d0202eeb', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2042500}
2024-05-21 00:18:26 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:18:26 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 00:18:26 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:18:26 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 00:18:26 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 00:18:27 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 00:18:27 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 00:18:27 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:18:27 [restartedMain] INFO  : Disable delta property : false
2024-05-21 00:18:27 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 00:18:27 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 00:18:27 [restartedMain] INFO  : Application is null : false
2024-05-21 00:18:27 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 00:18:27 [restartedMain] INFO  : Application version is -1: true
2024-05-21 00:18:27 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 00:18:27 [restartedMain] INFO  : The response status is 200
2024-05-21 00:18:27 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 00:18:27 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 00:18:27 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716268707059 with initial instances count: 3
2024-05-21 00:18:27 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 00:18:27 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268707061, current=UP, previous=STARTING]
2024-05-21 00:18:27 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:18:27 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:18:27 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 00:18:27 [restartedMain] INFO  : Updating port to 8081
2024-05-21 00:18:27 [restartedMain] INFO  : Started TransactionsServiceApplication in 1.136 seconds (JVM running for 50.971)
2024-05-21 00:18:27 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 00:18:28 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-21 00:18:28 [Thread-15] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 00:18:28 [Thread-15] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268708172, current=DOWN, previous=UP]
2024-05-21 00:18:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:18:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:18:30 [Thread-15] INFO  : Shutting down DiscoveryClient ...
2024-05-21 00:18:33 [Thread-15] INFO  : Unregistering ...
2024-05-21 00:18:33 [Thread-15] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 00:18:33 [Thread-15] INFO  : Completed shut down of DiscoveryClient
2024-05-21 00:18:33 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 8864 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 00:18:33 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 00:18:33 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 00:18:33 [restartedMain] INFO  : Finished Spring Data repository scanning in 13 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 00:18:33 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-21 00:18:33 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:18:33 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:18:33 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:18:33 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3897e9b9, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7ddbfb7a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 00:18:33 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:18:33 [cluster-rtt-ClusterId{value='664c2ea9abaedb38d0202eec', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:775}] to localhost:27017
2024-05-21 00:18:33 [cluster-ClusterId{value='664c2ea9abaedb38d0202eec', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:5, serverValue:776}] to localhost:27017
2024-05-21 00:18:33 [cluster-ClusterId{value='664c2ea9abaedb38d0202eec', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2461901}
2024-05-21 00:18:33 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 00:18:33 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:18:33 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 00:18:34 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 00:18:34 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 00:18:34 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 00:18:34 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:18:34 [restartedMain] INFO  : Disable delta property : false
2024-05-21 00:18:34 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 00:18:34 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 00:18:34 [restartedMain] INFO  : Application is null : false
2024-05-21 00:18:34 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 00:18:34 [restartedMain] INFO  : Application version is -1: true
2024-05-21 00:18:34 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 00:18:34 [restartedMain] INFO  : The response status is 200
2024-05-21 00:18:34 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 00:18:34 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 00:18:34 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716268714145 with initial instances count: 3
2024-05-21 00:18:34 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 00:18:34 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268714146, current=UP, previous=STARTING]
2024-05-21 00:18:34 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:18:34 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:18:34 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 00:18:34 [restartedMain] INFO  : Updating port to 8081
2024-05-21 00:18:34 [restartedMain] INFO  : Started TransactionsServiceApplication in 0.984 seconds (JVM running for 58.044)
2024-05-21 00:18:34 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-21 00:19:05 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 00:19:05 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268745403, current=DOWN, previous=UP]
2024-05-21 00:19:05 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:19:05 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:19:07 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 00:19:10 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 00:19:10 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - deregister  status: 200
2024-05-21 00:19:10 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 00:19:15 [restartedMain] INFO  : Starting TransactionsServiceApplication using Java 19.0.2 on valnaevis with PID 30512 (C:\Users\sammi\Documents\NTT GRUPAL\NTTBank\TransactionsService\target\classes started by sammi in C:\Users\sammi\Documents\NTT GRUPAL\NTTBank)
2024-05-21 00:19:15 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-21 00:19:15 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-21 00:19:15 [restartedMain] INFO  : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-05-21 00:19:15 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-21 00:19:15 [restartedMain] INFO  : Finished Spring Data repository scanning in 129 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-21 00:19:16 [restartedMain] INFO  : BeanFactory id=b2e4402b-ff73-3ea5-8ede-46c1d4375f2f
2024-05-21 00:19:16 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:19:16 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:19:16 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-21 00:19:16 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@101bf41f, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3acc1b2a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-21 00:19:16 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:19:16 [cluster-ClusterId{value='664c2ed4b590fe7d7477ce26', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:777}] to localhost:27017
2024-05-21 00:19:16 [cluster-rtt-ClusterId{value='664c2ed4b590fe7d7477ce26', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:778}] to localhost:27017
2024-05-21 00:19:16 [cluster-ClusterId{value='664c2ed4b590fe7d7477ce26', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=60753300}
2024-05-21 00:19:16 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-21 00:19:16 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-21 00:19:17 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-21 00:19:17 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-21 00:19:17 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-21 00:19:17 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-21 00:19:17 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-21 00:19:17 [restartedMain] INFO  : Disable delta property : false
2024-05-21 00:19:17 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-21 00:19:17 [restartedMain] INFO  : Force full registry fetch : false
2024-05-21 00:19:17 [restartedMain] INFO  : Application is null : false
2024-05-21 00:19:17 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-21 00:19:17 [restartedMain] INFO  : Application version is -1: true
2024-05-21 00:19:17 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-21 00:19:18 [restartedMain] INFO  : The response status is 200
2024-05-21 00:19:18 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-21 00:19:18 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-21 00:19:18 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716268758072 with initial instances count: 3
2024-05-21 00:19:18 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-21 00:19:18 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268758074, current=UP, previous=STARTING]
2024-05-21 00:19:18 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:19:18 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:19:18 [restartedMain] INFO  : Netty started on port 8081
2024-05-21 00:19:18 [restartedMain] INFO  : Updating port to 8081
2024-05-21 00:19:18 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.654 seconds (JVM running for 4.329)
2024-05-21 00:20:11 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-21 00:20:11 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268811354, current=DOWN, previous=UP]
2024-05-21 00:20:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081: registering service...
2024-05-21 00:20:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - registration status: 204
2024-05-21 00:20:11 [SpringApplicationShutdownHook] INFO  : Unregistering application ACCOUNTSSERVICE with eureka with status DOWN
2024-05-21 00:20:11 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268811376, current=DOWN, previous=UP]
2024-05-21 00:20:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService: registering service...
2024-05-21 00:20:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - registration status: 204
2024-05-21 00:20:11 [SpringApplicationShutdownHook] INFO  : Unregistering application CLIENTSERVICE with eureka with status DOWN
2024-05-21 00:20:11 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716268811427, current=DOWN, previous=UP]
2024-05-21 00:20:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083: registering service...
2024-05-21 00:20:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083 - registration status: 204
2024-05-21 00:20:13 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 00:20:13 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 00:20:13 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-21 00:20:16 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 00:20:16 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 37 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 50 more

2024-05-21 00:20:16 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 00:20:16 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 38 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 51 more

2024-05-21 00:20:16 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 00:20:16 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/ACCOUNTSSERVICE/192.168.0.11:accountsService": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 00:20:16 [SpringApplicationShutdownHook] ERROR : DiscoveryClient_ACCOUNTSSERVICE/192.168.0.11:accountsService - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 00:20:16 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 37 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 50 more

2024-05-21 00:20:16 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 00:20:16 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 00:20:16 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 38 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 51 more

2024-05-21 00:20:16 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 00:20:16 [SpringApplicationShutdownHook] ERROR : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:8081 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-21 00:20:16 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-21 00:20:16 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-21 00:20:16 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 39 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.connect0(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.base/java.net.Socket.connect(Socket.java:608)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 52 more

2024-05-21 00:20:16 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 00:20:16 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 40 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.connect0(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.base/java.net.Socket.connect(Socket.java:608)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 53 more

2024-05-21 00:20:16 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:8083": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-21 00:20:16 [SpringApplicationShutdownHook] ERROR : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:8083 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
2024-05-21 00:20:16 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
