2024-05-24 13:12:30 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-24 13:12:30 [restartedMain] INFO  : Fetching config from server at : http://localhost:8000
2024-05-24 13:12:32 [restartedMain] INFO  : Located environment: name=clientService, profiles=[default], label=null, version=1362ffdffce888a65e9436feed2dc5af63eedce9, state=null
2024-05-24 13:12:32 [restartedMain] INFO  : Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/B1nast1c/NTTBank/BankConfigServer/configClients/clientService.yml'}]
2024-05-24 13:12:32 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-24 13:12:32 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-24 13:12:32 [restartedMain] INFO  : Finished Spring Data repository scanning in 54 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-24 13:12:32 [restartedMain] INFO  : BeanFactory id=51dc9dc2-f4eb-3c0a-a3b3-e950abbffdcf
2024-05-24 13:12:32 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 13:12:32 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 13:12:32 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 13:12:33 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@54e52c23, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@644ea502]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-24 13:12:33 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-24 13:12:33 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-24 13:12:33 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-24 13:12:33 [cluster-ClusterId{value='6650d89120effd369c5b3248', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:78}] to localhost:27017
2024-05-24 13:12:33 [cluster-rtt-ClusterId{value='6650d89120effd369c5b3248', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:79}] to localhost:27017
2024-05-24 13:12:33 [cluster-ClusterId{value='6650d89120effd369c5b3248', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=61990000}
2024-05-24 13:12:33 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:80}] to localhost:27017
2024-05-24 13:12:34 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-24 13:12:34 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-24 13:12:34 [restartedMain] INFO  : Netty started on port 61766
2024-05-24 13:12:34 [restartedMain] INFO  : Updating port to 61766
2024-05-24 13:12:34 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-24 13:12:34 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-24 13:12:34 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-24 13:12:34 [restartedMain] INFO  : Disable delta property : false
2024-05-24 13:12:34 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-24 13:12:34 [restartedMain] INFO  : Force full registry fetch : false
2024-05-24 13:12:34 [restartedMain] INFO  : Application is null : false
2024-05-24 13:12:34 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-24 13:12:34 [restartedMain] INFO  : Application version is -1: true
2024-05-24 13:12:34 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-24 13:12:34 [restartedMain] INFO  : The response status is 200
2024-05-24 13:12:34 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-24 13:12:34 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-24 13:12:34 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716574354871 with initial instances count: 1
2024-05-24 13:12:34 [restartedMain] INFO  : Registering application CLIENTSERVICE with eureka with status UP
2024-05-24 13:12:34 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716574354873, current=UP, previous=STARTING]
2024-05-24 13:12:34 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:0: registering service...
2024-05-24 13:12:34 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:0 - registration status: 204
2024-05-24 13:12:35 [restartedMain] INFO  : Started FinalProjectApplication in 5.411 seconds (JVM running for 6.341)
2024-05-24 13:17:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 13:22:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 13:27:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 13:32:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 13:37:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 13:40:48 [nioEventLoopGroup-3-3] INFO  : Client found -> Patricio Flores
2024-05-24 13:40:55 [nioEventLoopGroup-3-3] INFO  : Client found -> Patricio Flores
2024-05-24 13:42:18 [nioEventLoopGroup-3-3] INFO  : Client found -> Patricio Flores
2024-05-24 13:42:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 13:43:04 [nioEventLoopGroup-3-3] INFO  : Client found -> Patricio Flores
2024-05-24 13:44:45 [nioEventLoopGroup-3-3] INFO  : Client found -> Patricio Flores
2024-05-24 13:44:47 [nioEventLoopGroup-3-3] INFO  : Client found -> Patricio Flores
2024-05-24 13:46:49 [nioEventLoopGroup-3-3] INFO  : Client found -> Patricio Flores
2024-05-24 13:47:29 [nioEventLoopGroup-3-3] INFO  : Client found -> Patricio Flores
2024-05-24 13:47:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 13:48:19 [nioEventLoopGroup-3-3] INFO  : Client found -> Patricio Flores
2024-05-24 13:48:34 [nioEventLoopGroup-3-3] INFO  : Client found -> Mas Ventas
2024-05-24 13:48:36 [nioEventLoopGroup-3-3] INFO  : Client found -> Mas Ventas
2024-05-24 13:52:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 13:53:13 [nioEventLoopGroup-3-3] INFO  : Client found -> Patricio Flores
2024-05-24 13:53:44 [nioEventLoopGroup-3-3] INFO  : Client found -> San Fernando
2024-05-24 13:53:45 [nioEventLoopGroup-3-3] INFO  : Client found -> San Fernando
2024-05-24 13:53:46 [nioEventLoopGroup-3-3] INFO  : Client found -> San Fernando
2024-05-24 13:57:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 14:02:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 14:07:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 14:12:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 14:17:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 14:22:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 14:27:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 14:32:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 14:37:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 14:42:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 14:47:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 14:52:34 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 15:08:12 [cluster-ClusterId{value='6650d89120effd369c5b3248', description='null'}-localhost:27017] INFO  : Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.exceptionCaught(NettyStream.java:427)
	at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
	at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
	at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
	at com.mongodb.connection.netty.NettyStream$ReadTimeoutTask.run(NettyStream.java:564)
	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
	at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:153)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.netty.handler.timeout.ReadTimeoutException: null
2024-05-24 15:08:13 [cluster-ClusterId{value='6650d89120effd369c5b3248', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:166}] to localhost:27017
2024-05-24 15:08:13 [cluster-ClusterId{value='6650d89120effd369c5b3248', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=202236900}
2024-05-24 15:08:41 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 15:10:46 [nioEventLoopGroup-3-5] INFO  : Opened connection [connectionId{localValue:5, serverValue:173}] to localhost:27017
2024-05-24 15:10:46 [nioEventLoopGroup-3-5] INFO  : Client found -> Patricio Flores
2024-05-24 15:10:50 [nioEventLoopGroup-3-5] INFO  : Client found -> Patricio Flores
2024-05-24 15:11:08 [nioEventLoopGroup-3-5] INFO  : Client found -> San Fernando
2024-05-24 15:11:09 [nioEventLoopGroup-3-5] INFO  : Client found -> San Fernando
2024-05-24 15:13:41 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 15:18:41 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 15:23:41 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 15:24:55 [nioEventLoopGroup-3-5] INFO  : Client found -> Patricio Flores
2024-05-24 15:25:12 [nioEventLoopGroup-3-5] INFO  : Client found -> Patricio Flores
2024-05-24 15:25:23 [nioEventLoopGroup-3-5] INFO  : Client found -> San Fernando
2024-05-24 15:25:34 [nioEventLoopGroup-3-5] INFO  : Client found -> San Fernando
2024-05-24 15:25:35 [nioEventLoopGroup-3-5] INFO  : Client found -> San Fernando
2024-05-24 15:28:41 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 15:33:41 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 15:38:41 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 15:43:41 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 15:45:35 [cluster-ClusterId{value='6650d89120effd369c5b3248', description='null'}-localhost:27017] INFO  : Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.exceptionCaught(NettyStream.java:427)
	at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
	at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
	at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
	at com.mongodb.connection.netty.NettyStream$ReadTimeoutTask.run(NettyStream.java:564)
	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
	at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:153)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.netty.handler.timeout.ReadTimeoutException: null
2024-05-24 15:45:36 [cluster-ClusterId{value='6650d89120effd369c5b3248', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:195}] to localhost:27017
2024-05-24 15:45:36 [cluster-ClusterId{value='6650d89120effd369c5b3248', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=378498900}
2024-05-24 15:50:32 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 15:52:58 [SpringApplicationShutdownHook] INFO  : Unregistering application CLIENTSERVICE with eureka with status DOWN
2024-05-24 15:52:58 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716583978831, current=DOWN, previous=UP]
2024-05-24 15:52:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:0: registering service...
2024-05-24 15:52:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:0 - registration status: 204
2024-05-24 15:52:58 [SpringApplicationShutdownHook] INFO  : Opened connection [connectionId{localValue:7, serverValue:203}] to localhost:27017
2024-05-24 15:53:01 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-24 15:53:04 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-24 15:53:04 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:0": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:0": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 39 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.connect0(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.base/java.net.Socket.connect(Socket.java:608)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 52 more

2024-05-24 15:53:04 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:0": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-24 15:53:04 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:0": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:0": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 40 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.connect0(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.base/java.net.Socket.connect(Socket.java:608)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 53 more

2024-05-24 15:53:04 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:0": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-24 15:53:04 [SpringApplicationShutdownHook] ERROR : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:0 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
2024-05-24 15:53:04 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-24 16:38:53 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-24 16:38:53 [restartedMain] INFO  : Fetching config from server at : http://localhost:8000
2024-05-24 16:38:55 [restartedMain] INFO  : Located environment: name=clientService, profiles=[default], label=null, version=f17424b021107583a8a0ed7c0d299240951060d8, state=null
2024-05-24 16:38:55 [restartedMain] INFO  : Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/B1nast1c/NTTBank/BankConfigServer/configClients/clientService.yml'}]
2024-05-24 16:38:55 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-24 16:38:55 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-24 16:38:55 [restartedMain] INFO  : Finished Spring Data repository scanning in 56 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-24 16:38:55 [restartedMain] INFO  : BeanFactory id=51dc9dc2-f4eb-3c0a-a3b3-e950abbffdcf
2024-05-24 16:38:55 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 16:38:55 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 16:38:55 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 16:38:55 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.22+9-LTS-219"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@6f58cac0, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@1a39ecf8]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-24 16:38:56 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-24 16:38:56 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-24 16:38:56 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-24 16:38:56 [cluster-rtt-ClusterId{value='665108efed6cfe17177e4e54', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:205}] to localhost:27017
2024-05-24 16:38:56 [cluster-ClusterId{value='665108efed6cfe17177e4e54', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:204}] to localhost:27017
2024-05-24 16:38:56 [cluster-ClusterId{value='665108efed6cfe17177e4e54', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=42931599}
2024-05-24 16:38:56 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:3, serverValue:206}] to localhost:27017
2024-05-24 16:38:56 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-24 16:38:57 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-24 16:38:57 [restartedMain] INFO  : Netty started on port 53982
2024-05-24 16:38:57 [restartedMain] INFO  : Updating port to 53982
2024-05-24 16:38:57 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-24 16:38:57 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-24 16:38:57 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-24 16:38:57 [restartedMain] INFO  : Disable delta property : false
2024-05-24 16:38:57 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-24 16:38:57 [restartedMain] INFO  : Force full registry fetch : false
2024-05-24 16:38:57 [restartedMain] INFO  : Application is null : false
2024-05-24 16:38:57 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-24 16:38:57 [restartedMain] INFO  : Application version is -1: true
2024-05-24 16:38:57 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-24 16:38:57 [restartedMain] INFO  : The response status is 200
2024-05-24 16:38:57 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-24 16:38:57 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-24 16:38:57 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716586737606 with initial instances count: 0
2024-05-24 16:38:57 [restartedMain] INFO  : Registering application CLIENTSERVICE with eureka with status UP
2024-05-24 16:38:57 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716586737608, current=UP, previous=STARTING]
2024-05-24 16:38:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:0: registering service...
2024-05-24 16:38:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:0 - registration status: 204
2024-05-24 16:38:57 [restartedMain] INFO  : Started FinalProjectApplication in 5.158 seconds (JVM running for 6.04)
2024-05-24 16:39:27 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Disable delta property : false
2024-05-24 16:39:27 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Single vip registry refresh property : null
2024-05-24 16:39:27 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Force full registry fetch : false
2024-05-24 16:39:27 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application is null : false
2024-05-24 16:39:27 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Registered Applications size is zero : true
2024-05-24 16:39:27 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Application version is -1: false
2024-05-24 16:39:27 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Getting all instance registry info from the eureka server
2024-05-24 16:39:27 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : The response status is 200
2024-05-24 16:39:53 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-24 16:39:53 [restartedMain] INFO  : Fetching config from server at : http://localhost:8000
2024-05-24 16:39:54 [restartedMain] INFO  : Located environment: name=transactionsService, profiles=[default], label=null, version=f17424b021107583a8a0ed7c0d299240951060d8, state=null
2024-05-24 16:39:54 [restartedMain] INFO  : Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/B1nast1c/NTTBank/BankConfigServer/configClients/transactionsService.yml'}]
2024-05-24 16:39:54 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-24 16:39:55 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-24 16:39:55 [restartedMain] INFO  : Finished Spring Data repository scanning in 109 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-24 16:39:55 [restartedMain] INFO  : BeanFactory id=ba26fdf7-288a-3a53-98cb-17769aab90d4
2024-05-24 16:39:55 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 16:39:55 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 16:39:55 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 16:39:56 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@4069932f, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@22116396]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-24 16:39:56 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@2f924277, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@22116396]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-24 16:39:56 [cluster-ClusterId{value='6651092c2c50113c5654b939', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:3, serverValue:214}] to localhost:27017
2024-05-24 16:39:56 [cluster-rtt-ClusterId{value='6651092c2c50113c5654b939', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:213}] to localhost:27017
2024-05-24 16:39:56 [cluster-rtt-ClusterId{value='6651092b2c50113c5654b938', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:211}] to localhost:27017
2024-05-24 16:39:56 [cluster-ClusterId{value='6651092b2c50113c5654b938', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:212}] to localhost:27017
2024-05-24 16:39:56 [cluster-ClusterId{value='6651092c2c50113c5654b939', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=49807701}
2024-05-24 16:39:56 [cluster-ClusterId{value='6651092b2c50113c5654b938', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=49818700}
2024-05-24 16:39:56 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-24 16:39:56 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-24 16:39:56 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-24 16:39:56 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-24 16:39:57 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-24 16:39:57 [restartedMain] INFO  : Netty started on port 54083
2024-05-24 16:39:57 [restartedMain] INFO  : Updating port to 54083
2024-05-24 16:39:57 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-24 16:39:57 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-24 16:39:57 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-24 16:39:57 [restartedMain] INFO  : Disable delta property : false
2024-05-24 16:39:57 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-24 16:39:57 [restartedMain] INFO  : Force full registry fetch : false
2024-05-24 16:39:57 [restartedMain] INFO  : Application is null : false
2024-05-24 16:39:57 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-24 16:39:57 [restartedMain] INFO  : Application version is -1: true
2024-05-24 16:39:57 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-24 16:39:57 [restartedMain] INFO  : The response status is 200
2024-05-24 16:39:57 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-24 16:39:57 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-24 16:39:57 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716586797431 with initial instances count: 3
2024-05-24 16:39:57 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-24 16:39:57 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716586797434, current=UP, previous=STARTING]
2024-05-24 16:39:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-24 16:39:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-24 16:39:57 [restartedMain] INFO  : Started TransactionsServiceApplication in 5.023 seconds (JVM running for 5.751)
2024-05-24 16:40:39 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:5, serverValue:215}] to localhost:27017
2024-05-24 16:41:20 [reactor-http-nio-2] WARN  : Invalid transaction type -> CARGO
2024-05-24 16:41:20 [reactor-http-nio-2] WARN  : The transaction type is not valid
2024-05-24 16:43:13 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-24 16:43:13 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716586993087, current=DOWN, previous=UP]
2024-05-24 16:43:13 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-24 16:43:13 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-24 16:43:15 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-24 16:43:18 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-24 16:43:18 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - deregister  status: 200
2024-05-24 16:43:18 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-24 16:43:22 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-24 16:43:22 [restartedMain] INFO  : Fetching config from server at : http://localhost:8000
2024-05-24 16:43:23 [restartedMain] INFO  : Located environment: name=transactionsService, profiles=[default], label=null, version=f17424b021107583a8a0ed7c0d299240951060d8, state=null
2024-05-24 16:43:23 [restartedMain] INFO  : Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/B1nast1c/NTTBank/BankConfigServer/configClients/transactionsService.yml'}]
2024-05-24 16:43:23 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-24 16:43:24 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-24 16:43:24 [restartedMain] INFO  : Finished Spring Data repository scanning in 96 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-24 16:43:24 [restartedMain] INFO  : BeanFactory id=ba26fdf7-288a-3a53-98cb-17769aab90d4
2024-05-24 16:43:24 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 16:43:24 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 16:43:24 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 16:43:24 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1cff78d4, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@ab4afc6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-24 16:43:24 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@43833e48, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@ab4afc6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-24 16:43:24 [cluster-rtt-ClusterId{value='665109fcafc10e56736261f7', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:218}] to localhost:27017
2024-05-24 16:43:24 [cluster-ClusterId{value='665109fcafc10e56736261f7', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:3, serverValue:219}] to localhost:27017
2024-05-24 16:43:24 [cluster-rtt-ClusterId{value='665109fcafc10e56736261f6', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:216}] to localhost:27017
2024-05-24 16:43:24 [cluster-ClusterId{value='665109fcafc10e56736261f6', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:217}] to localhost:27017
2024-05-24 16:43:24 [cluster-ClusterId{value='665109fcafc10e56736261f6', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=38966200}
2024-05-24 16:43:24 [cluster-ClusterId{value='665109fcafc10e56736261f7', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=38973001}
2024-05-24 16:43:25 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-24 16:43:25 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-24 16:43:25 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-24 16:43:25 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-24 16:43:25 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-24 16:43:25 [restartedMain] INFO  : Netty started on port 54413
2024-05-24 16:43:25 [restartedMain] INFO  : Updating port to 54413
2024-05-24 16:43:25 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-24 16:43:25 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-24 16:43:25 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-24 16:43:25 [restartedMain] INFO  : Disable delta property : false
2024-05-24 16:43:25 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-24 16:43:25 [restartedMain] INFO  : Force full registry fetch : false
2024-05-24 16:43:25 [restartedMain] INFO  : Application is null : false
2024-05-24 16:43:25 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-24 16:43:25 [restartedMain] INFO  : Application version is -1: true
2024-05-24 16:43:25 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-24 16:43:26 [restartedMain] INFO  : The response status is 200
2024-05-24 16:43:26 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-24 16:43:26 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-24 16:43:26 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716587006231 with initial instances count: 5
2024-05-24 16:43:26 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-24 16:43:26 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716587006234, current=UP, previous=STARTING]
2024-05-24 16:43:26 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-24 16:43:26 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-24 16:43:26 [restartedMain] INFO  : Started TransactionsServiceApplication in 4.587 seconds (JVM running for 5.285)
2024-05-24 16:43:57 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 16:44:30 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-24 16:44:30 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716587070943, current=DOWN, previous=UP]
2024-05-24 16:44:30 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-24 16:44:30 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-24 16:44:33 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-24 16:44:36 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-24 16:44:36 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - deregister  status: 200
2024-05-24 16:44:36 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-24 16:44:40 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-24 16:44:40 [restartedMain] INFO  : Fetching config from server at : http://localhost:8000
2024-05-24 16:44:41 [restartedMain] INFO  : Located environment: name=transactionsService, profiles=[default], label=null, version=f17424b021107583a8a0ed7c0d299240951060d8, state=null
2024-05-24 16:44:41 [restartedMain] INFO  : Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/B1nast1c/NTTBank/BankConfigServer/configClients/transactionsService.yml'}]
2024-05-24 16:44:41 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-24 16:44:41 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-24 16:44:42 [restartedMain] INFO  : Finished Spring Data repository scanning in 98 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-24 16:44:42 [restartedMain] INFO  : BeanFactory id=ba26fdf7-288a-3a53-98cb-17769aab90d4
2024-05-24 16:44:42 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 16:44:42 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 16:44:42 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 16:44:42 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1fc4dfa7, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2d81e2ae]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-24 16:44:42 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@2f924277, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2d81e2ae]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-24 16:44:42 [cluster-rtt-ClusterId{value='66510a4ad0299e0b6955d948', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:223}] to localhost:27017
2024-05-24 16:44:42 [cluster-ClusterId{value='66510a4ad0299e0b6955d948', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:222}] to localhost:27017
2024-05-24 16:44:42 [cluster-rtt-ClusterId{value='66510a4ad0299e0b6955d949', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:224}] to localhost:27017
2024-05-24 16:44:42 [cluster-ClusterId{value='66510a4ad0299e0b6955d949', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:3, serverValue:225}] to localhost:27017
2024-05-24 16:44:42 [cluster-ClusterId{value='66510a4ad0299e0b6955d948', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=38715900}
2024-05-24 16:44:42 [cluster-ClusterId{value='66510a4ad0299e0b6955d949', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=38700400}
2024-05-24 16:44:42 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-24 16:44:42 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-24 16:44:42 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-24 16:44:43 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-24 16:44:43 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-24 16:44:43 [restartedMain] INFO  : Netty started on port 54528
2024-05-24 16:44:43 [restartedMain] INFO  : Updating port to 54528
2024-05-24 16:44:43 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-24 16:44:43 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-24 16:44:43 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-24 16:44:43 [restartedMain] INFO  : Disable delta property : false
2024-05-24 16:44:43 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-24 16:44:43 [restartedMain] INFO  : Force full registry fetch : false
2024-05-24 16:44:43 [restartedMain] INFO  : Application is null : false
2024-05-24 16:44:43 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-24 16:44:43 [restartedMain] INFO  : Application version is -1: true
2024-05-24 16:44:43 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-24 16:44:43 [restartedMain] INFO  : The response status is 200
2024-05-24 16:44:43 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-24 16:44:43 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-24 16:44:43 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716587083833 with initial instances count: 4
2024-05-24 16:44:43 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-24 16:44:43 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716587083835, current=UP, previous=STARTING]
2024-05-24 16:44:43 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-24 16:44:43 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-24 16:44:43 [restartedMain] INFO  : Started TransactionsServiceApplication in 4.531 seconds (JVM running for 5.322)
2024-05-24 16:45:51 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-24 16:45:51 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716587151915, current=DOWN, previous=UP]
2024-05-24 16:45:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-24 16:45:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-24 16:45:54 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-24 16:45:57 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-24 16:45:57 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - deregister  status: 200
2024-05-24 16:45:57 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-24 16:46:01 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-24 16:46:01 [restartedMain] INFO  : Fetching config from server at : http://localhost:8000
2024-05-24 16:46:02 [restartedMain] INFO  : Located environment: name=transactionsService, profiles=[default], label=null, version=f17424b021107583a8a0ed7c0d299240951060d8, state=null
2024-05-24 16:46:02 [restartedMain] INFO  : Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/B1nast1c/NTTBank/BankConfigServer/configClients/transactionsService.yml'}]
2024-05-24 16:46:02 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-24 16:46:03 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-24 16:46:03 [restartedMain] INFO  : Finished Spring Data repository scanning in 97 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-24 16:46:03 [restartedMain] INFO  : BeanFactory id=ba26fdf7-288a-3a53-98cb-17769aab90d4
2024-05-24 16:46:03 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 16:46:03 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 16:46:03 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 16:46:03 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3f893ef1, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5061a25c]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-24 16:46:03 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@4046ad7, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5061a25c]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-24 16:46:03 [cluster-rtt-ClusterId{value='66510a9b3ca717651793db43', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:227}] to localhost:27017
2024-05-24 16:46:03 [cluster-rtt-ClusterId{value='66510a9b3ca717651793db42', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:228}] to localhost:27017
2024-05-24 16:46:03 [cluster-ClusterId{value='66510a9b3ca717651793db43', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:3, serverValue:229}] to localhost:27017
2024-05-24 16:46:03 [cluster-ClusterId{value='66510a9b3ca717651793db42', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:226}] to localhost:27017
2024-05-24 16:46:03 [cluster-ClusterId{value='66510a9b3ca717651793db43', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=43436300}
2024-05-24 16:46:03 [cluster-ClusterId{value='66510a9b3ca717651793db42', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=43445100}
2024-05-24 16:46:03 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-24 16:46:03 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-24 16:46:04 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-24 16:46:04 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-24 16:46:04 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-24 16:46:04 [restartedMain] INFO  : Netty started on port 54587
2024-05-24 16:46:04 [restartedMain] INFO  : Updating port to 54587
2024-05-24 16:46:04 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-24 16:46:04 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-24 16:46:04 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-24 16:46:04 [restartedMain] INFO  : Disable delta property : false
2024-05-24 16:46:04 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-24 16:46:04 [restartedMain] INFO  : Force full registry fetch : false
2024-05-24 16:46:04 [restartedMain] INFO  : Application is null : false
2024-05-24 16:46:04 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-24 16:46:04 [restartedMain] INFO  : Application version is -1: true
2024-05-24 16:46:04 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-24 16:46:05 [restartedMain] INFO  : The response status is 200
2024-05-24 16:46:05 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-24 16:46:05 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-24 16:46:05 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716587165047 with initial instances count: 4
2024-05-24 16:46:05 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-24 16:46:05 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716587165049, current=UP, previous=STARTING]
2024-05-24 16:46:05 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-24 16:46:05 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-24 16:46:05 [restartedMain] INFO  : Started TransactionsServiceApplication in 4.393 seconds (JVM running for 5.042)
2024-05-24 16:46:40 [reactor-http-nio-2] WARN  : Not found credit card
2024-05-24 16:46:40 [reactor-http-nio-2] ERROR : [82da1d50-1]  500 Server Error for HTTP POST "/transactions/create"
java.lang.IllegalStateException: Could not resolve view with name 'transactions/create'.
	at org.springframework.web.reactive.result.view.ViewResolutionResultHandler.lambda$resolveViews$3(ViewResolutionResultHandler.java:278)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Exception handler project.transactionsservice.infrastructure.exceptions.ErrorHandler#handleNotFoundAccount(NotFoundProduct), error="Credit card not found" [DispatcherHandler]
	*__checkpoint ⇢ HTTP POST "/transactions/create" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.web.reactive.result.view.ViewResolutionResultHandler.lambda$resolveViews$3(ViewResolutionResultHandler.java:278)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:113)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:129)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:368)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onComplete(FluxConcatMap.java:276)
		at reactor.core.publisher.Operators.complete(Operators.java:137)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:144)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2400)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2196)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2070)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:258)
		at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:347)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2400)
		at reactor.core.publisher.MonoZip$ZipInner.onSubscribe(MonoZip.java:336)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:129)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onError(Operators.java:2065)
		at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:142)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:439)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:493)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:768)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-24 16:46:55 [reactor-http-nio-2] WARN  : Not found credit card
2024-05-24 16:46:55 [reactor-http-nio-2] ERROR : [82da1d50-2]  500 Server Error for HTTP POST "/transactions/create"
java.lang.IllegalStateException: Could not resolve view with name 'transactions/create'.
	at org.springframework.web.reactive.result.view.ViewResolutionResultHandler.lambda$resolveViews$3(ViewResolutionResultHandler.java:278)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Exception handler project.transactionsservice.infrastructure.exceptions.ErrorHandler#handleNotFoundAccount(NotFoundProduct), error="Credit card not found" [DispatcherHandler]
	*__checkpoint ⇢ HTTP POST "/transactions/create" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.web.reactive.result.view.ViewResolutionResultHandler.lambda$resolveViews$3(ViewResolutionResultHandler.java:278)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:113)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:129)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:368)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onComplete(FluxConcatMap.java:276)
		at reactor.core.publisher.Operators.complete(Operators.java:137)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:144)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2400)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2196)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2070)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:258)
		at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:347)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2400)
		at reactor.core.publisher.MonoZip$ZipInner.onSubscribe(MonoZip.java:336)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:129)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onError(Operators.java:2065)
		at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:142)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:439)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:493)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:768)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-24 16:47:17 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-24 16:47:17 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716587237758, current=DOWN, previous=UP]
2024-05-24 16:47:17 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-24 16:47:17 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-24 16:47:19 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-24 16:47:22 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-24 16:47:22 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - deregister  status: 200
2024-05-24 16:47:22 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-24 16:47:27 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-24 16:47:27 [restartedMain] INFO  : Fetching config from server at : http://localhost:8000
2024-05-24 16:47:28 [restartedMain] INFO  : Located environment: name=transactionsService, profiles=[default], label=null, version=f17424b021107583a8a0ed7c0d299240951060d8, state=null
2024-05-24 16:47:28 [restartedMain] INFO  : Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/B1nast1c/NTTBank/BankConfigServer/configClients/transactionsService.yml'}]
2024-05-24 16:47:28 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-24 16:47:28 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-24 16:47:28 [restartedMain] INFO  : Finished Spring Data repository scanning in 96 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-24 16:47:29 [restartedMain] INFO  : BeanFactory id=ba26fdf7-288a-3a53-98cb-17769aab90d4
2024-05-24 16:47:29 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 16:47:29 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 16:47:29 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 16:47:29 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@e0c983, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2f49fdf5]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-24 16:47:29 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@23454fe8, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2f49fdf5]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-24 16:47:29 [cluster-ClusterId{value='66510af1c76c290fc603b21f', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:3, serverValue:232}] to localhost:27017
2024-05-24 16:47:29 [cluster-rtt-ClusterId{value='66510af1c76c290fc603b21e', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:233}] to localhost:27017
2024-05-24 16:47:29 [cluster-ClusterId{value='66510af1c76c290fc603b21e', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:231}] to localhost:27017
2024-05-24 16:47:29 [cluster-rtt-ClusterId{value='66510af1c76c290fc603b21f', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:234}] to localhost:27017
2024-05-24 16:47:29 [cluster-ClusterId{value='66510af1c76c290fc603b21f', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=37300600}
2024-05-24 16:47:29 [cluster-ClusterId{value='66510af1c76c290fc603b21e', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=37292300}
2024-05-24 16:47:29 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-24 16:47:29 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-24 16:47:29 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-24 16:47:30 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-24 16:47:30 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-24 16:47:30 [restartedMain] INFO  : Netty started on port 54668
2024-05-24 16:47:30 [restartedMain] INFO  : Updating port to 54668
2024-05-24 16:47:30 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-24 16:47:30 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-24 16:47:30 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-24 16:47:30 [restartedMain] INFO  : Disable delta property : false
2024-05-24 16:47:30 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-24 16:47:30 [restartedMain] INFO  : Force full registry fetch : false
2024-05-24 16:47:30 [restartedMain] INFO  : Application is null : false
2024-05-24 16:47:30 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-24 16:47:30 [restartedMain] INFO  : Application version is -1: true
2024-05-24 16:47:30 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-24 16:47:30 [restartedMain] INFO  : The response status is 200
2024-05-24 16:47:30 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-24 16:47:30 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-24 16:47:30 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716587250740 with initial instances count: 4
2024-05-24 16:47:30 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-24 16:47:30 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716587250743, current=UP, previous=STARTING]
2024-05-24 16:47:30 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-24 16:47:30 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-24 16:47:30 [restartedMain] INFO  : Started TransactionsServiceApplication in 4.353 seconds (JVM running for 5.008)
2024-05-24 16:48:11 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-24 16:48:11 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716587291830, current=DOWN, previous=UP]
2024-05-24 16:48:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-24 16:48:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-24 16:48:13 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-24 16:48:16 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-24 16:48:16 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - deregister  status: 200
2024-05-24 16:48:16 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-24 16:48:19 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-24 16:48:19 [restartedMain] INFO  : Fetching config from server at : http://localhost:8000
2024-05-24 16:48:21 [restartedMain] INFO  : Located environment: name=transactionsService, profiles=[default], label=null, version=f17424b021107583a8a0ed7c0d299240951060d8, state=null
2024-05-24 16:48:21 [restartedMain] INFO  : Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/B1nast1c/NTTBank/BankConfigServer/configClients/transactionsService.yml'}]
2024-05-24 16:48:21 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-24 16:48:21 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-24 16:48:21 [restartedMain] INFO  : Finished Spring Data repository scanning in 90 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-24 16:48:21 [restartedMain] INFO  : BeanFactory id=ba26fdf7-288a-3a53-98cb-17769aab90d4
2024-05-24 16:48:21 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 16:48:21 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 16:48:21 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 16:48:22 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@e0c983, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2f49fdf5]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-24 16:48:22 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@23454fe8, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2f49fdf5]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-24 16:48:22 [cluster-rtt-ClusterId{value='66510b265b671e22f67f29bc', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:238}] to localhost:27017
2024-05-24 16:48:22 [cluster-ClusterId{value='66510b265b671e22f67f29bd', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:3, serverValue:236}] to localhost:27017
2024-05-24 16:48:22 [cluster-ClusterId{value='66510b265b671e22f67f29bc', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:235}] to localhost:27017
2024-05-24 16:48:22 [cluster-rtt-ClusterId{value='66510b265b671e22f67f29bd', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:237}] to localhost:27017
2024-05-24 16:48:22 [cluster-ClusterId{value='66510b265b671e22f67f29bc', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=39491699}
2024-05-24 16:48:22 [cluster-ClusterId{value='66510b265b671e22f67f29bd', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=39497600}
2024-05-24 16:48:22 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-24 16:48:22 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-24 16:48:22 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-24 16:48:22 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-24 16:48:22 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-24 16:48:23 [restartedMain] INFO  : Netty started on port 54749
2024-05-24 16:48:23 [restartedMain] INFO  : Updating port to 54749
2024-05-24 16:48:23 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-24 16:48:23 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-24 16:48:23 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-24 16:48:23 [restartedMain] INFO  : Disable delta property : false
2024-05-24 16:48:23 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-24 16:48:23 [restartedMain] INFO  : Force full registry fetch : false
2024-05-24 16:48:23 [restartedMain] INFO  : Application is null : false
2024-05-24 16:48:23 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-24 16:48:23 [restartedMain] INFO  : Application version is -1: true
2024-05-24 16:48:23 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-24 16:48:23 [restartedMain] INFO  : The response status is 200
2024-05-24 16:48:23 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-24 16:48:23 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-24 16:48:23 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716587303326 with initial instances count: 5
2024-05-24 16:48:23 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-24 16:48:23 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716587303327, current=UP, previous=STARTING]
2024-05-24 16:48:23 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-24 16:48:23 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-24 16:48:23 [restartedMain] INFO  : Started TransactionsServiceApplication in 4.455 seconds (JVM running for 5.124)
2024-05-24 16:48:57 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 16:49:10 [reactor-http-nio-2] WARN  : Not found credit card
2024-05-24 16:49:10 [reactor-http-nio-2] WARN  : Credit card not found
2024-05-24 16:50:07 [reactor-http-nio-2] INFO  : A credit card was found while searching
2024-05-24 16:50:07 [reactor-http-nio-2] WARN  : 404 Not Found from PATCH http://192.168.0.11:54503/cards/update/
2024-05-24 16:52:09 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-24 16:52:09 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716587529907, current=DOWN, previous=UP]
2024-05-24 16:52:09 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-24 16:52:09 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-24 16:52:11 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-24 16:52:15 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-24 16:52:15 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - deregister  status: 200
2024-05-24 16:52:15 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-24 16:52:18 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-24 16:52:19 [restartedMain] INFO  : Fetching config from server at : http://localhost:8000
2024-05-24 16:52:20 [restartedMain] INFO  : Located environment: name=transactionsService, profiles=[default], label=null, version=f17424b021107583a8a0ed7c0d299240951060d8, state=null
2024-05-24 16:52:20 [restartedMain] INFO  : Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/B1nast1c/NTTBank/BankConfigServer/configClients/transactionsService.yml'}]
2024-05-24 16:52:20 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-24 16:52:20 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-24 16:52:20 [restartedMain] INFO  : Finished Spring Data repository scanning in 98 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-24 16:52:21 [restartedMain] INFO  : BeanFactory id=ba26fdf7-288a-3a53-98cb-17769aab90d4
2024-05-24 16:52:21 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 16:52:21 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 16:52:21 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 16:52:21 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3f893ef1, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5061a25c]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-24 16:52:21 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@4046ad7, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5061a25c]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-24 16:52:21 [cluster-ClusterId{value='66510c153fc95f46bdf0c868', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:240}] to localhost:27017
2024-05-24 16:52:21 [cluster-rtt-ClusterId{value='66510c153fc95f46bdf0c869', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:239}] to localhost:27017
2024-05-24 16:52:21 [cluster-ClusterId{value='66510c153fc95f46bdf0c869', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:3, serverValue:242}] to localhost:27017
2024-05-24 16:52:21 [cluster-rtt-ClusterId{value='66510c153fc95f46bdf0c868', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:241}] to localhost:27017
2024-05-24 16:52:21 [cluster-ClusterId{value='66510c153fc95f46bdf0c868', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=38157700}
2024-05-24 16:52:21 [cluster-ClusterId{value='66510c153fc95f46bdf0c869', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=38157399}
2024-05-24 16:52:21 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-24 16:52:21 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-24 16:52:21 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-24 16:52:22 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-24 16:52:22 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-24 16:52:22 [restartedMain] INFO  : Netty started on port 54913
2024-05-24 16:52:22 [restartedMain] INFO  : Updating port to 54913
2024-05-24 16:52:22 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-24 16:52:22 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-24 16:52:22 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-24 16:52:22 [restartedMain] INFO  : Disable delta property : false
2024-05-24 16:52:22 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-24 16:52:22 [restartedMain] INFO  : Force full registry fetch : false
2024-05-24 16:52:22 [restartedMain] INFO  : Application is null : false
2024-05-24 16:52:22 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-24 16:52:22 [restartedMain] INFO  : Application version is -1: true
2024-05-24 16:52:22 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-24 16:52:22 [restartedMain] INFO  : The response status is 200
2024-05-24 16:52:22 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-24 16:52:22 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-24 16:52:22 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716587542687 with initial instances count: 5
2024-05-24 16:52:22 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-24 16:52:22 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716587542689, current=UP, previous=STARTING]
2024-05-24 16:52:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-24 16:52:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-24 16:52:22 [restartedMain] INFO  : Started TransactionsServiceApplication in 4.399 seconds (JVM running for 5.056)
2024-05-24 16:52:37 [reactor-http-nio-2] INFO  : A credit card was found while searching
2024-05-24 16:52:37 [reactor-http-nio-2] WARN  : 404 Not Found from PUT http://192.168.0.11:54503/cards/update/
2024-05-24 16:53:57 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 16:54:45 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-24 16:54:45 [Thread-1] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-24 16:54:45 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716587685576, current=DOWN, previous=UP]
2024-05-24 16:54:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-24 16:54:45 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-24 16:54:47 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-24 16:54:50 [Thread-1] INFO  : Unregistering ...
2024-05-24 16:54:50 [Thread-1] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - deregister  status: 200
2024-05-24 16:54:50 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-24 16:54:51 [restartedMain] INFO  : Fetching config from server at : http://localhost:8000
2024-05-24 16:54:52 [restartedMain] INFO  : Located environment: name=transactionsService, profiles=[default], label=null, version=f17424b021107583a8a0ed7c0d299240951060d8, state=null
2024-05-24 16:54:52 [restartedMain] INFO  : Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/B1nast1c/NTTBank/BankConfigServer/configClients/transactionsService.yml'}]
2024-05-24 16:54:52 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-24 16:54:52 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-24 16:54:52 [restartedMain] INFO  : Finished Spring Data repository scanning in 24 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-24 16:54:52 [restartedMain] INFO  : BeanFactory id=ba26fdf7-288a-3a53-98cb-17769aab90d4
2024-05-24 16:54:52 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 16:54:52 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 16:54:52 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 16:54:52 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@5145cab9, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5061a25c]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-24 16:54:52 [cluster-rtt-ClusterId{value='66510cac3fc95f46bdf0c86a', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:244}] to localhost:27017
2024-05-24 16:54:52 [cluster-ClusterId{value='66510cac3fc95f46bdf0c86a', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:5, serverValue:243}] to localhost:27017
2024-05-24 16:54:52 [cluster-ClusterId{value='66510cac3fc95f46bdf0c86a', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3030299}
2024-05-24 16:54:52 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@52afdaa5, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5061a25c]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-24 16:54:52 [cluster-ClusterId{value='66510cac3fc95f46bdf0c86b', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:246}] to localhost:27017
2024-05-24 16:54:52 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-24 16:54:52 [cluster-rtt-ClusterId{value='66510cac3fc95f46bdf0c86b', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:8, serverValue:245}] to localhost:27017
2024-05-24 16:54:52 [cluster-ClusterId{value='66510cac3fc95f46bdf0c86b', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3350800}
2024-05-24 16:54:52 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-24 16:54:52 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-24 16:54:53 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-24 16:54:53 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-24 16:54:53 [restartedMain] INFO  : Netty started on port 55012
2024-05-24 16:54:53 [restartedMain] INFO  : Updating port to 55012
2024-05-24 16:54:53 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-24 16:54:53 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-24 16:54:53 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-24 16:54:53 [restartedMain] INFO  : Disable delta property : false
2024-05-24 16:54:53 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-24 16:54:53 [restartedMain] INFO  : Force full registry fetch : false
2024-05-24 16:54:53 [restartedMain] INFO  : Application is null : false
2024-05-24 16:54:53 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-24 16:54:53 [restartedMain] INFO  : Application version is -1: true
2024-05-24 16:54:53 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-24 16:54:53 [restartedMain] INFO  : The response status is 200
2024-05-24 16:54:53 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-24 16:54:53 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-24 16:54:53 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716587693598 with initial instances count: 5
2024-05-24 16:54:53 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-24 16:54:53 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716587693599, current=UP, previous=STARTING]
2024-05-24 16:54:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-24 16:54:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-24 16:54:53 [restartedMain] INFO  : Started TransactionsServiceApplication in 3.084 seconds (JVM running for 156.056)
2024-05-24 16:54:53 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-24 16:54:54 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-24 16:54:54 [Thread-16] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-24 16:54:54 [Thread-16] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716587694597, current=DOWN, previous=UP]
2024-05-24 16:54:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-24 16:54:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-24 16:54:56 [Thread-16] INFO  : Shutting down DiscoveryClient ...
2024-05-24 16:54:59 [Thread-16] INFO  : Unregistering ...
2024-05-24 16:54:59 [Thread-16] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - deregister  status: 200
2024-05-24 16:54:59 [Thread-16] INFO  : Completed shut down of DiscoveryClient
2024-05-24 16:54:59 [restartedMain] INFO  : Fetching config from server at : http://localhost:8000
2024-05-24 16:55:01 [restartedMain] INFO  : Located environment: name=transactionsService, profiles=[default], label=null, version=f17424b021107583a8a0ed7c0d299240951060d8, state=null
2024-05-24 16:55:01 [restartedMain] INFO  : Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/B1nast1c/NTTBank/BankConfigServer/configClients/transactionsService.yml'}]
2024-05-24 16:55:01 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-24 16:55:01 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-24 16:55:01 [restartedMain] INFO  : Finished Spring Data repository scanning in 11 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-24 16:55:01 [restartedMain] INFO  : BeanFactory id=ba26fdf7-288a-3a53-98cb-17769aab90d4
2024-05-24 16:55:01 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 16:55:01 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 16:55:01 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 16:55:01 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@7987c05b, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5061a25c]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-24 16:55:01 [cluster-rtt-ClusterId{value='66510cb53fc95f46bdf0c86c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:10, serverValue:248}] to localhost:27017
2024-05-24 16:55:01 [cluster-ClusterId{value='66510cb53fc95f46bdf0c86c', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:9, serverValue:247}] to localhost:27017
2024-05-24 16:55:01 [cluster-ClusterId{value='66510cb53fc95f46bdf0c86c', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2842300}
2024-05-24 16:55:01 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@6a9f4dbb, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5061a25c]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-24 16:55:01 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-24 16:55:01 [cluster-rtt-ClusterId{value='66510cb53fc95f46bdf0c86d', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:12, serverValue:249}] to localhost:27017
2024-05-24 16:55:01 [cluster-ClusterId{value='66510cb53fc95f46bdf0c86d', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:11, serverValue:250}] to localhost:27017
2024-05-24 16:55:01 [cluster-ClusterId{value='66510cb53fc95f46bdf0c86d', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1196001}
2024-05-24 16:55:01 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-24 16:55:01 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-24 16:55:01 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-24 16:55:01 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-24 16:55:01 [restartedMain] INFO  : Netty started on port 55025
2024-05-24 16:55:01 [restartedMain] INFO  : Updating port to 55025
2024-05-24 16:55:01 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-24 16:55:01 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-24 16:55:01 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-24 16:55:01 [restartedMain] INFO  : Disable delta property : false
2024-05-24 16:55:01 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-24 16:55:01 [restartedMain] INFO  : Force full registry fetch : false
2024-05-24 16:55:01 [restartedMain] INFO  : Application is null : false
2024-05-24 16:55:01 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-24 16:55:01 [restartedMain] INFO  : Application version is -1: true
2024-05-24 16:55:01 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-24 16:55:01 [restartedMain] INFO  : The response status is 200
2024-05-24 16:55:01 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-24 16:55:01 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-24 16:55:01 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716587701697 with initial instances count: 4
2024-05-24 16:55:01 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-24 16:55:01 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716587701697, current=UP, previous=STARTING]
2024-05-24 16:55:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-24 16:55:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-24 16:55:01 [restartedMain] INFO  : Started TransactionsServiceApplication in 2.094 seconds (JVM running for 164.064)
2024-05-24 16:55:01 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-24 16:55:50 [reactor-http-nio-2] INFO  : A credit card was found while searching
2024-05-24 16:55:50 [reactor-http-nio-2] WARN  : 404 Not Found from PUT http://192.168.0.11:54503/cards/update/
2024-05-24 16:58:57 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 16:58:59 [reactor-http-nio-2] INFO  : A credit card was found while searching
2024-05-24 16:58:59 [reactor-http-nio-2] WARN  : 404 Not Found from PUT http://192.168.0.11:54503/cards/update/
2024-05-24 17:00:01 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 17:03:44 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-24 17:03:44 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716588224665, current=DOWN, previous=UP]
2024-05-24 17:03:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-24 17:03:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-24 17:03:46 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-24 17:03:49 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-24 17:03:49 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - deregister  status: 200
2024-05-24 17:03:49 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-24 17:03:54 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-24 17:03:54 [restartedMain] INFO  : Fetching config from server at : http://localhost:8000
2024-05-24 17:03:55 [restartedMain] INFO  : Located environment: name=transactionsService, profiles=[default], label=null, version=f17424b021107583a8a0ed7c0d299240951060d8, state=null
2024-05-24 17:03:55 [restartedMain] INFO  : Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/B1nast1c/NTTBank/BankConfigServer/configClients/transactionsService.yml'}]
2024-05-24 17:03:55 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-24 17:03:56 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-24 17:03:56 [restartedMain] INFO  : Finished Spring Data repository scanning in 114 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-24 17:03:56 [restartedMain] INFO  : BeanFactory id=ba26fdf7-288a-3a53-98cb-17769aab90d4
2024-05-24 17:03:56 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 17:03:56 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 17:03:56 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 17:03:57 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@66432822, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@11dd5e6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-24 17:03:57 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@58597e80, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@11dd5e6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-24 17:03:57 [cluster-rtt-ClusterId{value='66510ecd33fea912f0a183be', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:3, serverValue:254}] to localhost:27017
2024-05-24 17:03:57 [cluster-rtt-ClusterId{value='66510ecc33fea912f0a183bd', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:253}] to localhost:27017
2024-05-24 17:03:57 [cluster-ClusterId{value='66510ecd33fea912f0a183be', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:251}] to localhost:27017
2024-05-24 17:03:57 [cluster-ClusterId{value='66510ecc33fea912f0a183bd', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:252}] to localhost:27017
2024-05-24 17:03:57 [cluster-ClusterId{value='66510ecc33fea912f0a183bd', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=59661600}
2024-05-24 17:03:57 [cluster-ClusterId{value='66510ecd33fea912f0a183be', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=59552300}
2024-05-24 17:03:57 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-24 17:03:57 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 17:03:57 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-24 17:03:57 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-24 17:03:58 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-24 17:03:58 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-24 17:03:58 [restartedMain] INFO  : Netty started on port 56629
2024-05-24 17:03:58 [restartedMain] INFO  : Updating port to 56629
2024-05-24 17:03:58 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-24 17:03:58 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-24 17:03:58 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-24 17:03:58 [restartedMain] INFO  : Disable delta property : false
2024-05-24 17:03:58 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-24 17:03:58 [restartedMain] INFO  : Force full registry fetch : false
2024-05-24 17:03:58 [restartedMain] INFO  : Application is null : false
2024-05-24 17:03:58 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-24 17:03:58 [restartedMain] INFO  : Application version is -1: true
2024-05-24 17:03:58 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-24 17:03:59 [restartedMain] INFO  : The response status is 200
2024-05-24 17:03:59 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-24 17:03:59 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-24 17:03:59 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716588239140 with initial instances count: 5
2024-05-24 17:03:59 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-24 17:03:59 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716588239141, current=UP, previous=STARTING]
2024-05-24 17:03:59 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-24 17:03:59 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-24 17:03:59 [restartedMain] INFO  : Started TransactionsServiceApplication in 5.713 seconds (JVM running for 6.419)
2024-05-24 17:04:05 [reactor-http-nio-2] INFO  : A credit card was found while searching
2024-05-24 17:04:05 [reactor-http-nio-2] WARN  : Credit card not found
2024-05-24 17:04:31 [File Watcher] INFO  : Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2024-05-24 17:04:31 [Thread-1] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-24 17:04:31 [Thread-1] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716588271547, current=DOWN, previous=UP]
2024-05-24 17:04:31 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-24 17:04:31 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-24 17:04:33 [Thread-1] INFO  : Shutting down DiscoveryClient ...
2024-05-24 17:04:36 [Thread-1] INFO  : Unregistering ...
2024-05-24 17:04:36 [Thread-1] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - deregister  status: 200
2024-05-24 17:04:36 [Thread-1] INFO  : Completed shut down of DiscoveryClient
2024-05-24 17:04:36 [restartedMain] INFO  : Fetching config from server at : http://localhost:8000
2024-05-24 17:04:38 [restartedMain] INFO  : Located environment: name=transactionsService, profiles=[default], label=null, version=f17424b021107583a8a0ed7c0d299240951060d8, state=null
2024-05-24 17:04:38 [restartedMain] INFO  : Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/B1nast1c/NTTBank/BankConfigServer/configClients/transactionsService.yml'}]
2024-05-24 17:04:38 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-24 17:04:38 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-24 17:04:38 [restartedMain] INFO  : Finished Spring Data repository scanning in 17 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-24 17:04:38 [restartedMain] INFO  : BeanFactory id=ba26fdf7-288a-3a53-98cb-17769aab90d4
2024-05-24 17:04:38 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 17:04:38 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 17:04:38 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 17:04:38 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@2d7e294e, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@11dd5e6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-24 17:04:38 [cluster-rtt-ClusterId{value='66510ef633fea912f0a183bf', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:6, serverValue:255}] to localhost:27017
2024-05-24 17:04:38 [cluster-ClusterId{value='66510ef633fea912f0a183bf', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:5, serverValue:256}] to localhost:27017
2024-05-24 17:04:38 [cluster-ClusterId{value='66510ef633fea912f0a183bf', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4087100}
2024-05-24 17:04:38 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@6dab7eb7, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@11dd5e6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-24 17:04:38 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-24 17:04:38 [cluster-ClusterId{value='66510ef633fea912f0a183c0', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:7, serverValue:257}] to localhost:27017
2024-05-24 17:04:38 [cluster-rtt-ClusterId{value='66510ef633fea912f0a183c0', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:8, serverValue:258}] to localhost:27017
2024-05-24 17:04:38 [cluster-ClusterId{value='66510ef633fea912f0a183c0', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3445800}
2024-05-24 17:04:38 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-24 17:04:38 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-24 17:04:38 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-24 17:04:38 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-24 17:04:38 [restartedMain] INFO  : Netty started on port 56729
2024-05-24 17:04:38 [restartedMain] INFO  : Updating port to 56729
2024-05-24 17:04:38 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-24 17:04:38 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-24 17:04:38 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-24 17:04:38 [restartedMain] INFO  : Disable delta property : false
2024-05-24 17:04:38 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-24 17:04:38 [restartedMain] INFO  : Force full registry fetch : false
2024-05-24 17:04:38 [restartedMain] INFO  : Application is null : false
2024-05-24 17:04:38 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-24 17:04:38 [restartedMain] INFO  : Application version is -1: true
2024-05-24 17:04:38 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-24 17:04:38 [restartedMain] INFO  : The response status is 200
2024-05-24 17:04:38 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-24 17:04:38 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-24 17:04:38 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716588278969 with initial instances count: 5
2024-05-24 17:04:38 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-24 17:04:38 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716588278970, current=UP, previous=STARTING]
2024-05-24 17:04:38 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-24 17:04:38 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-24 17:04:39 [restartedMain] INFO  : Started TransactionsServiceApplication in 2.4 seconds (JVM running for 46.21)
2024-05-24 17:04:39 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-24 17:04:40 [File Watcher] INFO  : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-05-24 17:04:40 [Thread-16] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-24 17:04:40 [Thread-16] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716588280028, current=DOWN, previous=UP]
2024-05-24 17:04:40 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-24 17:04:40 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-24 17:04:42 [Thread-16] INFO  : Shutting down DiscoveryClient ...
2024-05-24 17:04:45 [Thread-16] INFO  : Unregistering ...
2024-05-24 17:04:45 [Thread-16] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - deregister  status: 200
2024-05-24 17:04:45 [Thread-16] INFO  : Completed shut down of DiscoveryClient
2024-05-24 17:04:45 [restartedMain] INFO  : Fetching config from server at : http://localhost:8000
2024-05-24 17:04:46 [restartedMain] INFO  : Located environment: name=transactionsService, profiles=[default], label=null, version=f17424b021107583a8a0ed7c0d299240951060d8, state=null
2024-05-24 17:04:46 [restartedMain] INFO  : Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/B1nast1c/NTTBank/BankConfigServer/configClients/transactionsService.yml'}]
2024-05-24 17:04:46 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-24 17:04:46 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-24 17:04:46 [restartedMain] INFO  : Finished Spring Data repository scanning in 11 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-24 17:04:46 [restartedMain] INFO  : BeanFactory id=ba26fdf7-288a-3a53-98cb-17769aab90d4
2024-05-24 17:04:46 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 17:04:46 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 17:04:46 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 17:04:46 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3d080c0f, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@11dd5e6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-24 17:04:46 [cluster-ClusterId{value='66510efe33fea912f0a183c1', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:9, serverValue:259}] to localhost:27017
2024-05-24 17:04:46 [cluster-rtt-ClusterId{value='66510efe33fea912f0a183c1', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:10, serverValue:260}] to localhost:27017
2024-05-24 17:04:46 [cluster-ClusterId{value='66510efe33fea912f0a183c1', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2492500}
2024-05-24 17:04:46 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@62af7870, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@11dd5e6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-24 17:04:46 [cluster-rtt-ClusterId{value='66510efe33fea912f0a183c2', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:12, serverValue:262}] to localhost:27017
2024-05-24 17:04:46 [cluster-ClusterId{value='66510efe33fea912f0a183c2', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:11, serverValue:261}] to localhost:27017
2024-05-24 17:04:46 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-24 17:04:46 [cluster-ClusterId{value='66510efe33fea912f0a183c2', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1680500}
2024-05-24 17:04:46 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-24 17:04:46 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-24 17:04:47 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-24 17:04:47 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-24 17:04:47 [restartedMain] INFO  : Netty started on port 56738
2024-05-24 17:04:47 [restartedMain] INFO  : Updating port to 56738
2024-05-24 17:04:47 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-24 17:04:47 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-24 17:04:47 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-24 17:04:47 [restartedMain] INFO  : Disable delta property : false
2024-05-24 17:04:47 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-24 17:04:47 [restartedMain] INFO  : Force full registry fetch : false
2024-05-24 17:04:47 [restartedMain] INFO  : Application is null : false
2024-05-24 17:04:47 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-24 17:04:47 [restartedMain] INFO  : Application version is -1: true
2024-05-24 17:04:47 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-24 17:04:47 [restartedMain] INFO  : The response status is 200
2024-05-24 17:04:47 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-24 17:04:47 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-24 17:04:47 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716588287298 with initial instances count: 5
2024-05-24 17:04:47 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-24 17:04:47 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716588287298, current=UP, previous=STARTING]
2024-05-24 17:04:47 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-24 17:04:47 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-24 17:04:47 [restartedMain] INFO  : Started TransactionsServiceApplication in 2.269 seconds (JVM running for 54.539)
2024-05-24 17:04:47 [restartedMain] INFO  : Condition evaluation unchanged
2024-05-24 17:06:05 [reactor-http-nio-2] INFO  : A credit card was found while searching
2024-05-24 17:06:05 [reactor-http-nio-2] WARN  : Credit card not found
2024-05-24 17:08:11 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-24 17:08:11 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716588491519, current=DOWN, previous=UP]
2024-05-24 17:08:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-24 17:08:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-24 17:08:13 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-24 17:08:16 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-24 17:08:16 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - deregister  status: 200
2024-05-24 17:08:16 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-24 17:08:21 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-24 17:08:21 [restartedMain] INFO  : Fetching config from server at : http://localhost:8000
2024-05-24 17:08:23 [restartedMain] INFO  : Located environment: name=transactionsService, profiles=[default], label=null, version=f17424b021107583a8a0ed7c0d299240951060d8, state=null
2024-05-24 17:08:23 [restartedMain] INFO  : Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/B1nast1c/NTTBank/BankConfigServer/configClients/transactionsService.yml'}]
2024-05-24 17:08:23 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-24 17:08:23 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-24 17:08:23 [restartedMain] INFO  : Finished Spring Data repository scanning in 97 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-24 17:08:23 [restartedMain] INFO  : BeanFactory id=ba26fdf7-288a-3a53-98cb-17769aab90d4
2024-05-24 17:08:23 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 17:08:23 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 17:08:23 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 17:08:24 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3f893ef1, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5061a25c]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-24 17:08:24 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@4046ad7, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5061a25c]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-24 17:08:24 [cluster-rtt-ClusterId{value='66510fd7d2a9c3697a7611ea', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:266}] to localhost:27017
2024-05-24 17:08:24 [cluster-rtt-ClusterId{value='66510fd8d2a9c3697a7611eb', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:264}] to localhost:27017
2024-05-24 17:08:24 [cluster-ClusterId{value='66510fd8d2a9c3697a7611eb', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:3, serverValue:263}] to localhost:27017
2024-05-24 17:08:24 [cluster-ClusterId{value='66510fd7d2a9c3697a7611ea', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:265}] to localhost:27017
2024-05-24 17:08:24 [cluster-ClusterId{value='66510fd8d2a9c3697a7611eb', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=38174800}
2024-05-24 17:08:24 [cluster-ClusterId{value='66510fd7d2a9c3697a7611ea', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=38175400}
2024-05-24 17:08:24 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-24 17:08:24 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-24 17:08:24 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-24 17:08:24 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-24 17:08:24 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-24 17:08:25 [restartedMain] INFO  : Netty started on port 56943
2024-05-24 17:08:25 [restartedMain] INFO  : Updating port to 56943
2024-05-24 17:08:25 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-24 17:08:25 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-24 17:08:25 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-24 17:08:25 [restartedMain] INFO  : Disable delta property : false
2024-05-24 17:08:25 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-24 17:08:25 [restartedMain] INFO  : Force full registry fetch : false
2024-05-24 17:08:25 [restartedMain] INFO  : Application is null : false
2024-05-24 17:08:25 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-24 17:08:25 [restartedMain] INFO  : Application version is -1: true
2024-05-24 17:08:25 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-24 17:08:25 [restartedMain] INFO  : The response status is 200
2024-05-24 17:08:25 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-24 17:08:25 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-24 17:08:25 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716588505276 with initial instances count: 5
2024-05-24 17:08:25 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-24 17:08:25 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716588505278, current=UP, previous=STARTING]
2024-05-24 17:08:25 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-24 17:08:25 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-24 17:08:25 [restartedMain] INFO  : Started TransactionsServiceApplication in 4.459 seconds (JVM running for 5.113)
2024-05-24 17:08:56 [reactor-http-nio-2] INFO  : A credit card was found while searching
2024-05-24 17:08:56 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:5, serverValue:267}] to localhost:27017
2024-05-24 17:08:56 [nioEventLoopGroup-3-3] INFO  : Account created successfully
2024-05-24 17:08:57 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 17:11:00 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-24 17:11:00 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716588660247, current=DOWN, previous=UP]
2024-05-24 17:11:00 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-24 17:11:00 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-24 17:11:02 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-24 17:11:05 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-24 17:11:05 [SpringApplicationShutdownHook] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - deregister  status: 200
2024-05-24 17:11:05 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-24 17:11:09 [restartedMain] INFO  : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-05-24 17:11:10 [restartedMain] INFO  : Fetching config from server at : http://localhost:8000
2024-05-24 17:11:11 [restartedMain] INFO  : Located environment: name=transactionsService, profiles=[default], label=null, version=f17424b021107583a8a0ed7c0d299240951060d8, state=null
2024-05-24 17:11:11 [restartedMain] INFO  : Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/B1nast1c/NTTBank/BankConfigServer/configClients/transactionsService.yml'}]
2024-05-24 17:11:11 [restartedMain] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-05-24 17:11:11 [restartedMain] INFO  : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2024-05-24 17:11:11 [restartedMain] INFO  : Finished Spring Data repository scanning in 97 ms. Found 1 Reactive MongoDB repository interfaces.
2024-05-24 17:11:12 [restartedMain] INFO  : BeanFactory id=ba26fdf7-288a-3a53-98cb-17769aab90d4
2024-05-24 17:11:12 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 17:11:12 [restartedMain] INFO  : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 17:11:12 [restartedMain] INFO  : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-05-24 17:11:12 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3f893ef1, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5061a25c]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-24 17:11:12 [restartedMain] INFO  : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./19.0.2+7-FR"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@4046ad7, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5061a25c]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-05-24 17:11:12 [cluster-ClusterId{value='665110802c19ac3c6ae92a99', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:3, serverValue:270}] to localhost:27017
2024-05-24 17:11:12 [cluster-rtt-ClusterId{value='665110802c19ac3c6ae92a99', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:4, serverValue:268}] to localhost:27017
2024-05-24 17:11:12 [cluster-ClusterId{value='665110802c19ac3c6ae92a98', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:1, serverValue:269}] to localhost:27017
2024-05-24 17:11:12 [cluster-rtt-ClusterId{value='665110802c19ac3c6ae92a98', description='null'}-localhost:27017] INFO  : Opened connection [connectionId{localValue:2, serverValue:271}] to localhost:27017
2024-05-24 17:11:12 [cluster-ClusterId{value='665110802c19ac3c6ae92a99', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=36891600}
2024-05-24 17:11:12 [cluster-ClusterId{value='665110802c19ac3c6ae92a98', description='null'}-localhost:27017] INFO  : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=36908600}
2024-05-24 17:11:12 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-24 17:11:12 [restartedMain] WARN  : Unable to start LiveReload server
2024-05-24 17:11:12 [restartedMain] WARN  : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
2024-05-24 17:11:13 [restartedMain] INFO  : Eureka HTTP Client uses RestTemplate.
2024-05-24 17:11:13 [restartedMain] WARN  : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-24 17:11:13 [restartedMain] INFO  : Netty started on port 57106
2024-05-24 17:11:13 [restartedMain] INFO  : Updating port to 57106
2024-05-24 17:11:13 [restartedMain] INFO  : Setting initial instance status as: STARTING
2024-05-24 17:11:13 [restartedMain] INFO  : Initializing Eureka in region us-east-1
2024-05-24 17:11:13 [restartedMain] INFO  : Resolving eureka endpoints via configuration
2024-05-24 17:11:13 [restartedMain] INFO  : Disable delta property : false
2024-05-24 17:11:13 [restartedMain] INFO  : Single vip registry refresh property : null
2024-05-24 17:11:13 [restartedMain] INFO  : Force full registry fetch : false
2024-05-24 17:11:13 [restartedMain] INFO  : Application is null : false
2024-05-24 17:11:13 [restartedMain] INFO  : Registered Applications size is zero : true
2024-05-24 17:11:13 [restartedMain] INFO  : Application version is -1: true
2024-05-24 17:11:13 [restartedMain] INFO  : Getting all instance registry info from the eureka server
2024-05-24 17:11:13 [restartedMain] INFO  : The response status is 200
2024-05-24 17:11:13 [restartedMain] INFO  : Starting heartbeat executor: renew interval is: 30
2024-05-24 17:11:13 [restartedMain] INFO  : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-24 17:11:13 [restartedMain] INFO  : Discovery Client initialized at timestamp 1716588673836 with initial instances count: 5
2024-05-24 17:11:13 [restartedMain] INFO  : Registering application TRANSACTIONSSERVICE with eureka with status UP
2024-05-24 17:11:13 [restartedMain] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716588673838, current=UP, previous=STARTING]
2024-05-24 17:11:13 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-24 17:11:13 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-24 17:11:13 [restartedMain] INFO  : Started TransactionsServiceApplication in 4.808 seconds (JVM running for 5.476)
2024-05-24 17:12:55 [reactor-http-nio-2] WARN  : Not found credit
2024-05-24 17:12:55 [reactor-http-nio-2] WARN  : Credit not found
2024-05-24 17:13:34 [reactor-http-nio-2] INFO  : A credit was found while searching
2024-05-24 17:13:35 [nioEventLoopGroup-3-3] INFO  : Opened connection [connectionId{localValue:5, serverValue:272}] to localhost:27017
2024-05-24 17:13:35 [nioEventLoopGroup-3-3] INFO  : Account created successfully
2024-05-24 17:13:57 [AsyncResolver-bootstrap-executor-0] INFO  : Resolving eureka endpoints via configuration
2024-05-24 17:14:17 [reactor-http-nio-2] INFO  : A credit card was found while searching
2024-05-24 17:14:17 [reactor-http-nio-2] WARN  : Credit card charge amount is too large
2024-05-24 17:14:29 [reactor-http-nio-2] INFO  : A credit card was found while searching
2024-05-24 17:14:29 [nioEventLoopGroup-3-3] INFO  : Account created successfully
2024-05-24 17:14:42 [SpringApplicationShutdownHook] INFO  : Unregistering application TRANSACTIONSSERVICE with eureka with status DOWN
2024-05-24 17:14:42 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716588882243, current=DOWN, previous=UP]
2024-05-24 17:14:42 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0: registering service...
2024-05-24 17:14:42 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - registration status: 204
2024-05-24 17:14:42 [SpringApplicationShutdownHook] INFO  : Unregistering application CLIENTSERVICE with eureka with status DOWN
2024-05-24 17:14:42 [SpringApplicationShutdownHook] INFO  : Saw local status change event StatusChangeEvent [timestamp=1716588882285, current=DOWN, previous=UP]
2024-05-24 17:14:42 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:0: registering service...
2024-05-24 17:14:42 [DiscoveryClient-InstanceInfoReplicator-0] INFO  : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:0 - registration status: 204
2024-05-24 17:14:43 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getDelta(RestTemplateEurekaHttpClient.java:155)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 22 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 35 more

2024-05-24 17:14:43 [DiscoveryClient-HeartbeatExecutor-0] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on PUT request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0": Se ha anulado una conexión establecida por el software en su equipo host.; nested exception is java.net.SocketException: Se ha anulado una conexión establecida por el software en su equipo host. stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0": Se ha anulado una conexión establecida por el software en su equipo host.; nested exception is java.net.SocketException: Se ha anulado una conexión establecida por el software en su equipo host.
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.net.SocketException: Se ha anulado una conexión establecida por el software en su equipo host.
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:315)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:340)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:789)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:1025)
	at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:137)
	at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:153)
	at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:280)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:163)
	at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:157)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:272)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 19 more

2024-05-24 17:14:43 [DiscoveryClient-CacheRefreshExecutor-0] WARN  : Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-24 17:14:44 [DiscoveryClient-HeartbeatExecutor-0] WARN  : Request execution failed with message: I/O error on PUT request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0": Se ha anulado una conexión establecida por el software en su equipo host.; nested exception is java.net.SocketException: Se ha anulado una conexión establecida por el software en su equipo host.
2024-05-24 17:14:44 [DiscoveryClient-HeartbeatExecutor-0] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 20 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 33 more

2024-05-24 17:14:44 [DiscoveryClient-HeartbeatExecutor-0] WARN  : Request execution failed with message: I/O error on PUT request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-24 17:14:44 [DiscoveryClient-HeartbeatExecutor-0] ERROR : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-24 17:14:44 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getDelta(RestTemplateEurekaHttpClient.java:155)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 23 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 36 more

2024-05-24 17:14:44 [DiscoveryClient-CacheRefreshExecutor-0] WARN  : Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-24 17:14:44 [DiscoveryClient-CacheRefreshExecutor-0] INFO  : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)

2024-05-24 17:14:44 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-24 17:14:44 [SpringApplicationShutdownHook] INFO  : Shutting down DiscoveryClient ...
2024-05-24 17:14:47 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-24 17:14:47 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 38 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:576)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:666)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 51 more

2024-05-24 17:14:47 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-24 17:14:47 [SpringApplicationShutdownHook] ERROR : DiscoveryClient_TRANSACTIONSSERVICE/192.168.0.11:transactionsService:0 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-05-24 17:14:47 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
2024-05-24 17:14:47 [SpringApplicationShutdownHook] INFO  : Unregistering ...
2024-05-24 17:14:47 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:0": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:0": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 39 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.connect0(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.base/java.net.Socket.connect(Socket.java:608)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 52 more

2024-05-24 17:14:47 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:0": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-24 17:14:47 [SpringApplicationShutdownHook] INFO  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:0": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:0": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
	... 40 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.connect0(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.base/java.net.Socket.connect(Socket.java:608)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 53 more

2024-05-24 17:14:47 [SpringApplicationShutdownHook] WARN  : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CLIENTSERVICE/192.168.0.11:clientService:0": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2024-05-24 17:14:47 [SpringApplicationShutdownHook] ERROR : DiscoveryClient_CLIENTSERVICE/192.168.0.11:clientService:0 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1120)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1086)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1032)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
2024-05-24 17:14:47 [SpringApplicationShutdownHook] INFO  : Completed shut down of DiscoveryClient
